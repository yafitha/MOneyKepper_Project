<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.SfRichTextBoxAdv.UWP</name>
    </assembly>
    <members>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.ConvertToDocument(Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv,System.IO.Stream,Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType)">
            <summary>
            Return the Document from the DocumentAdv in RTE
            </summary>
            <param name="richText"></param>
            <param name="fileStream"></param>
            <param name="type"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.GetWordDocument(Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv)">
            <summary>
            Get Word document
            </summary>
            <param name="documentAdv"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeBackground(Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv,Syncfusion.DocIO.DLS.WordDocument)">
            <summary>
            Serializes the background.
            </summary>
            <param name="documentAdv">The document adv.</param>
            <param name="wDocument">The word document.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeList(Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv,Syncfusion.DocIO.DLS.WordDocument)">
            <summary>
            Serializes the list.
            </summary>
            <param name="documentAdv">The document adv.</param>
            <param name="wDocument">The w document.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeList(Syncfusion.DocIO.DLS.WordDocument,Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv)">
            <summary>
            Serializes the list.
            </summary>
            <param name="wDocument">The wdocument.</param>
            <param name="listAdv">The list adv.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeLevelOverrides(Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv,Syncfusion.DocIO.DLS.WordDocument)">
            <summary>
            Serializes the level overrides.
            </summary>
            <param name="documentAdv">The document adv.</param>
            <param name="wDocument">The w document.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeLevelOverride(Syncfusion.DocIO.DLS.WordDocument,Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv)">
            <summary>
            Serializes the level override.
            </summary>
            <param name="wDocument">The w document.</param>
            <param name="listAdv">The list adv.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.ConvertListType(Syncfusion.UI.Xaml.RichTextBoxAdv.ListType)">
            <summary>
            Converts the type of the list.
            </summary>
            <param name="listType">Type of the list.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.ConvertFollowCharacterType(Syncfusion.UI.Xaml.RichTextBoxAdv.FollowCharacterType)">
            <summary>
            Converts the type of the follow character.
            </summary>
            <param name="followCharacterType">Type of the follow character.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeListLevel(Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv,Syncfusion.DocIO.DLS.WListLevel)">
            <summary>
            Serializes the list levels.
            </summary>
            <param name="abstractListAdv">The abstract list adv.</param>
            <param name="listStyle">The list style.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeNumberFormat(Syncfusion.DocIO.DLS.WListLevel,Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv)">
            <summary>
            Serializes the number format.
            </summary>
            <param name="listLevel">The list level.</param>
            <param name="listLevelAdv">The list level adv.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.CheckNumberPrefix(System.String)">
            <summary>
            Checks the number prefix.
            </summary>
            <param name="prefix">The prefix.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeHeaderFooters(Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooters,Syncfusion.DocIO.DLS.WHeadersFooters)">
            <summary>
            Serialize Header and Footer
            </summary>
            <param name="headerFooters"></param>
            <param name="wHeaderFooters"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeTextBody(Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection,Syncfusion.DocIO.DLS.WTextBody)">
            <summary>
            Serialize TextBody
            </summary>
            <param name="blockAdvCollection"></param>
            <param name="textBody"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeParagraph(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,Syncfusion.DocIO.DLS.WTextBody)">
            <summary>
            Serialize Paragraph
            </summary>
            <param name="paragraphAdv"></param>
            <param name="textBody"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializePargraphItems(Syncfusion.UI.Xaml.RichTextBoxAdv.Inline,Syncfusion.DocIO.DLS.WParagraph,System.Boolean)">
            <summary>
            Serialize Paragraph items
            </summary>
            <param name="inline"></param>
            <param name="paragraph"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeSectionFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv,Syncfusion.DocIO.DLS.IWSection)">
            <summary>
            Serialize section format
            </summary>
            <param name="sectionAdv"></param>
            <param name="section"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat,Syncfusion.DocIO.DLS.WParagraphFormat)">
            <summary>
            Serialize paragraph format
            </summary>
            <param name="paragraphFormat">The paragraph format.</param>
            <param name="wparagraphFormat">The wparagraph format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.GetParagraphAlignment(Windows.UI.Xaml.TextAlignment)">
            <summary>
            Returns the Paragraph's HorizontalAlignment
            </summary>
            <param name="horizontalalign"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeLineSpace(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat,Syncfusion.DocIO.DLS.WParagraphFormat)">
            <summary>
            Serialize line space
            </summary>
            <param name="lineSpace"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat,Syncfusion.DocIO.DLS.WCharacterFormat)">
            <summary>
            Serialize the Character format
            </summary>
            <param name="characterFormat">The character format.</param>
            <param name="wcharacterFormat">The wcharacter format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SetSubSuperScript(Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment,Syncfusion.DocIO.DLS.WCharacterFormat)">
            <summary>
            Sets SubSuperScript
            </summary>
            <param name="baselineAlignment">The baseline alignment.</param>
            <param name="wcharacterFormat">The wcharacter format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SetStrikeThrough(Syncfusion.UI.Xaml.RichTextBoxAdv.StrikeThrough,Syncfusion.DocIO.DLS.WCharacterFormat)">
            <summary>
            Sets the strike through.
            </summary>
            <param name="strike">The strike.</param>
            <param name="wcharacterFormat">The wcharacter format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.ConvertHighlightColor(Windows.UI.Color)">
            <summary>
            Convert the color into the correct format
            </summary>
            <param name="convertingColor"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.Convert(Windows.UI.Color)">
            <summary>
            Converts the specified UI color.
            </summary>
            <param name="uiColor">The UIColor.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeTable(Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv,Syncfusion.DocIO.DLS.WTextBody)">
            <summary>
            Serialize Table
            </summary>
            <param name="tableAdv"></param>
            <param name="textBody"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.ParseHeightType(Syncfusion.UI.Xaml.RichTextBoxAdv.HeightType)">
            <summary>
            Parses height type.
            </summary>
            <param name="heightType"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeTableFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat,Syncfusion.DocIO.DLS.WTable)">
            <summary>
            Serializes the table format.
            </summary>
            <param name="tableFormat"></param>
            <param name="table"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeTableCellFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat,Syncfusion.DocIO.DLS.WTableCell)">
            <summary>
            Serializes the table cell format.
            </summary>
            <param name="cell">The cell.</param>
            <param name="wCell">The w cell.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeCellMargin(Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat,Syncfusion.DocIO.DLS.Paddings)">
            <summary>
            Serializes cell the margin.
            </summary>
            <param name="cellformat"></param>
            <param name="padding"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeTableMargin(Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat,Syncfusion.DocIO.DLS.Paddings)">
            <summary>
            Serializes the margin.
            </summary>
            <param name="tableformat"></param>
            <param name="padding"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeTableBorders(Syncfusion.UI.Xaml.RichTextBoxAdv.Borders,Syncfusion.DocIO.DLS.Borders)">
            <summary>
            Serializes the borders.
            </summary>
            <param name="borders"></param>
            <param name="wBorders"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeRowBorders(Syncfusion.UI.Xaml.RichTextBoxAdv.Borders,Syncfusion.DocIO.DLS.Borders)">
            <summary>
            Serializes the borders.
            </summary>
            <param name="borders"></param>
            <param name="wBorders"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeCellBorders(Syncfusion.UI.Xaml.RichTextBoxAdv.Borders,Syncfusion.DocIO.DLS.Borders)">
            <summary>
            Serializes the cell borders.
            </summary>
            <param name="borders"></param>
            <param name="wBorders"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeBorder(Syncfusion.UI.Xaml.RichTextBoxAdv.Border,Syncfusion.DocIO.DLS.Border)">
            <summary>
            Serializes the border.
            </summary>
            <param name="border"></param>
            <param name="wBorder"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.ConvertBorderStyle(Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle)">
            <summary>
            Coverts the border style.
            </summary>
            <param name="lineStyle">The line style.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeTableRow(Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv,Syncfusion.DocIO.DLS.WTable)">
            <summary>
            Serializes the table row.
            </summary>
            <param name="tableRowAdv">The table row adv.</param>
            <param name="wTable">The wtable.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxExporting.SerializeTableCell(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv,Syncfusion.DocIO.DLS.WTableRow)">
            <summary>
            Serializes the table cell.
            </summary>
            <param name="tableCellAdv">The table cell adv.</param>
            <param name="wTableRow">The wtable row.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLExporting.ConvertToHTML(Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv,System.IO.Stream)">
            <summary>
            Return the string from the DocumentAdv and Stream.
            </summary>
            <param name="document"></param>
            <param name="htmlStream"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLExporting.ConvertToHTML(Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv)">
            <summary>
            Return the string from the DocumentAdv.
            </summary>
            <param name="document"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLExporting.ConvertToClipboardHTML(Syncfusion.DocIO.DLS.WordDocument)">
            <summary>
            Returns the HTML string from document.
            </summary>
            <param name="document"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Controls.RichTextBoxAdv.HTMLGenerator">HTMLGenerator</see> class. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.SaveAsHTML(System.IO.Stream)">
            <summary>
            Saves as HTML in the given stream
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.SaveAsHTML">
            <summary>
            Return the HTML String without any input
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.SaveAsClipBoardHTML">
            <summary>
            Saves as clipboard Html.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.SerializeDocument(Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv)">
            <summary>
            Serializes the document.
            </summary>
            <param name="document">Content of the RichTextBox</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.SerializeTable(Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv,System.Text.StringBuilder)">
            <summary>
            Serializes the table.
            </summary>
            <param name="table"></param>
            <param name="blockStyle">StringBuilder</param>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.SerializeCellBordersStyle(Syncfusion.UI.Xaml.RichTextBoxAdv.Borders,System.Text.StringBuilder)">
            <summary>
            Serialize the cell border styles.
            </summary>
            <param name="borders">The borders</param>
            <param name="borderStyleBuilder">The border style builder.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.SerializeBorderStyle(Syncfusion.UI.Xaml.RichTextBoxAdv.Border,System.String,System.Text.StringBuilder)">
            <summary>
            Serialize border style.
            </summary>
            <param name="border">The border.</param>
            <param name="borderPosition">The border position.</param>
            <param name="borderStyleBuilder">The border style builder.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.SerializeTableBorderStyle(Syncfusion.UI.Xaml.RichTextBoxAdv.Borders,System.Text.StringBuilder)">
            <summary>
            Serialize table border style.
            </summary>
            <param name="borders"></param>
            <param name="borderStyleBuilder"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.ConvertBorderLineStyle(Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle)">
            <summary>
            Converts the border line style.
            </summary>
            <param name="lineStyle">The line style.</param>
            <returns>string</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.SerializeParagraph(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,System.Text.StringBuilder)">
            <summary>
            Serializes the paragraph.
            </summary>
            <param name="paragraph"></param>
            <param name="blockStyleBuilder"></param>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.SerializeInlines(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,System.Text.StringBuilder)">
            <summary>
            Serializes the inlines.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <param name="blockStyle">The block style.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.SerializeSpanAdv(System.String,Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat)">
            <summary>
            Serializes the span.
            </summary>
            <param name="spanText"></param>
            <param name="characterFormat"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.SerializeImageContainerAdv(Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv)">
            <summary>
            Serializes the image.
            </summary>
            <param name="imageContainer"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.SerializeCommentAdv(Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv)">
            <summary>
            Serializes the comment.
            </summary>
            <param name="imageContainer"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.SerializeComments(Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv,System.Text.StringBuilder)">
            <summary>
            Serializes the comments in the document.
            </summary>
            <param name="document"></param>
            <param name="htmlWriter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.GetListNumber(Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat)">
            <summary>
            Gets the list number.
            </summary>
            <param name="listLevel">The list level.</param>
            <returns></returns>  
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.GetHtmlListText(Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv,System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv)">
            <summary>
            Gets the list text.
            </summary>
            <param name="listAdv">The list adv.</param>
            <param name="listLevelNumber">The list level number.</param>
            <param name="currentListLevel">The current list level.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.GetListStartValue(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv)">
            <summary>
            Gets the list start value of the specified paragraph.
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.UpdateHtmlListValues(Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv,System.Int32)">
            <summary>
            Updates the list values.
            </summary>
            <param name="listAdv">The list adv.</param>
            <param name="listLevelNumber">The list level number.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.SerializeTableStyle(Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv,System.String)">
            <summary>
            Serializes the table inner attributes Style
            </summary>
            <param name="table"></param>
            <param name="className">String</param> 
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.SerializeParagraphStyle(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,System.String,System.Boolean)">
            <summary>
            Serializes the paragraph inner attributes style.
            </summary>
            <param name="paragraph"></param>
            <param name="className">String</param>  
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.SerializeInlineStyle(Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat,System.String)">
            <summary>
            Serializes the inline inner attributes style.
            </summary>
            <param name="characterFormat"></param>
            <param name="className"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.SerializeCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat)">
            <summary>
            Serializes the character format.
            </summary>
            <param name="characterFormat"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.SerializeParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat,System.Boolean)">
            <summary>
            Serializes the paragraph format.
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.Dispose">
            <summary>
            Releases all resources used by the.
            <see cref="T:Syncfusion.Windows.Controls.RichTextBoxAdv.HTMLGenerator">HTMLGenerator</see>.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.WriteStartDocument">
            <summary>
            Writes the start document.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.WriteEndDocument">
            <summary>
            Writes the end document.
            </summary>
            <returns>End Tags</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.DecodeHtmlNames(System.String)">
            <summary>
            Decodes the Html names.
            </summary>
            <param name="text"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.CreateTag(System.String)">
            <summary>
            Creates the tag.
            </summary>
            <param name="tagValue">The tag value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.CreateAttributesTag(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Creates the attribute tag.
            </summary>
            <param name="tagValue">The tag value.</param>
            <param name="attributeName">Name of the attribute.</param>
            <param name="attributeValue">The attribute value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.EndTag(System.String)">
            <summary>
            Ends the tag.
            </summary>
            <param name="tagValue">The tag value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.ClassNameGenerator">
            <summary>
            Classes the name generator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.ConvertColor(Windows.UI.Color)">
            <summary>
            Converts the color.
            </summary>
            <param name="convertingColor">Convert the Color from Brush to string</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.ConvertBackgroundColor(Windows.UI.Color)">
            <summary>
            Converts the color.
            </summary>
            <param name="convertingColor">Convert the Color from Brush to string</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLSerializator.GetNumber(System.Int32)">
            <summary>
            Gets the number.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextExporting.ConvertToText(Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv,System.IO.Stream)">
            <summary>
            Returns the Text string from the DocumentAdv and Stream
            </summary>
            <param name="textContent"></param>
            <param name="textStream"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextExporting.ConvertToText(Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv)">
            <summary>
            Returns the Text string from the DocumentAdv
            </summary>
            <param name="document"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextExporting.TextProcessor(Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv)">
            <summary>
            Processing the DocumentAdv 
            </summary>
            <param name="document"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextExporting.GetParagraphText(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,System.Text.StringBuilder)">
            <summary>
            Returns the Text string from the ParagraphAdv
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextExporting.GetTableText(Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv,System.Text.StringBuilder)">
            <summary>
            Returns the Text string from the TableAdv
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextExporting.SaveAsText(Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv,System.IO.Stream)">
            <summary>
            Save as Text based upon the documentadv and stream
            </summary>
            <param name="documentcontent"></param>
            <param name="textStream"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextExporting.SaveAsText(Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv)">
            <summary>
            Save as Text based upon the DocumentAdv
            </summary>
            <param name="document"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultValueDictionary.ElementFactory">
            <summary>
            Gets or sets the ElementFactory.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultValueDictionary.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Controls.RichTextBoxAdv.DefaultValueDictionary">DefaultValueDictionary</see> class. 
            </summary>
            <param name="input"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultValueDictionary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Controls.RichTextBoxAdv.DefaultValueDictionary">DefaultValueDictionary</see> class. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultValueDictionary.CollectDefaultValues">
            <summary>
            Collects the default values.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultValueDictionary.HasDefaultValue(System.Reflection.PropertyInfo)">
            <summary>
            Determines whether default value is present or not.
            </summary>
            <param name="propinfo"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Controls.RichTextBoxAdv.XAMLExporting">XAMLExporting</see> class. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.ConvertToXAML(Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv,System.IO.Stream)">
            <summary>
            Returns the XAML string from the DocumentAdv and Stream
            </summary>
            <param name="document"></param>
            <param name="xamlStream"></param>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.ConvertToXAML(Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv)">
            <summary>
            Returns the XAML string from the DocumentAdv
            </summary>
            <param name="document"></param>      
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.SaveAsXAML(Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv,System.IO.Stream)">
            <summary>
            Save as XAML based upon the input DocumentAdv and stream
            </summary>
            <param name="documentAdv"></param>
            <param name="xamlStream"></param>s        
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.SaveAsXAML(Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv)">
            <summary>
            Save as XAML based upon the input DocumentAdv
            </summary>
            <param name="documentAdv"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.ProcessXaml(Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv)">
            <summary>
            Process the DoucmentAdv 
            </summary>
            <param name="document"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.WriteLists(Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv,System.Xml.XmlWriter)">
            <summary>
            Writes the Lists.
            </summary>
            <param name="xmlWriter"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.WriteListAdv(Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv,System.Xml.XmlWriter)">
            <summary>
            Writes the list.
            </summary>
            <param name="list"></param>
            <param name="xmlWriter"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.WriteAbstractListAdv(Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv,System.Xml.XmlWriter)">
            <summary>
            Writes the abstract list.
            </summary>
            <param name="abstractList"></param>
            <param name="xmlWriter"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.WriteListLevelAdv(Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv,System.Xml.XmlWriter)">
            <summary>
            Writes the list level.
            </summary>
            <param name="listLevel"></param>
            <param name="xmlWriter"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.WriteHeaderFooters(Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooters,System.Xml.XmlWriter)">
            <summary>
            Write the HeaderFooters as Xaml file within a section
            </summary>
            <param name="headerFooters"></param>
            <param name="xmlWriter"></param>       
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.WriteHeaderFooter(Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooter,System.Xml.XmlWriter,System.String)">
            <summary>
            Write the HeaderFooter type as a Xaml file  within a section
            </summary>      
            <param name="xmlWriter"></param>
            <param name="headerFooterBlock"></param>
            <param name="text"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.WriteBlocks(Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection,System.Xml.XmlWriter)">
            <summary>
            Writes the blocks.
            </summary>
            <param name="blocks"></param>
            <param name="xmlWriter"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.WriteTable(Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv,System.Xml.XmlWriter)">
            <summary>
            Write  TableAdv as a xaml file
            </summary>
            <param name="tableBlock"></param>
            <param name="xmlWriter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.WriteParagraph(Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv,System.Xml.XmlWriter)">
            <summary>
            Write  ParagraphAdv as a xaml file
            </summary>
            <param name="paragraphBlock"></param>
            <param name="xmlWriter"></param>  
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.WriteSpanText(Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv,System.Xml.XmlWriter)">
            <summary>
            Write  Span Text as a xaml file and repalce the symbols as a xaml supported format
            </summary>
            <param name="spanContent"></param>
            <param name="xmlWriter"></param>    
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.WriteParagraphListFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat,System.Xml.XmlWriter,System.String)">
            <summary>
            To do implementations
            </summary>
            <param name="list"></param>
            <param name="xmlWriter"></param>   
            <param name="text"></param>  
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.WriteDocumentListFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat,System.Xml.XmlWriter,System.String)">
            <summary>
            To do implementations
            </summary>
            <param name="list"></param>
            <param name="xmlWriter"></param>   
            <param name="text"></param>  
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.WriteAttributes(Windows.UI.Xaml.DependencyObject,System.Xml.XmlWriter)">
            <summary>
            Writes the attributes.
            </summary>
            <param name="dpObject"></param>
            <param name="xmlWriter"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.WriteFormat(Windows.UI.Xaml.DependencyObject,System.Xml.XmlWriter,System.String)">
            <summary>
            Write  element's attributes as xaml file
            </summary>
            <param name="dpObject"></param>
            <param name="xmlWriter"></param>   
            <param name="formatName"></param>           
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.WriteBorder(Syncfusion.UI.Xaml.RichTextBoxAdv.Borders,System.Xml.XmlWriter)">
            <summary>
            Writes the borders elements
            </summary>
            <param name="borders"></param>
            <param name="xmlWriter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.WriteBorder(Syncfusion.UI.Xaml.RichTextBoxAdv.Border,System.Xml.XmlWriter,System.String)">
            <summary>
            Writes the Border attributes.
            </summary>
            <param name="border"></param>
            <param name="xmlWriter"></param>
            <param name="borderName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.WriteBorders(Syncfusion.UI.Xaml.RichTextBoxAdv.Borders,System.Xml.XmlWriter)">
            <summary>
            Writes the Borders
            </summary>
            <param name="borders"></param>
            <param name="xmlWriter"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.IsBorders(System.Reflection.PropertyInfo)">
            <summary>
            Gets whether the property is borders.
            </summary>
            <param name="publicProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.WriteListFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat,System.Xml.XmlWriter)">
            <summary>
            Writes the ListFormat.
            </summary>
            <param name="listFormat"></param>
            <param name="xmlWriter"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLExporting.GetElementName(System.String)">
            <summary>
            Get the only element name from the  full namesapce
            </summary>
            <param name="fullName"></param>     
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.XamlWriter.LocalXmlWriter">
            <summary>
            Gets or sets the local XmlWriter.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.XamlWriter.DefaultValueDictionary">
            <summary>
            Gets or sets the default value dictionary.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XamlWriter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Controls.RichTextBoxAdv.XamlWriter">XamlWriter</see> class. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XamlWriter.Write(System.Object)">
            <summary>
            Writes the element.
            </summary>
            <param name="element"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XamlWriter.WriteXaml(System.Object,System.Xml.XmlWriter,System.String)">
            <summary>
            Writes the Xaml.
            </summary>
            <param name="rootObj"></param>
            <param name="xmlWriter"></param>
            <param name="Text"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XamlWriter.WriteStartElement(System.Type,System.String)">
            <summary>
            Writes the start element.
            </summary>
            <param name="type"></param>
            <param name="Text"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XamlWriter.WriteAttributes(System.Object,System.Xml.XmlWriter)">
            <summary>
            Writes the attributes.
            </summary>
            <param name="element"></param>
            <param name="writer"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XamlWriter.WriteAttribute(System.String,System.Object)">
            <summary>
            Writes the attribute.
            </summary>
            <param name="attrName"></param>
            <param name="getVal"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XamlWriter.WriteAttachedProperties(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Writes the attached properties.
            </summary>
            <param name="sourceValue"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XamlWriter.WriteBrushes(Windows.UI.Xaml.DependencyObject,System.Xml.XmlWriter)">
            <summary>
            Writes the Brushes.
            </summary>
            <param name="brushObj"></param>
            <param name="brushWriter"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XamlWriter.WriteInnerTags(Windows.UI.Xaml.DependencyObject,System.Xml.XmlWriter)">
            <summary>
            Writes the Innder tags.
            </summary>
            <param name="innerTagsObj"></param>
            <param name="tagsWriter"></param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FontFamilyStringConverter">
            <summary>
            Implements a type converter for converting <see cref="T:Windows.UI.Xaml.Media.FontFamily"/> to and from <see cref="T:System.String"/> type.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FontFamilyStringConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FontFamilyStringConverter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FontFamilyStringConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the <see cref="T:Windows.UI.Xaml.Media.FontFamily"/> value to the respective string value.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType"> The type of the target property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>
            If the <paramref name="value"/> is <see cref="T:Windows.UI.Xaml.Media.FontFamily"/>, returns respective font name.
            By default empty string is returned.
            </returns>
            <remarks>Modifies the source data before passing it to the target for display in the UI.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FontFamilyStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the string value to the respective <see cref="T:Windows.UI.Xaml.Media.FontFamily"/> value.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter"> An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>
            Returns null, if <paramref name="value"/> is null.
            Else if the <paramref name="value"/> is a valid font name, then returns respective <see cref="T:Windows.UI.Xaml.Media.FontFamily"/>.
            Otherwise returns <c>Calibri</c> font.
            </returns>
            <remarks>
            Modifies the target data before passing it to the source object. This method is called only in TwoWay bindings.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.UnderlineToggleConverter">
            <summary>
            Implements a type converter for converting <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Underline"/> to and from <see cref="T:System.Boolean"/> type.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UnderlineToggleConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.UnderlineToggleConverter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UnderlineToggleConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Underline"/> value to the respective bool value.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType"> The type of the target property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>True, if the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Underline"/> is not <c>None</c>. Otherwise False.</returns>
            <remarks>Modifies the source data before passing it to the target for display in the UI.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UnderlineToggleConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the bool value to the respective <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Underline"/> value.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter"> An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>Returns <c>Underline.Single</c>, if true. Otherwise <c>Underline.None</c>.</returns>
            <remarks>
            Modifies the target data before passing it to the source object. This method is called only in TwoWay bindings.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SingleStrikeThroughToggleConverter">
            <summary>
            Implements a type converter for converting <c>StrikeThrough.Single</c> to and from <see cref="T:System.Boolean"/> type.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SingleStrikeThroughToggleConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SingleStrikeThroughToggleConverter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SingleStrikeThroughToggleConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.StrikeThrough"/> value to the respective bool value.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType"> The type of the target property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>True, if the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.StrikeThrough"/> is <c>SingleStrike</c>. Otherwise False.</returns>
            <remarks>Modifies the source data before passing it to the target for display in the UI.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SingleStrikeThroughToggleConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the bool value to the respective <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.StrikeThrough"/> value.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter"> An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>Returns <c>StrikeThrough.SingleStrike</c>, if true. Otherwise <c>StrikeThrough.None</c>.</returns>
            <remarks>
            Modifies the target data before passing it to the source object. This method is called only in TwoWay bindings.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DoubleStrikeThroughToggleConverter">
            <summary>
            Implements a type converter for converting <c>StrikeThrough.Double</c> to and from <see cref="T:System.Boolean"/> type.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DoubleStrikeThroughToggleConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DoubleStrikeThroughToggleConverter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DoubleStrikeThroughToggleConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.StrikeThrough"/> value to the respective bool value.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType"> The type of the target property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>True, if the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.StrikeThrough"/> is <c>DoubleStrike</c>. Otherwise False.</returns>
            <remarks>Modifies the source data before passing it to the target for display in the UI.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DoubleStrikeThroughToggleConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.StrikeThrough"/> value to the respective bool value.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter"> An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>Returns <c>StrikeThrough.DoubleStrike</c>, if true. Otherwise <c>StrikeThrough.None</c>.</returns>
            <remarks>
            Modifies the target data before passing it to the source object. This method is called only in TwoWay bindings.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.NoStrikeThroughToggleConverter">
            <summary>
            Implements a type converter for converting <c>StrikeThrough.None</c> to and from <see cref="T:System.Boolean"/> type.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.NoStrikeThroughToggleConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.NoStrikeThroughToggleConverter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.NoStrikeThroughToggleConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.StrikeThrough"/> value to the respective bool value.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType"> The type of the target property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>True, if the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.StrikeThrough"/> is <c>None</c>. Otherwise False.</returns>
            <remarks>Modifies the source data before passing it to the target for display in the UI.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.NoStrikeThroughToggleConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the bool value to the respective <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.StrikeThrough"/> value.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter"> An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>Returns <c>StrikeThrough.None</c>.</returns>
            <remarks>
            Modifies the target data before passing it to the source object. This method is called only in TwoWay bindings.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SubscriptToggleConverter">
            <summary>
            Implements a type converter for converting <c>BaselineAlignment.Subscript</c> to and from <see cref="T:System.Boolean"/> type.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SubscriptToggleConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SubscriptToggleConverter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SubscriptToggleConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment"/> value to the respective bool value.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType"> The type of the target property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>True, if the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment"/> is <c>Subscript</c>. Otherwise False.</returns>
            <remarks>Modifies the source data before passing it to the target for display in the UI.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SubscriptToggleConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the bool value to the respective <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment"/> value.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter"> An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>Returns <c>BaselineAlignment.Subscript</c>, if true. Otherwise <c>BaselineAlignment.Normal</c>.</returns>
            <remarks>
            Modifies the target data before passing it to the source object. This method is called only in TwoWay bindings.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SuperscriptToggleConverter">
            <summary>
            Implements a type converter for converting <c>BaselineAlignment.Superscript</c> to and from <see cref="T:System.Boolean"/> type.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SuperscriptToggleConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SuperscriptToggleConverter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SuperscriptToggleConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment"/> value to the respective bool value.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType"> The type of the target property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>True, if the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment"/> is <c>Superscript</c>. Otherwise False.</returns>
            <remarks>Modifies the source data before passing it to the target for display in the UI.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SuperscriptToggleConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the bool value to the respective <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment"/> value.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter"> An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>Returns <c>BaselineAlignment.Subscript</c>, if true. Otherwise <c>BaselineAlignment.Normal</c>.</returns>
            <remarks>
            Modifies the target data before passing it to the source object. This method is called only in TwoWay bindings.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.NormalBaselineAlignmentToggleConverter">
            <summary>
            Implements a type converter for converting <c>BaselineAlignment.Normal</c> to and from <see cref="T:System.Boolean"/> type.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.NormalBaselineAlignmentToggleConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.NormalBaselineAlignmentToggleConverter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.NormalBaselineAlignmentToggleConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment"/> value to the respective bool value.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType"> The type of the target property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>True, if the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment"/> is <c>Normal</c>. Otherwise False.</returns>
            <remarks>Modifies the source data before passing it to the target for display in the UI.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.NormalBaselineAlignmentToggleConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the bool value to the respective <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment"/> value.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter"> An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>Returns <c>BaselineAlignment.Normal</c>.</returns>
            <remarks>
            Modifies the target data before passing it to the source object. This method is called only in TwoWay bindings.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LeftAlignmentToggleConverter">
            <summary>
            Implements a type converter for converting <c>TextAlignment.Left</c> to and from <see cref="T:System.Boolean"/> type.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LeftAlignmentToggleConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LeftAlignmentToggleConverter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LeftAlignmentToggleConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the <see cref="T:Windows.UI.Xaml.TextAlignment"/> value to the respective bool value.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType"> The type of the target property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>True, if the <see cref="T:Windows.UI.Xaml.TextAlignment"/> is <c>Left</c>. Otherwise False.</returns>
            <remarks>Modifies the source data before passing it to the target for display in the UI.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LeftAlignmentToggleConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the bool value to the respective <see cref="T:Windows.UI.Xaml.TextAlignment"/> value.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter"> An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>Returns <c>TextAlignment.Left</c> by default. If the <paramref name="value"/> is false, returns <c>TextAlignment.Justify</c>.</returns>
            <remarks>
            Modifies the target data before passing it to the source object. This method is called only in TwoWay bindings.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RightAlignmentToggleConverter">
            <summary>
            Implements a type converter for converting <c>TextAlignment.Right</c> to and from <see cref="T:System.Boolean"/> type.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RightAlignmentToggleConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RightAlignmentToggleConverter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RightAlignmentToggleConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the <see cref="T:Windows.UI.Xaml.TextAlignment"/> value to the respective bool value.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType"> The type of the target property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>True, if the <see cref="T:Windows.UI.Xaml.TextAlignment"/> is <c>Right</c>. Otherwise False.</returns>
            <remarks>Modifies the source data before passing it to the target for display in the UI.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RightAlignmentToggleConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the bool value to the respective <see cref="T:Windows.UI.Xaml.TextAlignment"/> value.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter"> An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>Returns <c>TextAlignment.Right</c> by default. If the <paramref name="value"/> is false, returns <c>TextAlignment.Left</c>.</returns>
            <remarks>
            Modifies the target data before passing it to the source object. This method is called only in TwoWay bindings.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CenterAlignmentToggleConverter">
            <summary>
            Implements a type converter for converting <c>TextAlignment.Center</c> to and from <see cref="T:System.Boolean"/> type.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CenterAlignmentToggleConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CenterAlignmentToggleConverter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CenterAlignmentToggleConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the <see cref="T:Windows.UI.Xaml.TextAlignment"/> value to the respective bool value.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType"> The type of the target property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>True, if the <see cref="T:Windows.UI.Xaml.TextAlignment"/> is <c>Center</c>. Otherwise False.</returns>
            <remarks>Modifies the source data before passing it to the target for display in the UI.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CenterAlignmentToggleConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the bool value to the respective <see cref="T:Windows.UI.Xaml.TextAlignment"/> value.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter"> An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>Returns <c>TextAlignment.Center</c> by default. If the <paramref name="value"/> is false, returns <c>TextAlignment.Left</c>.</returns>
            <remarks>
            Modifies the target data before passing it to the source object. This method is called only in TwoWay bindings.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.JustifyAlignmentToggleConverter">
            <summary>
            Implements a type converter for converting <c>TextAlignment.Justify</c> to and from <see cref="T:System.Boolean"/> type.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.JustifyAlignmentToggleConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.JustifyAlignmentToggleConverter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.JustifyAlignmentToggleConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the <see cref="T:Windows.UI.Xaml.TextAlignment"/> value to the respective bool value.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType"> The type of the target property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>True, if the <see cref="T:Windows.UI.Xaml.TextAlignment"/> is <c>Justify</c>. Otherwise False.</returns>
            <remarks>Modifies the source data before passing it to the target for display in the UI.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.JustifyAlignmentToggleConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the bool value to the respective <see cref="T:Windows.UI.Xaml.TextAlignment"/> value.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter"> An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>Returns <c>TextAlignment.Justify</c> by default. If the <paramref name="value"/> is false, returns <c>TextAlignment.Left</c>.</returns>
            <remarks>
            Modifies the target data before passing it to the source object. This method is called only in TwoWay bindings.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LineSpacingTypeStringConverter">
            <summary>
            Implements a type converter for converting <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LineSpacingType"/> to and from <see cref="T:System.String"/> type.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineSpacingTypeStringConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LineSpacingTypeStringConverter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineSpacingTypeStringConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LineSpacingType"/> value to the respective string value.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType"> The type of the target property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>
            Returns "Atleast", if the <paramref name="value"/> is <c>LineSpacingType.Atleast</c>.
            Returns "Exactly", if the <paramref name="value"/> is <c>LineSpacingType.Exactly</c>.
            Returns "Multiple", if the <paramref name="value"/> is <c>LineSpacingType.Multiple</c>.
            By default, returns empty string.
            </returns>
            <remarks>Modifies the source data before passing it to the target for display in the UI.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineSpacingTypeStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the string value to the respective <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LineSpacingType"/> value.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter"> An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>
            Returns <c>LineSpacingType.Atleast</c>, if the <paramref name="value"/> is "Atleast".
            Returns <c>LineSpacingType.Exactly</c>, if the <paramref name="value"/> is "Exactly".
            By default, returns <c>LineSpacingType.Multiple</c>.
            </returns>
            <remarks>
            Modifies the target data before passing it to the source object. This method is called only in TwoWay bindings.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FontSizeDoubleConverter">
            <summary>
            Implements a type converter for converting Font Size to and from <see cref="T:System.Double"/> type.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FontSizeDoubleConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FontSizeDoubleConverter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FontSizeDoubleConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the font size value to the respective double value.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType"> The type of the target property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the target dependency property</returns>
            <remarks>Modifies the source data before passing it to the target for display in the UI.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FontSizeDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the double value to the respective font size value.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter"> An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>The value to be passed to the source object.</returns>
            <remarks>
            Modifies the target data before passing it to the source object. This method is called only in TwoWay bindings.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ToggleVisibilityConverter">
            <summary>
            Implements a type converter for converting <see cref="T:System.Boolean"/> type to and from Visibility type.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ToggleVisibilityConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ToggleVisibilityConverter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ToggleVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the bool value to the respective Visibility value.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType"> The type of the target property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns><c>Visibility.Visible</c>, if the value is true. Otherwise <c>Visibility.Collapsed</c>.</returns>
            <remarks>Modifies the source data before passing it to the target for display in the UI.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ToggleVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the Visibility value to the respective bool value.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The type of the target property, specified by a helper structure that wraps the type name.</param>
            <param name="parameter"> An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion.</param>
            <returns>Returns true, if value is <c>Visibility.Visible</c>. Otherwise false.</returns>
            <remarks>
            Modifies the target data before passing it to the source object. This method is called only in TwoWay bindings.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.NodeCollection">
            <summary>
            An abstract class that provides a base for the collection of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/> objects.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.NodeCollection.OwnerNode">
            <summary>
            Gets the owner node.
            </summary>
            <value>
            The owner node.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.NodeCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.NodeCollection"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.NodeCollection"/>. The value can be null.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.NodeCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node,System.Collections.Generic.IEnumerable{Syncfusion.UI.Xaml.RichTextBoxAdv.Node})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.NodeCollection"/> class that contains nodes
            copied from the specified <paramref name="collection"/> for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.NodeCollection"/>. The value can be null.</param>
            <param name="collection">The collection from which the nodes are copied.</param>
            <exception cref="T:System.ArgumentNullException">The collection parameter cannot be null.</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.NodeCollection.NodeCollection_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event of the NodeCollection control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.NodeCollection.SetOwnerToNode(Syncfusion.UI.Xaml.RichTextBoxAdv.Node,System.Int32)">
            <summary>
            Removes the node from previous parent.
            </summary>
            <param name="node">The node.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.NodeCollection.GetNextNode(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Gets the next node.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.NodeCollection.GetPreviousNode(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Gets the previous node.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.NodeCollection.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooterCollection">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooter"/> elements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooterCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooterCollection"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooterCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node,System.Collections.Generic.IEnumerable{Syncfusion.UI.Xaml.RichTextBoxAdv.Node})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooterCollection"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="collection">The collection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooterCollection.NodeCollection_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event of the NodeCollection control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> elements.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> at the specified <paramref name="index"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection"/>.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> instance to get.</param>
            <returns>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> instance at the specified <paramref name="index"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index was out of range. Must be non-negative and less than the size of the collection.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node,System.Collections.Generic.IEnumerable{Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection"/> class that contains sections
            copied from the specified <paramref name="collection"/> for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection"/>.
            The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
            </param>
            <param name="collection">The collection from which the sections are copied.</param>
            <exception cref="T:System.ArgumentNullException">The collection parameter cannot be null.</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection.NodeCollection_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event of the NodeCollection control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection.Layout(System.Int32)">
            <summary>
            Layouts the specified start index.
            </summary>
            <param name="startIndex">The start index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection.First">
            <summary>
            Returns the first <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> instance from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection"/>.
            </summary>
            <returns>The last <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> instance in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            The source sequence is empty.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection.First(System.Func{Syncfusion.UI.Xaml.RichTextBoxAdv.Node,System.Boolean})">
            <summary>
            Returns the first <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> instance from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection"/> that satisfies a specified condition.
            </summary>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
            The first <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> instance in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection"/> that passes the test in 
            the specified <paramref name="predicate"/> function.</returns>
            <exception cref="T:System.ArgumentNullException">predicate is null.</exception>
            <exception cref="T:System.InvalidOperationException">
            No element satisfies the condition in predicate.-or-The source sequence is empty.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection.Last">
            <summary>
            Returns the last <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> instance from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection"/>.
            </summary>
            <returns>The last <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> instance in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            The source sequence is empty.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection.Last(System.Func{Syncfusion.UI.Xaml.RichTextBoxAdv.Node,System.Boolean})">
            <summary>
            Returns the last <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> instance from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection"/> that satisfies a specified condition.
            </summary>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
            The last <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> instance in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection"/> that passes the test in 
            the specified <paramref name="predicate"/> function.</returns>
            <exception cref="T:System.ArgumentNullException">predicate is null.</exception>
            <exception cref="T:System.InvalidOperationException">
            No element satisfies the condition in predicate.-or-The source sequence is empty.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection.Add(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
             Adds the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> to the end of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection"/>.
            </summary>
            <param name="sectionAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> instance to be added to the end of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection.Insert(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Inserts the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> into the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection"/> at the specified <paramref name="index"/>.
            </summary>
            <param name="index">The zero-based index at which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> should be inserted.</param>
            <param name="sectionAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> instance to insert.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index was out of range. Must be non-negative and less than the size of the collection.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> instance at the specified <paramref name="index"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection"/>.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index is less than zero.-or-Index is equal to or greater than item count.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection.Remove(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
             Removes the first occurrence of the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection"/>.
            </summary>
            <param name="sectionAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> instance to remove from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection"/>.</param>
            <returns>
            True, if the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> is successfully removed. Otherwise, false. 
            This method also returns false if specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> was not found in the original <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection"/>.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> elements.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> at the specified <paramref name="index"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/>.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> instance to get.</param>
            <returns>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> instance at the specified <paramref name="index"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index was out of range. Must be non-negative and less than the size of the collection.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/>.
            The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/>, <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooter"/>, <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> or <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node,System.Collections.Generic.IEnumerable{Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/> class that contains blocks
            copied from the specified <paramref name="collection"/> for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/>.
            The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/>, <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooter"/>, <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> or <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>.
            </param>
            <param name="collection">The collection from which the blocks are copied.</param>
            <exception cref="T:System.ArgumentNullException">The collection parameter cannot be null.</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection.NodeCollection_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event of the NodeCollection control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection.Layout(System.Int32)">
            <summary>
            Layouts the specified start index.
            </summary>
            <param name="startIndex">The start index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection.First">
            <summary>
            Returns the first <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> instance from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/>.
            </summary>
            <returns>The first <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> instance in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/>.</returns>
            <exception cref="T:System.InvalidOperationException">The source sequence is empty.</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection.First(System.Func{Syncfusion.UI.Xaml.RichTextBoxAdv.Node,System.Boolean})">
            <summary>
            Returns the first <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> instance from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/> that satisfies a specified condition.
            </summary>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
            The first <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> instance in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/> that passes the test in 
            the specified <paramref name="predicate"/> function.</returns>
            <exception cref="T:System.ArgumentNullException">predicate is null.</exception>
            <exception cref="T:System.InvalidOperationException">
            No element satisfies the condition in predicate.-or-The source sequence is empty.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection.Last">
            <summary>
            Returns the last <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> instance from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/>.
            </summary>
            <returns>The last <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> instance in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            The source sequence is empty.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection.Last(System.Func{Syncfusion.UI.Xaml.RichTextBoxAdv.Node,System.Boolean})">
            <summary>
            Returns the last <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> instance from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/> that satisfies a specified condition.
            </summary>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
            The last <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> instance in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/> that passes the test in 
            the specified <paramref name="predicate"/> function.</returns>
            <exception cref="T:System.ArgumentNullException">predicate is null.</exception>
            <exception cref="T:System.InvalidOperationException">
            No element satisfies the condition in predicate.-or-The source sequence is empty.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection.Add(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
             Adds the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> to the end of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/>.
            </summary>
            <param name="blockAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> instance to be added to the end of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection.Insert(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Inserts the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> into the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/> at the specified <paramref name="index"/>.
            </summary>
            <param name="index">The zero-based index at which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> should be inserted.</param>
            <param name="blockAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> instance to insert.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index was out of range. Must be non-negative and less than the size of the collection.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> instance at the specified <paramref name="index"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/>.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index is less than zero.-or-Index is equal to or greater than item count.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection.Remove(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
             Removes the first occurrence of the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/>.
            </summary>
            <param name="blockAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> instance to remove from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/>.</param>
            <returns>
            True, if the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> is successfully removed. Otherwise, false. 
            This method also returns false if specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> was not found in the original <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection.ProcessChildItems(Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv)">
            <summary>
            Process the child items.
            </summary>
            <param name="block"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection.GetParagraph(System.String@)">
            <summary>
            Gets the paragraph.
            </summary>
            <param name="position">The position.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection.GetBlock(System.String@)">
            <summary>
            Gets the block.
            </summary>
            <param name="position">The position.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> elements.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> at the specified <paramref name="index"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection"/>.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> instance to get.</param>
            <returns>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> instance at the specified <paramref name="index"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index was out of range. Must be non-negative and less than the size of the collection.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node,System.Collections.Generic.IEnumerable{Syncfusion.UI.Xaml.RichTextBoxAdv.Inline})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection"/> class that contains inlines
            copied from the specified <paramref name="collection"/> for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>.
            </param>
            <param name="collection">The collection from which the inlines are copied.</param>
            <exception cref="T:System.ArgumentNullException">The collection parameter cannot be null.</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection.NodeCollection_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event of the NodeCollection control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection.SplitByBreakCharacter(Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv,System.String)">
            <summary>
            Splits the by BreakCharacter.
            </summary>
            <param name="BreakCharacter">The BreakCharacter</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection.MoveInlines(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,System.Int32)">
            <summary>
            Moves the inlines.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <param name="startIndex">The start index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection.Layout(System.Int32)">
            <summary>
            Layouts the specified start index.
            </summary>
            <param name="startIndex">The start index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection.Add(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
             Adds the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> to the end of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection"/>.
            </summary>
            <param name="inline">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> instance to be added to the end of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection.Insert(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Inserts the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> into the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection"/> at the specified <paramref name="index"/>.
            </summary>
            <param name="index">The zero-based index at which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> should be inserted.</param>
            <param name="inline">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> instance to insert.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index was out of range. Must be non-negative and less than the size of the collection.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> instance at the specified <paramref name="index"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection"/>.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index is less than zero.-or-Index is equal to or greater than item count.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection.Remove(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
             Removes the first occurrence of the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection"/>.
            </summary>
            <param name="inline">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> instance to remove from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection"/>.</param>
            <returns>
            True, if the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> is successfully removed. Otherwise, false. 
            This method also returns false if specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> was not found in the original <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection.First">
            <summary>
            Returns the first <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> instance from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection"/>.
            </summary>
            <returns>The first <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> instance in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            The source sequence is empty.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection.First(System.Func{Syncfusion.UI.Xaml.RichTextBoxAdv.Node,System.Boolean})">
            <summary>
            Returns the first <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> instance from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection"/> that satisfies a specified condition.
            </summary>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
            The first <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> instance in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection"/> that passes the test in 
            the specified <paramref name="predicate"/> function.</returns>
            <exception cref="T:System.ArgumentNullException">predicate is null.</exception>
            <exception cref="T:System.InvalidOperationException">
            No element satisfies the condition in predicate.-or-The source sequence is empty.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection.Last">
            <summary>
            Returns the last <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> instance from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection"/>.
            </summary>
            <returns>The last <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> instance in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            The source sequence is empty.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection.Last(System.Func{Syncfusion.UI.Xaml.RichTextBoxAdv.Node,System.Boolean})">
            <summary>
            Returns the last <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> instance from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection"/> that satisfies a specified condition.
            </summary>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
            The last <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> instance in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection"/> that passes the test in 
            the specified <paramref name="predicate"/> function.</returns>
            <exception cref="T:System.ArgumentNullException">predicate is null.</exception>
            <exception cref="T:System.InvalidOperationException">
            No element satisfies the condition in predicate.-or-The source sequence is empty.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection.ProcessChildItems">
            <summary>
            Process the child items.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection.IsInvalidComment(Syncfusion.UI.Xaml.RichTextBoxAdv.Inline)">
            <summary>
            Determines whether the node is invalid comment.
            </summary>
            <param name="inline"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection.ClearProofedInlines(Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv)">
            <summary>
            Clears the proofed inlines.
            </summary>
            <param name="spanAdv"></param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> elements.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> at the specified <paramref name="index"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection"/>.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> instance to get.</param>
            <returns>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> instance at the specified <paramref name="index"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index was out of range. Must be non-negative and less than the size of the collection.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node,System.Collections.Generic.IEnumerable{Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection"/> class that contains table rows
            copied from the specified <paramref name="collection"/> for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </param>
            <param name="collection">The collection from which the table rows are copied.</param>
            <exception cref="T:System.ArgumentNullException">The collection parameter cannot be null.</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection.NodeCollection_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event of the NodeCollection control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection.Layout">
            <summary>
            Layouts this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection.Add(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
             Adds the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> to the end of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection"/>.
            </summary>
            <param name="tableRowAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> instance to be added to the end of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection.Insert(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Inserts the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> into the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection"/> at the specified <paramref name="index"/>.
            </summary>
            <param name="index">The zero-based index at which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> should be inserted.</param>
            <param name="tableRowAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> instance to insert.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index was out of range. Must be non-negative and less than the size of the collection.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> instance at the specified <paramref name="index"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection"/>.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index is less than zero.-or-Index is equal to or greater than item count.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection.Remove(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
             Removes the first occurrence of the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection"/>.
            </summary>
            <param name="tableRowAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> instance to remove from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection"/>.</param>
            <returns>
            True, if the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> is successfully removed. Otherwise, false. 
            This method also returns false if specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> was not found in the original <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection.First">
            <summary>
            Returns the first <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> instance from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection"/>.
            </summary>
            <returns>The first <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> instance in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            The source sequence is empty.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection.First(System.Func{Syncfusion.UI.Xaml.RichTextBoxAdv.Node,System.Boolean})">
            <summary>
            Returns the first <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> instance from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection"/> that satisfies a specified condition.
            </summary>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
            The first <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> instance in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection"/> that passes the test in 
            the specified <paramref name="predicate"/> function.</returns>
            <exception cref="T:System.ArgumentNullException">predicate is null.</exception>
            <exception cref="T:System.InvalidOperationException">
            No element satisfies the condition in predicate.-or-The source sequence is empty.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection.Last">
            <summary>
            Returns the last <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> instance from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection"/>.
            </summary>
            <returns>The last <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> instance in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            The source sequence is empty.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection.Last(System.Func{Syncfusion.UI.Xaml.RichTextBoxAdv.Node,System.Boolean})">
            <summary>
            Returns the last <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> instance from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection"/> that satisfies a specified condition.
            </summary>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
            The last <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> instance in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection"/> that passes the test in 
            the specified <paramref name="predicate"/> function.</returns>
            <exception cref="T:System.ArgumentNullException">predicate is null.</exception>
            <exception cref="T:System.InvalidOperationException">
            No element satisfies the condition in predicate.-or-The source sequence is empty.
            </exception>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> elements.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> at the specified <paramref name="index"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection"/>.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> instance to get.</param>
            <returns>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> instance at the specified <paramref name="index"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index was out of range. Must be non-negative and less than the size of the collection.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node,System.Collections.Generic.IEnumerable{Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection"/> class that contains table cells
            copied from the specified <paramref name="collection"/> for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/>.
            </param>
            <param name="collection">The collection from which the table cells are copied.</param>
            <exception cref="T:System.ArgumentNullException">The collection parameter cannot be null.</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection.NodeCollection_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event of the NodeCollection control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection.Layout">
            <summary>
            Layouts this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection.Add(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
             Adds the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> to the end of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection"/>.
            </summary>
            <param name="tableCellAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> instance to be added to the end of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection.Insert(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Inserts the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> into the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection"/> at the specified <paramref name="index"/>.
            </summary>
            <param name="index">The zero-based index at which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> should be inserted.</param>
            <param name="tableCellAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> instance to insert.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index was out of range. Must be non-negative and less than the size of the collection.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> instance at the specified <paramref name="index"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection"/>.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index is less than zero.-or-Index is equal to or greater than item count.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection.Remove(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
             Removes the first occurrence of the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection"/>.
            </summary>
            <param name="tableCellAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> instance to remove from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection"/>.</param>
            <returns>
            True, if the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> is successfully removed. Otherwise, false. 
            This method also returns false if specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> was not found in the original <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection.First">
            <summary>
            Returns the first <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> instance from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection"/>.
            </summary>
            <returns>The first <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> instance in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            The source sequence is empty.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection.First(System.Func{Syncfusion.UI.Xaml.RichTextBoxAdv.Node,System.Boolean})">
            <summary>
            Returns the first <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> instance from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection"/> that satisfies a specified condition.
            </summary>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
            The first <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> instance in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection"/> that passes the test in 
            the specified <paramref name="predicate"/> function.</returns>
            <exception cref="T:System.ArgumentNullException">predicate is null.</exception>
            <exception cref="T:System.InvalidOperationException">
            No element satisfies the condition in predicate.-or-The source sequence is empty.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection.Last">
            <summary>
            Returns the last <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> instance from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection"/>.
            </summary>
            <returns>The last <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> instance in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            The source sequence is empty.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection.Last(System.Func{Syncfusion.UI.Xaml.RichTextBoxAdv.Node,System.Boolean})">
            <summary>
            Returns the last <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> instance from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection"/> that satisfies a specified condition.
            </summary>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
            The last <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> instance in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection"/> that passes the test in 
            the specified <paramref name="predicate"/> function.</returns>
            <exception cref="T:System.ArgumentNullException">predicate is null.</exception>
            <exception cref="T:System.InvalidOperationException">
            No element satisfies the condition in predicate.-or-The source sequence is empty.
            </exception>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNodeCollection">
            <summary>
            An abstract class that provides a base for the collection of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode"/> objects.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNodeCollection.OwnerBase">
            <summary>
            Gets the owner base node.
            </summary>
            <value>
            The owner base node.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNodeCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNodeCollection"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode"/>.
            </summary>
            <param name="owner">The owner for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNodeCollection"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNodeCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode,System.Collections.Generic.IEnumerable{Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNodeCollection"/> class that contains base nodes 
            copied from the specified <paramref name="collection"/> for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode"/>.
            </summary>
            <param name="owner">The owner for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNodeCollection"/>.</param>
            <param name="collection">The collection from which the base nodes are copied.</param>
            <exception cref="T:System.ArgumentNullException">The collection parameter cannot be null.</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNodeCollection.BaseNodeCollection_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event of the NodeCollection control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNodeCollection.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdvCollection">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> elements.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdvCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> at the specified <paramref name="index"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdvCollection"/>.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> instance to get.</param>
            <returns>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> instance at the specified <paramref name="index"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdvCollection"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index was out of range. Must be non-negative and less than the size of the collection.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdvCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdvCollection"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdvCollection"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdvCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode,System.Collections.Generic.IEnumerable{Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdvCollection"/> class that contains lists
            copied from the specified <paramref name="collection"/> for the specified <paramref name="owner"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdvCollection"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
            </param>
            <param name="collection">The collection from which the lists are copied.</param>
            <exception cref="T:System.ArgumentNullException">The collection parameter cannot be null.</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdvCollection.Add(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
             Adds the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> to the end of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdvCollection"/>.
            </summary>
            <param name="listAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> instance to be added to the end of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdvCollection"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdvCollection.Insert(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
            Inserts the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> into the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdvCollection"/> at the specified <paramref name="index"/>.
            </summary>
            <param name="index">The zero-based index at which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> should be inserted.</param>
            <param name="listAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> instance to insert.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index was out of range. Must be non-negative and less than the size of the collection.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdvCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> instance at the specified <paramref name="index"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdvCollection"/>.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index is less than zero.-or-Index is equal to or greater than item count.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdvCollection.Remove(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
             Removes the first occurrence of the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdvCollection"/>.
            </summary>
            <param name="listAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> instance to remove from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdvCollection"/>.</param>
            <returns>
            True, if the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> is successfully removed. Otherwise, false. 
            This method also returns false if specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> was not found in the original <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdvCollection"/>.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdvCollection">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/> objects.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdvCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/> instance at the specified <paramref name="index"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdvCollection"/>.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/> instance to get.</param>
            <returns>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/> instance at the specified <paramref name="index"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdvCollection"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index was out of range. Must be non-negative and less than the size of the collection.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdvCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdvCollection"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdvCollection"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdvCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode,System.Collections.Generic.IEnumerable{Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdvCollection"/> class that contains abstract lists
            copied from the specified <paramref name="collection"/> for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdvCollection"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
            </param>
            <param name="collection">The collection from which the abstract lists are copied.</param>
            <exception cref="T:System.ArgumentNullException">The collection parameter cannot be null.</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdvCollection.Add(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
             Adds the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/> to the end of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdvCollection"/>.
            </summary>
            <param name="abstractListAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/> instance to be added to the end of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdvCollection"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdvCollection.Insert(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
            Inserts the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/> into the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdvCollection"/> at the specified <paramref name="index"/>.
            </summary>
            <param name="index">The zero-based index at which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/> should be inserted.</param>
            <param name="abstractListAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/> instance to insert.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index was out of range. Must be non-negative and less than the size of the collection.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdvCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/> instance at the specified <paramref name="index"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdvCollection"/>.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/> to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index is less than zero.-or-Index is equal to or greater than item count.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdvCollection.Remove(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
             Removes the first occurrence of the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/> from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdvCollection"/>.
            </summary>
            <param name="abstractListAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/> instance to remove from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdvCollection"/>.</param>
            <returns>
            True, if the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/> is successfully removed. Otherwise, false. 
            This method also returns false if specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/> was not found in the original <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdvCollection"/>.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdvCollection">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> elements.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdvCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> at the specified <paramref name="index"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdvCollection"/>.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> instance to get.</param>
            <returns>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> instance at the specified <paramref name="index"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdvCollection"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index was out of range. Must be non-negative and less than the size of the collection.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdvCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdvCollection"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdvCollection"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdvCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode,System.Collections.Generic.IEnumerable{Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdvCollection"/> class that contains list levels
            copied from the specified <paramref name="collection"/> for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdvCollection"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/>.
            </param>
            <param name="collection">The collection from which the list levels are copied.</param>
            <exception cref="T:System.ArgumentNullException">The collection parameter cannot be null.</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdvCollection.Add(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
             Adds the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> to the end of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdvCollection"/>.
            </summary>
            <param name="listLevelAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> instance to be added to the end of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdvCollection"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdvCollection.Insert(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
            Inserts the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> into the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdvCollection"/> at the specified <paramref name="index"/>.
            </summary>
            <param name="index">The zero-based index at which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> should be inserted.</param>
            <param name="listLevelAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> instance to insert.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index was out of range. Must be non-negative and less than the size of the collection.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdvCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> instance at the specified <paramref name="index"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdvCollection"/>.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> instance to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index is less than zero.-or-Index is equal to or greater than item count.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdvCollection.Remove(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
             Removes the first occurrence of the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdvCollection"/>.
            </summary>
            <param name="listLevelAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> instance to remove from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdvCollection"/>.</param>
            <returns>
            True, if the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> is successfully removed. Otherwise, false. 
            This method also returns false if specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> was not found in the original <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdvCollection"/>.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv"/> elements.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv"/> instance in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection"/>,
            by matching the specified <paramref name="levelNumber"/>.
            </summary>
            <param name="levelNumber">
            The level number to match with the level overrides in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection"/>.
            </param>
            <returns>
            Returns the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv"/> instance in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection"/>
            that matches the specified <paramref name="levelNumber"/>, if any. Otherwise returns null.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode,System.Collections.Generic.IEnumerable{Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection"/> class that contains level overrides
            copied from the specified <paramref name="collection"/> for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/>.
            </param>
            <param name="collection">The collection from which the level overrides are copied.</param>
            <exception cref="T:System.ArgumentNullException">The collection parameter cannot be null.</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection.Add(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
             Adds the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv"/> to the end of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection"/>.
            </summary>
            <param name="levelOverrideAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv"/> instance to be added to the end of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection.Insert(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
            Inserts the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv"/> into the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection"/> at the specified <paramref name="index"/>.
            </summary>
            <param name="index">The zero-based index at which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv"/> instance should be inserted.</param>
            <param name="levelOverrideAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv"/> instance to insert.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index was out of range. Must be non-negative and less than the size of the collection.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv"/> instance at the specified <paramref name="index"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection"/>.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv"/> instance to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index is less than zero.-or-Index is equal to or greater than item count.
            </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection.Remove(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
             Removes the first occurrence of the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv"/> from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection"/>.
            </summary>
            <param name="levelOverrideAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv"/> instance to remove from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection"/>.</param>
            <returns>
            True, if the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv"/> is successfully removed. Otherwise, false. 
            This method also returns false if specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv"/> was not found in the original <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementCollection.MaxTextElementHeight">
            <summary>
            Gets the height of the max text element.
            </summary>
            <value>
            The height of the max text element.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementCollection.MaxTextElementBaselineOffset">
            <summary>
            Gets the max text element baseline offset.
            </summary>
            <value>
            The max text element baseline offset.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementCollection.MaxBaselineOffset">
            <summary>
            Gets the max baseline offset.
            </summary>
            <value>
            The max baseline offset.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementCollection.Add(Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox)">
            <summary>
            Adds the specified element.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementCollection.Insert(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox)">
            <summary>
            Inserts the element at specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="element">The element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementCollection.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementCollection.Contains(Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox)">
            <summary>
            Determines whether contains the specified element.
            </summary>
            <param name="element">The element.</param>
            <returns>
              <c>true</c> if contains the specified element; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementCollection.ToList">
            <summary>
            To the list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementCollection.UpdateMaxElement">
            <summary>
            Updates the max element.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementCollection.UpdateMaxElementHeight(Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox)">
            <summary>
            Updates the height of the max element.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeListTypeCommand">
            <summary>
            Implements a command to change list type for the current paragraph or a selection of paragraphs.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeListTypeCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeListTypeCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>. 
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeListTypeCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeListTypeCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.IncreaseIndentCommand">
            <summary>
            Implements a command to increase left indent for the current paragraph or a selection of paragraphs.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.IncreaseIndentCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.IncreaseIndentCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.IncreaseIndentCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.IncreaseIndentCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DecreaseIndentCommand">
            <summary>
            Implements a command to set decrease left indent for the current paragraph or a selection of paragraphs.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DecreaseIndentCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DecreaseIndentCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DecreaseIndentCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DecreaseIndentCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeTableBorderColorCommand">
            <summary>
            Implements a command to change border color for the current table.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeTableBorderColorCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeTableBorderColorCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>. 
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeTableBorderColorCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeTableBorderColorCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeTableCellStyleCommand">
            <summary>
            Implements a command to change style for the current table cell.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeTableCellStyleCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeTableCellStyleCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>. 
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeTableCellStyleCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeTableCellStyleCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BoldCommand">
            <summary>
            Implements a command to set bold for the selected text.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BoldCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BoldCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BoldCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BoldCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ItalicCommand">
            <summary>
            Implements a command to set italic for the selected text.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ItalicCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ItalicCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ItalicCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ItalicCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FontColorCommand">
            <summary>
            Implements a command to set font color for the selected text.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FontColorCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FontColorCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FontColorCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FontColorCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FontFamilyCommand">
            <summary>
            Implements a command to set font family for the selected text.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FontFamilyCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FontFamilyCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FontFamilyCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FontFamilyCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FontSizeCommand">
            <summary>
            Implements a command to set font size for the selected text.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FontSizeCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FontSizeCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FontSizeCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FontSizeCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HighlightColorCommand">
            <summary>
            Implements a command to set highlight color for the selected text.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HighlightColorCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HighlightColorCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HighlightColorCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HighlightColorCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignmentCommand">
            <summary>
            Implements a command to set baseline alignment style for the selected text.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignmentCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignmentCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignmentCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignmentCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.StrikeThroughCommand">
            <summary>
            Implements a command to set strike through style for the selected text.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.StrikeThroughCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.StrikeThroughCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.StrikeThroughCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.StrikeThroughCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.UnderlineCommand">
            <summary>
            Implements a command to set underline style for the selected text.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UnderlineCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.UnderlineCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.UnderlineCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UnderlineCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CopyCommand">
            <summary>
            Implements a command to copy the selected contents to clipboard.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CopyCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CopyCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CopyCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CopyCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the copy command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CopyCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the copy command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CutCommand">
            <summary>
            Implements a command to move the selected contents to clipboard.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CutCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CutCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CutCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CutCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the cut command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CutCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the cut command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.PasteCommand">
            <summary>
            Implements a command to paste the clipboard contents.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PasteCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.PasteCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.PasteCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PasteCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the paste command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PasteCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the paste command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ShowCommentsCommand">
            <summary>
            Implements a command to show the comments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ShowCommentsCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ShowCommentsCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>. 
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ShowCommentsCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ShowCommentsCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ShowCommentsCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.NewCommentCommand">
            <summary>
            Implements a command to add a new comment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.NewCommentCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.NewCommentCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>. 
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.NewCommentCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.NewCommentCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.NewCommentCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteCommentCommand">
            <summary>
            Implements a command to delete the current comment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteCommentCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteCommentCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>. 
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteCommentCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteCommentCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteCommentCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteAllCommentsCommand">
            <summary>
            Implements a command to delete all the existing comments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteAllCommentsCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteAllCommentsCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>. 
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteAllCommentsCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteAllCommentsCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteAllCommentsCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.NextCommentCommand">
            <summary>
            Implements a command for navigating to the next comment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.NextCommentCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.NextCommentCommand">NextCommentCommand</see> class. 
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.NextCommentCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.NextCommentCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.NextCommentCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.PreviousCommentCommand">
            <summary>
            Implements a command for navigating to the previous comment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PreviousCommentCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.PreviousCommentCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>. 
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.PreviousCommentCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PreviousCommentCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PreviousCommentCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommandBase">
            <summary>
            Provides the base implementation for all the Command classes.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CommandBase.OwnerControl">
            <summary>
            Gets or Sets the owner control of the command.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the command is associated.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommandBase.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommandBase"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>. 
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommandBase"/> is associated.</param>
        </member>
        <member name="E:Syncfusion.UI.Xaml.RichTextBoxAdv.CommandBase.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommandBase.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommandBase.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommandBase.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommandBase.ExecuteChanged">
            <summary>
            Invoked when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommandBase.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteTableCommand">
            <summary>
            Implements a command to delete the current table.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteTableCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteTableCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteTableCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteTableCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteTableCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteRowCommand">
            <summary>
            Implements a command to delete the current row.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteRowCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteRowCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteRowCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteRowCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteRowCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteColumnCommand">
            <summary>
            Implements a command to set delete the current column.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteColumnCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteColumnCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteColumnCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteColumnCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DeleteColumnCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FontDialogCommand">
            <summary>
            Implements a command to show the font dialog.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FontDialogCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FontDialogCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>. 
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FontDialogCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FontDialogCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ShowHyperlinkDialogCommand">
            <summary>
            Implements a command to show the hyperlink dialog.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ShowHyperlinkDialogCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ShowHyperlinkDialogCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ShowHyperlinkDialogCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ShowHyperlinkDialogCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ShowHyperlinkDialogCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ShowOptionsPaneCommand">
            <summary>
            Implements a command to show the options pane.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ShowOptionsPaneCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ShowOptionsPaneCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ShowOptionsPaneCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ShowOptionsPaneCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ShowOptionsPaneCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertHyperlinkCommand">
            <summary>
            Implements a command to insert a hyperlink.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertHyperlinkCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertHyperlinkCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertHyperlinkCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertHyperlinkCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertInlineCommand">
            <summary>
            Represents the InsertInlineCommand class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertInlineCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertInlineCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>. 
            </summary>
            <param name="richTextBoxAdv"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertInlineCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertPictureCommand">
            <summary>
            Implements a command to insert a picture.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertPictureCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertPictureCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertPictureCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertPictureCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertPictureCommand.InsertPicture">
            <summary>
            Inserts the picture.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertPictureCommand.InsertPicture(System.String)">
            <summary>
            Inserts picture from the specified <paramref name="path"/>.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertPictureCommand.InsertPicture(Windows.Storage.StorageFile)">
            <summary>
            Inserts picture from the specified <see cref="T:Windows.Storage.StorageFile"/>.
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertPictureCommand.InsertPicture(System.IO.Stream)">
            <summary>
            Inserts picture from the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="imageStream">The image stream.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertPictureCommand.InsertPicture(System.Byte[])">
            <summary>
            Inserts the picture from the specified array of <see cref="T:System.Byte"/>.
            </summary>
            <param name="bytes">The bytes.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertTableCommand">
            <summary>
            Implements a command to insert a table.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertTableCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertTableCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertTableCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertTableCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertTableCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertColumnCommand">
            <summary>
            Implements a command to insert a column.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertColumnCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertColumnCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertColumnCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertColumnCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertColumnCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertRowCommand">
            <summary>
            Implements a command to insert a row.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertRowCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertRowCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertRowCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertRowCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertRowCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertTableDialogCommand">
            <summary>
            Represents the InsertTableDialogCommand class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertTableDialogCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertTableDialogCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>. 
            </summary>
            <param name="richtextbox">The richTextBoxAdv.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertTableDialogCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.InsertTableDialogCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutTypeCommand">
            <summary>
            Implements a command to set the layout type.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutTypeCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutTypeCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutTypeCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutTypeCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutTypeCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.MergeSelectedCellsCommand">
            <summary>
            Implements a command to merge the selected table cells.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.MergeSelectedCellsCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.MergeSelectedCellsCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>. 
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.MergeSelectedCellsCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.MergeSelectedCellsCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.MergeSelectedCellsCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.NewDocumentCommand">
            <summary>
            Implements a command to create a new document.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.NewDocumentCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.NewDocumentCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.NewDocumentCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.NewDocumentCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.OpenDocumentCommand">
            <summary>
            Implements a command to open the document.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.OpenDocumentCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.OpenDocumentCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.OpenDocumentCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.OpenDocumentCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.OpenDocumentCommand.OpenDocument">
            <summary>
            Opens the document.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SaveDocumentCommand">
            <summary>
            Implements a command to save the document.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SaveDocumentCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SaveDocumentCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SaveDocumentCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SaveDocumentCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SaveDocumentCommand.SaveDocument">
            <summary>
            Save word document
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SaveDocumentCommand.SaveDocument(Windows.Storage.StorageFile)">
            <summary>
            Saves the document.
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SaveAsDocumentCommand">
            <summary>
            Implements a command to save the document in specified format type.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SaveAsDocumentCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SaveAsDocumentCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SaveAsDocumentCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SaveAsDocumentCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SaveAsDocumentCommand.SaveDocument(System.String)">
            <summary>
            Save word document
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SaveAsDocumentCommand.SaveDocument(Windows.Storage.StorageFile)">
            <summary>
            Saves the document.
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphDialogCommand">
            <summary>
            Implements a command to show the paragraph dialog.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphDialogCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphDialogCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>. 
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphDialogCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphDialogCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AfterSpacingCommand">
            <summary>
            Implements a command to set after spacing for the current paragraph or a selection of paragraphs.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.AfterSpacingCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AfterSpacingCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AfterSpacingCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.AfterSpacingCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BeforeSpacingCommand">
            <summary>
            Implements a command to set before spacing for the current paragraph or a selection of paragraphs.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BeforeSpacingCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BeforeSpacingCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BeforeSpacingCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BeforeSpacingCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LeftIndentCommand">
            <summary>
            Implements a command to set left indent for the current paragraph or a selection of paragraphs.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LeftIndentCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LeftIndentCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LeftIndentCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LeftIndentCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RightIndentCommand">
            <summary>
            Implements a command to set right indent for the current paragraph or a selection of paragraphs.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RightIndentCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RightIndentCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RightIndentCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RightIndentCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FirstLineIndentCommand">
            <summary>
            Implements a command to set first line indent for the current paragraph or a selection of paragraphs.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FirstLineIndentCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FirstLineIndentCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FirstLineIndentCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FirstLineIndentCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LineSpacingTypeCommand">
            <summary>
            Implements a command to set line spacing type for the current paragraph or a selection of paragraphs.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineSpacingTypeCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LineSpacingTypeCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LineSpacingTypeCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineSpacingTypeCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LineSpacingCommand">
            <summary>
            Implements a command to set line spacing for the current paragraph or a selection of paragraphs.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineSpacingCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LineSpacingCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LineSpacingCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineSpacingCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextAlignmentCommand">
            <summary>
            Implements a command to set text alignment for the current paragraph or a selection of paragraphs.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextAlignmentCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextAlignmentCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextAlignmentCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextAlignmentCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectCellCommand">
            <summary>
            Implements a command to select the cell.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectCellCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectCellCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectCellCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectCellCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectCellCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellVerticalAlignmentCommand">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellVerticalAlignmentCommand"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellVerticalAlignmentCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellVerticalAlignmentCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellVerticalAlignmentCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellVerticalAlignmentCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellVerticalAlignmentCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellLeftMarginCommand">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellLeftMarginCommand"/> class.
            </summary>
            <param name="richTextBoxAdv">The rich text box adv.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellLeftMarginCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellLeftMarginCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellLeftMarginCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellLeftMarginCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellLeftMarginCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellRightMarginCommand">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellRightMarginCommand"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellRightMarginCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellRightMarginCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellRightMarginCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellRightMarginCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellRightMarginCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellTopMarginCommand">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellTopMarginCommand"/> class.
            </summary>
            <param name="richTextBoxAdv">The rich text box adv.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellTopMarginCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellTopMarginCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellTopMarginCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellTopMarginCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellTopMarginCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellBottomMarginCommand">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAlignmentCommand"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellBottomMarginCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellBottomMarginCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellBottomMarginCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellBottomMarginCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellBottomMarginCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellContentAlignmentCommand">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellContentAlignmentCommand"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellContentAlignmentCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellContentAlignmentCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellContentAlignmentCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellContentAlignmentCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellContentAlignmentCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectColumnCommand">
            <summary>
            Implements a command to select the column.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectColumnCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectColumnCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>. 
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectColumnCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectColumnCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectColumnCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectRowCommand">
            <summary>
            Implements a command to select the row.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectRowCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectRowCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>. 
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectRowCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectRowCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectRowCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectTableCommand">
            <summary>
            Implements a command to select the table.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectTableCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectTableCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>. 
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectTableCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectTableCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectTableCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAlignmentCommand">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAlignmentCommand"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAlignmentCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAlignmentCommand"/> class.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAlignmentCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAlignmentCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAlignmentCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableLeftIndentCommand">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableLeftIndentCommand"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableLeftIndentCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableLeftIndentCommand"/> class.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableLeftIndentCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableLeftIndentCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableLeftIndentCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellSpacingCommand">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellSpacingCommand"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellSpacingCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellSpacingCommand"/> class.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellSpacingCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellSpacingCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellSpacingCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellLeftMarginCommand">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellLeftMarginCommand"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellLeftMarginCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellLeftMarginCommand"/> class.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellLeftMarginCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellLeftMarginCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellLeftMarginCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellRightMarginCommand">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellRightMarginCommand"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellRightMarginCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellRightMarginCommand"/> class.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellRightMarginCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellRightMarginCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellRightMarginCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellTopMarginCommand">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellTopMarginCommand"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellTopMarginCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellTopMarginCommand"/> class.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellTopMarginCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellTopMarginCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellTopMarginCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellBottomMarginCommand">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellBottomMarginCommand"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellBottomMarginCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellBottomMarginCommand"/> class.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellBottomMarginCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellBottomMarginCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DefaultCellBottomMarginCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.UndoCommand">
            <summary>
            Implements a command to undo the last edit operation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UndoCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.UndoCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.UndoCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UndoCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UndoCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RedoCommand">
            <summary>
            Implements a command to redo the last undone operation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RedoCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RedoCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RedoCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RedoCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RedoCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ShowSpellingPaneCommand">
            <summary>
            Implements a command to show spelling pane.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ShowSpellingPaneCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ShowSpellingPaneCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ShowSpellingPaneCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ShowSpellingPaneCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ShowSpellingPaneCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AddToDictionaryCommand">
            <summary>
            Implements a command to add current word to custom dictionary.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.AddToDictionaryCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AddToDictionaryCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AddToDictionaryCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.AddToDictionaryCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.AddToDictionaryCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CheckSpellingCommand">
            <summary>
            Implements a command to check spelling errors in the document.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CheckSpellingCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CheckSpellingCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CheckSpellingCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CheckSpellingCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CheckSpellingCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeSpellingCommand">
            <summary>
            Implements a command to change the error word in current position of the document.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeSpellingCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeSpellingCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeSpellingCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeSpellingCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeSpellingCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeAllSpellingCommand">
            <summary>
            Implements a command to change all the occurrence of the error word in the document.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeAllSpellingCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeAllSpellingCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeAllSpellingCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeAllSpellingCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ChangeAllSpellingCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.IgnoreAllSpellingErrorsCommand">
            <summary>
            Implements a command to ignore all the occurrence of the error word in the document.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.IgnoreAllSpellingErrorsCommand.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.IgnoreAllSpellingErrorsCommand"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.IgnoreAllSpellingErrorsCommand"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.IgnoreAllSpellingErrorsCommand.CanExecuteCommand(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
            <returns>True if this command can be executed.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.IgnoreAllSpellingErrorsCommand.ExecuteCommand(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed,
            this object can be set to null.
            </param>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Syncfusion.UI.Xaml.RichTextBoxAdv.OperatorConstants" -->
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv">
            <summary>
            An abstract class that provides a base for all block-level elements in a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.Document">
            <summary>
            Gets the document.
            </summary>
            <value>
            The document.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.Section">
            <summary>
            Gets the section.
            </summary>
            <value>
            The section.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.BaseParent">
            <summary>
            Gets the base parent.
            </summary>
            <value>
            The base parent.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.IsInHeaderFooter">
            <summary>
            Gets a value indicating whether this instance is in header footer.
            </summary>
            <value>
            <c>true</c> if this instance is in header footer; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.AssociatedCell">
            <summary>
            Gets the associated cell.
            </summary>
            <value>
            The associated cell.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.PreviousBlock">
            <summary>
            Gets or Sets the previous Block
            </summary>
            <value>
            The previous block.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.NextBlock">
            <summary>
            Gets or Sets the next block.
            </summary>
            <value>
            The next block.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.IsInsideTable">
            <summary>
            Gets a value indicating whether this instance is inside table.
            </summary>
            <value>
            <c>true</c> if this instance is inside table; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.LeftIndent">
            <summary>
            Gets the left indent.
            </summary>
            <value>
            The left indent.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.RightIndent">
            <summary>
            Gets the right indent.
            </summary>
            <value>
            The right indent.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>. 
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv"/>.
            The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.RelayoutOrShiftWidgets(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Relayouts the or shift widgets.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.ShiftNextWidgets">
            <summary>
            Shift Next widgets
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.LayoutNextItems(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Layouts the next items.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.UpdateListItemsTillEnd(System.Boolean)">
            <summary>
            Updates the list items till document end.
            </summary>
            <param name="updateNextBlockList">if set to <c>true</c> [update next block list].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.GetBodyWidgetOfPreviousBlock(System.Int32@)">
            <summary>
            Gets the body widget of previous block.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.UpdateWidgetsToBody(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer,Syncfusion.UI.Xaml.RichTextBoxAdv.Widget)">
            <summary>
            Updates the widgets to body.
            </summary>
            <param name="viewer">The viewer.</param>
            <param name="curWidget">The cur widget.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.GetContainerWidth">
            <summary>
            Gets the width of the container.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.Layout">
            <summary>
            Layouts this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.Layout(System.Boolean)">
            <summary>
            Layouts this instance.
            </summary>
            <param name="isSkipNextLayoutingItem">The isSkipNextLayoutingItem.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.GetNextRenderedBlock">
            <summary>
            Gets the next rendered block.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.RemoveBlock">
            <summary>
            Removes the block.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.GetNextSelection(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Gets the next selection.
            </summary>
            <param name="selection">The selection.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.GetPreviousSelection(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Gets the previous selection.
            </summary>
            <param name="selection">The selection.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.GetNextParagraph">
            <summary>
            Gets the next paragraph.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.GetPreviousParagraph">
            <summary>
            Gets the previous paragraph.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.GetPreviousBlock">
            <summary>
            Gets the previous block.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.IsExistBefore(Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv)">
            <summary>
            Determines whether this block exists before the specified block.
            </summary>
            <param name="block">The block.</param>
            <returns>
              <c>true</c> if this block exists exist before the specified block; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.IsExistAfter(Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv)">
            <summary>
            Determines whether this block exists after the specified block.
            </summary>
            <param name="block">The block.</param>
            <returns>
              <c>true</c> if this block exists exist after the specified block; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.GetContainerTable">
            <summary>
            Gets the container table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv.ClearProofedInlines">
            <summary>
            clear the inlines from the proofing list
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BreadthsInfo.#ctor(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="min"></param>
            <param name="max"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BreadthsInfo.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BreadthsInfo.MinWidth">
            <summary>
            It gets/sets the MinWidth value
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BreadthsInfo.MaxWidth">
            <summary>
            It gets/sets the MaxWidth value
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BreadthsInfo.DefaultBreadths">
            <summary>
            Default Breadths value
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BreadthsInfo.Max(Syncfusion.UI.Xaml.RichTextBoxAdv.BreadthsInfo,Syncfusion.UI.Xaml.RichTextBoxAdv.BreadthsInfo)">
            <summary>
            Returns the Max of two Breadths
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BreadthsInfo.Min(Syncfusion.UI.Xaml.RichTextBoxAdv.BreadthsInfo,Syncfusion.UI.Xaml.RichTextBoxAdv.BreadthsInfo)">
            <summary>
            Returns the Min of Two Breadths
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv">
             <summary>
             Represents the root element of the rich text contents in a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control
             </summary>
             <example>
             <para>The following code example demonstrates how to define the document in <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"&gt;
                 &lt;RichTextBoxAdv:DocumentAdv&gt;
                     &lt;RichTextBoxAdv:SectionAdv&gt;
                         &lt;RichTextBoxAdv:ParagraphAdv&gt;
                             &lt;RichTextBoxAdv:SpanAdv&gt;Hello World.&lt;/RichTextBoxAdv:SpanAdv&gt;
                         &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                     &lt;/RichTextBoxAdv:SectionAdv&gt;
                 &lt;/RichTextBoxAdv:DocumentAdv&gt;
             &lt;/RichTextBoxAdv:SfRichTextBoxAdv&gt;
             </code>
             <code lang="C#">
             // Defines the control.
             SfRichTextBoxAdv richTextBoxAdv = new SfRichTextBoxAdv();
             
             DocumentAdv documentAdv = new DocumentAdv();
             SectionAdv sectionAdv = new SectionAdv();
             ParagraphAdv paragraphAdv = new ParagraphAdv();
             SpanAdv spanAdv = new SpanAdv();
             spanAdv.Text = "Hello world.";
             
             paragraphAdv.Inlines.Add(spanAdv);
             sectionAdv.Blocks.Add(paragraphAdv);
             documentAdv.Sections.Add(sectionAdv);
             
             // Defines the document for SfRichTextBoxAdv control.
             richTextBoxAdv.Document = documentAdv;
             </code>
             <code lang="VB">
             ' Defines the control.
             Dim richTextBoxAdv As New SfRichTextBoxAdv()
            
             Dim documentAdv As New DocumentAdv()
             Dim sectionAdv As New SectionAdv()
             Dim paragraphAdv As New ParagraphAdv()
             Dim spanAdv As New SpanAdv()
             spanAdv.Text = "Hello world."
            
             paragraphAdv.Inlines.Add(spanAdv)
             sectionAdv.Blocks.Add(paragraphAdv)
             documentAdv.Sections.Add(sectionAdv)
             
             ' Defines the document for SfRichTextBoxAdv control.
             richTextBoxAdv.Document = documentAdv
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.OwnerControl">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.Sections">
             <summary>
             Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
             </summary>
             <value>
             The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
             </value>
             <example>
             <para>The following code example demonstrates how to define the sections.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:DocumentAdv&gt;
                 &lt;RichTextBoxAdv:SectionAdv&gt;
                     &lt;RichTextBoxAdv:ParagraphAdv&gt;
                         &lt;RichTextBoxAdv:SpanAdv&gt;Hello World.&lt;/RichTextBoxAdv:SpanAdv&gt;
                     &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                 &lt;/RichTextBoxAdv:SectionAdv&gt;
             &lt;/RichTextBoxAdv:DocumentAdv&gt;
             </code>
             <code lang="C#">
             // Defines the document.
             DocumentAdv documentAdv = new DocumentAdv();
             SectionAdv sectionAdv = new SectionAdv();
             ParagraphAdv paragraphAdv = new ParagraphAdv();
             SpanAdv spanAdv = new SpanAdv();
             spanAdv.Text = "Hello world.";
             
             paragraphAdv.Inlines.Add(spanAdv);
             sectionAdv.Blocks.Add(paragraphAdv);
             documentAdv.Sections.Add(sectionAdv);
             // You can add any number of sections.
             </code>
             <code lang="VB">
             ' Defines the document.
             Dim documentAdv As New DocumentAdv()
             Dim sectionAdv As New SectionAdv()
             Dim paragraphAdv As New ParagraphAdv()
             Dim spanAdv As New SpanAdv()
             spanAdv.Text = "Hello world."
            
             paragraphAdv.Inlines.Add(spanAdv)
             sectionAdv.Blocks.Add(paragraphAdv)
             documentAdv.Sections.Add(sectionAdv)
             ' You can add any number of sections.
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value>
            <c>true</c> if this instance is empty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.DocumentStart">
            <summary>
            Gets the start <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
            </summary>
            <value>
            The start <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.DocumentEnd">
            <summary>
            Gets the end <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
            </summary>
            <value>
            The end <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.ParagraphFormat">
             <summary>
             Gets or sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.ParagraphFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
             </summary>
             <value>
             The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.ParagraphFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
             </value>
             <example>
             <para>The following code example demonstrates how to define the paragraph format.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:DocumentAdv&gt;
                 &lt;RichTextBoxAdv:DocumentAdv.ParagraphFormat&gt;
                     &lt;RichTextBoxAdv:ParagraphFormat FirstLineIndent="48"/&gt;
                 &lt;/RichTextBoxAdv:DocumentAdv.ParagraphFormat&gt;
                 &lt;RichTextBoxAdv:SectionAdv&gt;
                     &lt;RichTextBoxAdv:ParagraphAdv&gt;
                         &lt;RichTextBoxAdv:SpanAdv&gt;Hello World.&lt;/RichTextBoxAdv:SpanAdv&gt;
                     &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                 &lt;/RichTextBoxAdv:SectionAdv&gt;
             &lt;/RichTextBoxAdv:DocumentAdv&gt;
             </code>
             <code lang="C#">
             // Defines the document.
             DocumentAdv documentAdv = new DocumentAdv();
             documentAdv.ParagraphFormat = new ParagraphFormat();
             documentAdv.ParagraphFormat.FirstLineIndent = 48;
             
             SectionAdv sectionAdv = new SectionAdv();
             ParagraphAdv paragraphAdv = new ParagraphAdv();
             SpanAdv spanAdv = new SpanAdv();
             spanAdv.Text = "Hello world.";
             
             paragraphAdv.Inlines.Add(spanAdv);
             sectionAdv.Blocks.Add(paragraphAdv);
             documentAdv.Sections.Add(sectionAdv);
             </code>
             <code lang="VB">
             ' Defines the document.
             Dim documentAdv As New DocumentAdv()
             documentAdv.ParagraphFormat = New ParagraphFormat()
             documentAdv.ParagraphFormat.FirstLineIndent = 48
             
             Dim sectionAdv As New SectionAdv()
             Dim paragraphAdv As New ParagraphAdv()
             Dim spanAdv As New SpanAdv()
             spanAdv.Text = "Hello world."
            
             paragraphAdv.Inlines.Add(spanAdv)
             sectionAdv.Blocks.Add(paragraphAdv)
             documentAdv.Sections.Add(sectionAdv)
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.CharacterFormat">
             <summary>
             Gets or sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.CharacterFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
             </summary>
             <value>
             The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.CharacterFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
             </value>
             <example>
             <para>The following code example demonstrates how to define the character format.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:DocumentAdv&gt;
                 &lt;RichTextBoxAdv:DocumentAdv.CharacterFormat&gt;
                     &lt;RichTextBoxAdv:CharacterFormat Italic="True"/&gt;
                 &lt;/RichTextBoxAdv:DocumentAdv.CharacterFormat&gt;
                 &lt;RichTextBoxAdv:SectionAdv&gt;
                     &lt;RichTextBoxAdv:ParagraphAdv&gt;
                         &lt;RichTextBoxAdv:SpanAdv&gt;Hello World.&lt;/RichTextBoxAdv:SpanAdv&gt;
                     &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                 &lt;/RichTextBoxAdv:SectionAdv&gt;
             &lt;/RichTextBoxAdv:DocumentAdv&gt;
             </code>
             <code lang="C#">
             // Defines the document.
             DocumentAdv documentAdv = new DocumentAdv();
             documentAdv.CharacterFormat = new CharacterFormat();
             documentAdv.CharacterFormat.Italic = true;
             
             SectionAdv sectionAdv = new SectionAdv();
             ParagraphAdv paragraphAdv = new ParagraphAdv();
             SpanAdv spanAdv = new SpanAdv();
             spanAdv.Text = "Hello world.";
             
             paragraphAdv.Inlines.Add(spanAdv);
             sectionAdv.Blocks.Add(paragraphAdv);
             documentAdv.Sections.Add(sectionAdv);
             </code>
             <code lang="VB">
             ' Defines the document.
             Dim documentAdv As New DocumentAdv()
             documentAdv.CharacterFormat = New CharacterFormat()
             documentAdv.CharacterFormat.Italic = True
             
             Dim sectionAdv As New SectionAdv()
             Dim paragraphAdv As New ParagraphAdv()
             Dim spanAdv As New SpanAdv()
             spanAdv.Text = "Hello world."
            
             paragraphAdv.Inlines.Add(spanAdv)
             sectionAdv.Blocks.Add(paragraphAdv)
             documentAdv.Sections.Add(sectionAdv)
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.BackgroundColor">
            <summary>
            Gets or sets the background color for the current document.
            </summary>
            <value>
            The background color.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.Background">
            <summary>
            Gets the background.
            </summary>
            <value>
            The background.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.Lists">
             <summary>
             Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdvCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
             </summary>
             <value>
             The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdvCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
             </value>
             <example>
             <para>The following code example demonstrates how to define the lists.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:DocumentAdv&gt;
                 &lt;RichTextBoxAdv:DocumentAdv.AbstractLists&gt;
                     &lt;RichTextBoxAdv:AbstractListAdv AbstractListId="6"&gt;
                         &lt;RichTextBoxAdv:ListLevelAdv ListLevelPattern="Number" NumberFormat="(%1.)" StartAt="1" FollowCharacter="Tab"&gt;
                             &lt;RichTextBoxAdv:ListLevelAdv.ParagraphFormat&gt;
                                 &lt;RichTextBoxAdv:ParagraphFormat LeftIndent="48" FirstLineIndent="-24" /&gt;
                             &lt;/RichTextBoxAdv:ListLevelAdv.ParagraphFormat&gt;
                         &lt;/RichTextBoxAdv:ListLevelAdv&gt;
                     &lt;/RichTextBoxAdv:AbstractListAdv&gt;
                     &lt;!-- Any number of abstract lists can be added.--&gt;
                 &lt;/RichTextBoxAdv:DocumentAdv.AbstractLists&gt;
                 &lt;RichTextBoxAdv:DocumentAdv.Lists&gt;
                     &lt;RichTextBoxAdv:ListAdv ListId="4" AbstractListId="6" /&gt;
                     &lt;!-- Any number of  lists can be added.--&gt;
                 &lt;/RichTextBoxAdv:DocumentAdv.Lists&gt;   
                 &lt;RichTextBoxAdv:SectionAdv&gt;
                     &lt;RichTextBoxAdv:ParagraphAdv&gt;
                         &lt;RichTextBoxAdv:ParagraphAdv.ParagraphFormat&gt;
                             &lt;RichTextBoxAdv:ParagraphFormat&gt;
                                 &lt;RichTextBoxAdv:ParagraphFormat.ListFormat&gt;
                                     &lt;RichTextBoxAdv:ListFormat ListId="4" ListLevelNumber="0" /&gt;
                                 &lt;/RichTextBoxAdv:ParagraphFormat.ListFormat&gt;
                             &lt;/RichTextBoxAdv:ParagraphFormat&gt;
                         &lt;/RichTextBoxAdv:ParagraphAdv.ParagraphFormat&gt;
                         &lt;RichTextBoxAdv:SpanAdv&gt;Hello World.&lt;/RichTextBoxAdv:SpanAdv&gt;
                     &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                 &lt;/RichTextBoxAdv:SectionAdv&gt;
             &lt;/RichTextBoxAdv:DocumentAdv&gt;
             </code>
             <code lang="C#">
             // Defines the document.
             DocumentAdv documentAdv = new DocumentAdv();
             // Initializes an abstract list.
             AbstractListAdv abstractListAdv = new AbstractListAdv();
             // Defines the id for abstract list.
             abstractListAdv.AbstractListId = 6;
             // Initializes a list level.
             ListLevelAdv listLevel = new ListLevelAdv(abstractListAdv);
             listLevel.ListLevelPattern = ListLevelPattern.Number;
             listLevel.NumberFormat = "(%1.)";
             listLevel.StartAt = 1;
             listLevel.FollowCharacter = FollowCharacterType.Tab;
             listLevel.ParagraphFormat = new ParagraphFormat(listLevel);
             listLevel.ParagraphFormat.LeftIndent = 48;
             listLevel.ParagraphFormat.FirstLineIndent = -24;
             // Adds the list level to the abstract list. Upto nine list levels can be added.
             abstractListAdv.Levels.Add(listLevel);
            
             documentAdv.AbstractLists.Add(abstractListAdv);
             // Add any number of abstract lists here.
            
             ListAdv listAdv = new ListAdv();
             listAdv.ListId = 4;
             listAdv.AbstractListId = abstractListAdv.AbstractListId;
             documentAdv.Lists.Add(listAdv);
             // Add any number of lists here.
            
             SectionAdv sectionAdv = new SectionAdv();
             ParagraphAdv paragraphAdv = new ParagraphAdv();
             paragraphAdv.ParagraphFormat.ListFormat = new ListFormat();
             paragraphAdv.ParagraphFormat.ListFormat.ListId = 4;
             paragraphAdv.ParagraphFormat.ListFormat.ListLevelNumber = 0;
             SpanAdv spanAdv = new SpanAdv();
             spanAdv.Text = "Hello world.";
            
             paragraphAdv.Inlines.Add(spanAdv);
             sectionAdv.Blocks.Add(paragraphAdv);
             documentAdv.Sections.Add(sectionAdv);
             </code>
             <code lang="VB">
             ' Defines the document.
             Dim documentAdv As New DocumentAdv()
             ' Initializes an abstract list.
             Dim abstractListAdv As New AbstractListAdv()
             ' Defines the id for abstract list.
             abstractListAdv.AbstractListId = 6
             ' Initializes a list level.
             Dim listLevel As New ListLevelAdv(abstractListAdv)
             listLevel.ListLevelPattern = ListLevelPattern.Number
             listLevel.NumberFormat = "(%1.)"
             listLevel.StartAt = 1
             listLevel.FollowCharacter = FollowCharacterType.Tab
             listLevel.ParagraphFormat = New ParagraphFormat(listLevel)
             listLevel.ParagraphFormat.LeftIndent = 48
             listLevel.ParagraphFormat.FirstLineIndent = -24
             ' Adds the list level to the abstract list. Upto nine list levels can be added.
             abstractListAdv.Levels.Add(listLevel)
             
             documentAdv.AbstractLists.Add(abstractListAdv)
             ' Add any number of abstract lists here.
             
             Dim listAdv As New ListAdv()
             listAdv.ListId = 4
             listAdv.AbstractListId = abstractListAdv.AbstractListId
             document.Lists.Add(listAdv)
             ' Add any number of lists here. 
             
             Dim sectionAdv As New SectionAdv()
             Dim paragraphAdv As New ParagraphAdv()
             paragraphAdv.ParagraphFormat.ListFormat = New ListFormat()
             paragraphAdv.ParagraphFormat.ListFormat.ListId = 4
             paragraphAdv.ParagraphFormat.ListFormat.ListLevelNumber = 0
             Dim spanAdv As New SpanAdv()
             spanAdv.Text = "Hello world."
            
             paragraphAdv.Inlines.Add(spanAdv)
             sectionAdv.Blocks.Add(paragraphAdv)
             documentAdv.Sections.Add(sectionAdv)
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.AbstractLists">
             <summary>
             Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdvCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
             </summary>
             <value>
             The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdvCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
             </value>
             <example>
             <para>The following code example demonstrates how to define the abstract lists.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:DocumentAdv&gt;
                 &lt;RichTextBoxAdv:DocumentAdv.AbstractLists&gt;
                     &lt;RichTextBoxAdv:AbstractListAdv AbstractListId="6"&gt;
                         &lt;RichTextBoxAdv:ListLevelAdv ListLevelPattern="Number" NumberFormat="(%1.)" StartAt="1" FollowCharacter="Tab"&gt;
                             &lt;RichTextBoxAdv:ListLevelAdv.ParagraphFormat&gt;
                                 &lt;RichTextBoxAdv:ParagraphFormat LeftIndent="48" FirstLineIndent="-24" /&gt;
                             &lt;/RichTextBoxAdv:ListLevelAdv.ParagraphFormat&gt;
                         &lt;/RichTextBoxAdv:ListLevelAdv&gt;
                     &lt;/RichTextBoxAdv:AbstractListAdv&gt;
                     &lt;!-- Any number of abstract lists can be added.--&gt;
                 &lt;/RichTextBoxAdv:DocumentAdv.AbstractLists&gt;
                 &lt;RichTextBoxAdv:DocumentAdv.Lists&gt;
                     &lt;RichTextBoxAdv:ListAdv ListId="4" AbstractListId="6" /&gt;
                     &lt;!-- Any number of  lists can be added.--&gt;
                 &lt;/RichTextBoxAdv:DocumentAdv.Lists&gt;   
                 &lt;RichTextBoxAdv:SectionAdv&gt;
                     &lt;RichTextBoxAdv:ParagraphAdv&gt;
                         &lt;RichTextBoxAdv:ParagraphAdv.ParagraphFormat&gt;
                             &lt;RichTextBoxAdv:ParagraphFormat&gt;
                                 &lt;RichTextBoxAdv:ParagraphFormat.ListFormat&gt;
                                     &lt;RichTextBoxAdv:ListFormat ListId="4" ListLevelNumber="0" /&gt;
                                 &lt;/RichTextBoxAdv:ParagraphFormat.ListFormat&gt;
                             &lt;/RichTextBoxAdv:ParagraphFormat&gt;
                         &lt;/RichTextBoxAdv:ParagraphAdv.ParagraphFormat&gt;
                         &lt;RichTextBoxAdv:SpanAdv&gt;Hello World.&lt;/RichTextBoxAdv:SpanAdv&gt;
                     &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                 &lt;/RichTextBoxAdv:SectionAdv&gt;
             &lt;/RichTextBoxAdv:DocumentAdv&gt;
             </code>
             <code lang="C#">
             // Defines the document.
             DocumentAdv documentAdv = new DocumentAdv();
             // Initializes an abstract list.
             AbstractListAdv abstractListAdv = new AbstractListAdv();
             // Defines the id for abstract list.
             abstractListAdv.AbstractListId = 6;
             // Initializes a list level.
             ListLevelAdv listLevel = new ListLevelAdv(abstractListAdv);
             listLevel.ListLevelPattern = ListLevelPattern.Number;
             listLevel.NumberFormat = "(%1.)";
             listLevel.StartAt = 1;
             listLevel.FollowCharacter = FollowCharacterType.Tab;
             listLevel.ParagraphFormat = new ParagraphFormat(listLevel);
             listLevel.ParagraphFormat.LeftIndent = 48;
             listLevel.ParagraphFormat.FirstLineIndent = -24;
             // Adds the list level to the abstract list. Upto nine list levels can be added.
             abstractListAdv.Levels.Add(listLevel);
            
             documentAdv.AbstractLists.Add(abstractListAdv);
             // Add any number of abstract lists here.
            
             ListAdv listAdv = new ListAdv();
             listAdv.ListId = 4;
             listAdv.AbstractListId = abstractListAdv.AbstractListId;
             documentAdv.Lists.Add(listAdv);
             // Add any number of lists here.
            
             SectionAdv sectionAdv = new SectionAdv();
             ParagraphAdv paragraphAdv = new ParagraphAdv();
             paragraphAdv.ParagraphFormat.ListFormat = new ListFormat();
             paragraphAdv.ParagraphFormat.ListFormat.ListId = 4;
             paragraphAdv.ParagraphFormat.ListFormat.ListLevelNumber = 0;
             SpanAdv spanAdv = new SpanAdv();
             spanAdv.Text = "Hello world.";
            
             paragraphAdv.Inlines.Add(spanAdv);
             sectionAdv.Blocks.Add(paragraphAdv);
             documentAdv.Sections.Add(sectionAdv);
             </code>
             <code lang="VB">
             ' Defines the document.
             Dim documentAdv As New DocumentAdv()
             ' Initializes an abstract list.
             Dim abstractListAdv As New AbstractListAdv()
             ' Defines the id for abstract list.
             abstractListAdv.AbstractListId = 6
             ' Initializes a list level.
             Dim listLevel As New ListLevelAdv(abstractListAdv)
             listLevel.ListLevelPattern = ListLevelPattern.Number
             listLevel.NumberFormat = "(%1.)"
             listLevel.StartAt = 1
             listLevel.FollowCharacter = FollowCharacterType.Tab
             listLevel.ParagraphFormat = New ParagraphFormat(listLevel)
             listLevel.ParagraphFormat.LeftIndent = 48
             listLevel.ParagraphFormat.FirstLineIndent = -24
             ' Adds the list level to the abstract list. Upto nine list levels can be added.
             abstractListAdv.Levels.Add(listLevel)
             
             documentAdv.AbstractLists.Add(abstractListAdv)
             ' Add any number of abstract lists here.
             
             Dim listAdv As New ListAdv()
             listAdv.ListId = 4
             listAdv.AbstractListId = abstractListAdv.AbstractListId
             document.Lists.Add(listAdv)
             ' Add any number of lists here. 
             
             Dim sectionAdv As New SectionAdv()
             Dim paragraphAdv As New ParagraphAdv()
             paragraphAdv.ParagraphFormat.ListFormat = New ListFormat()
             paragraphAdv.ParagraphFormat.ListFormat.ListId = 4
             paragraphAdv.ParagraphFormat.ListFormat.ListLevelNumber = 0
             Dim spanAdv As New SpanAdv()
             spanAdv.Text = "Hello world."
            
             paragraphAdv.Inlines.Add(spanAdv)
             sectionAdv.Blocks.Add(paragraphAdv)
             documentAdv.Sections.Add(sectionAdv)
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.ListParagraphs">
            <summary>
            Gets or sets the list paragraphs.
            </summary>
            <value>
            The list paragraphs.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.DefaultTabWidth">
             <summary>
             Gets or sets the default tab width of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
             </summary>
             <value>
             The default tab width of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
             </value>
             <example>
             <para>The following code example demonstrates how to define the default tab width.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:DocumentAdv DefaultTabWidth="96"&gt;
                 &lt;RichTextBoxAdv:SectionAdv&gt;
                     &lt;RichTextBoxAdv:ParagraphAdv&gt;
                         &lt;RichTextBoxAdv:SpanAdv&gt;Hello World.&lt;/RichTextBoxAdv:SpanAdv&gt;
                     &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                 &lt;/RichTextBoxAdv:SectionAdv&gt;
             &lt;/RichTextBoxAdv:DocumentAdv&gt;
             </code>
             <code lang="C#">
             // Defines the document.
             DocumentAdv documentAdv = new DocumentAdv();
             documentAdv.DefaultTabWidth = 96;
             
             SectionAdv sectionAdv = new SectionAdv();
             ParagraphAdv paragraphAdv = new ParagraphAdv();
             SpanAdv spanAdv = new SpanAdv();
             spanAdv.Text = "Hello world.";
             
             paragraphAdv.Inlines.Add(spanAdv);
             sectionAdv.Blocks.Add(paragraphAdv);
             documentAdv.Sections.Add(sectionAdv);
             </code>
             <code lang="VB">
             ' Defines the document.
             Dim documentAdv As New DocumentAdv()
             documentAdv.DefaultTabWidth = 96
             
             Dim sectionAdv As New SectionAdv()
             Dim paragraphAdv As New ParagraphAdv()
             Dim spanAdv As New SpanAdv()
             spanAdv.Text = "Hello world."
            
             paragraphAdv.Inlines.Add(spanAdv)
             sectionAdv.Blocks.Add(paragraphAdv)
             documentAdv.Sections.Add(sectionAdv)
             </code>
             </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.ParagraphFormatProperty">
            <summary>
            Identifies the ParagraphFormat dependency property.
            </summary>
            <returns>The identifier for the ParagraphFormat dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.CharacterFormatProperty">
            <summary>
            Identifies the CharacterFormat dependency property.
            </summary>
            <returns>The identifier for the CharacterFormat dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.BackgroundColorProperty">
            <summary>
            Identifies the BackgroundColor dependency property.
            </summary>
            <returns>The identifier for the BackgroundColor dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.DefaultTabWidthProperty">
            <summary>
            Identifies the DefaultTabWidth dependency property.
            </summary>
            <returns>The identifier for the DefaultTabWidth dependency property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.OnParagraphFormatChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when paragraph format changed.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.OnCharacterFormatChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when character format changed.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.OnBackgroundColorChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when background color changed.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.OnDefaultTabWidthChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [default tab width changed].
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.LinkComments">
            <summary>
            Link the Comment Marks to the specific comment in Xaml
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.UpdateListItems(Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv)">
            <summary>
            Updates the list items.
            </summary>
            <param name="block">The block.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.LayoutItems">
            <summary>
            Layouts the items.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.UpdateListParagraphs">
            <summary>
            Updates the list paragraphs.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.ClearWidgets">
            <summary>
            Clears the widgets.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.GetOrCreateList(System.String)">
            <summary>
            Gets the built in list.
            </summary>
            <param name="listType">Type of the list.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.AddListLevels(Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv)">
            <summary>
            Adds the list levels.
            </summary>
            <param name="abstractList">The abstract list.</param>
            <param name="levelNumber">The level number.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.GetListAdv(System.String)">
            <summary>
            Gets the list adv.
            </summary>
            <param name="listName">Name of the list.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.GetAbstractListAdv(System.String)">
            <summary>
            Gets the abstract list adv.
            </summary>
            <param name="listName">Name of the list.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.GetListAdvByID(System.Int32)">
            <summary>
            Gets the abstract list adv.
            </summary>
            <param name="listName">Name of the list.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.GetAbstractListAdvByID(System.Int32)">
            <summary>
            Gets the abstract list adv.
            </summary>
            <param name="listName">Name of the list.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.GetListNumber(Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat)">
            <summary>
            Gets the list number.
            </summary>
            <param name="listFormat">The list format.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.UpdateListValues(Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv,System.Int32)">
            <summary>
            Updates the list values.
            </summary>
            <param name="listAdv">The list adv.</param>
            <param name="listLevelNumber">The list level number.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.GetListText(Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv,System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv)">
            <summary>
            Gets the list text.
            </summary>
            <param name="listAdv">The list adv.</param>
            <param name="listLevelNumber">The list level number.</param>
            <param name="currentListLevel">The current list level.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.ApplyListChanges(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo,Syncfusion.UI.Xaml.RichTextBoxAdv.ModifiedLevelCollection)">
            <summary>
            Applies the list changes.
            </summary>
            <param name="baseHistoryInfo">The history information.</param>
            <param name="modifiedLevels">The modified levels.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.RevertListChanges(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo)">
            <summary>
            Reverts the list changes.
            </summary>
            <param name="baseHistoryInfo">The history information.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.GetDocumentStart">
            <summary>
            Gets the text position of document start.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.GetDocumentEnd">
            <summary>
            Gets the text position of document end.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.GetTextPosition(System.String)">
             <summary>
             Gets the text position at the specified <paramref name="hierarchicalPosition"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
             </summary>
             <param name="hierarchicalPosition">
             <para>The hierarchical position in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.</para>
             <para>The hierarchical position should be given as "section-index;block-index;offset-in-paragraph".</para>
             <para>If the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/> is added to the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/>, then it can be "section-index;paragraph-index;offset-in-paragraph".</para>
             <para>Else if added to the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>, then it can be "section-index;table-index;row-index;cell-index;paragraph-index;offset-in-paragraph".</para>
             <para>Else if added to the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>, then it can be "section-index;paragraph-index;offset-at-which-comment-is-present;C;block-index;offset-in-paragraph".</para>
             </param>
             <returns>
             Returns <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> instance, if the specified <paramref name="hierarchicalPosition"/> lies in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>. Otherwise returns null.
             </returns>
             <example>
             <para>The following code example demonstrates how to get text position in a document by specifying the hierarchical position.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
             </code>
             <code lang="C#">
             public void GetDocumentTextPositions()
             {
                 // Retrieves the text position at offset = 24 in a paragraph added to the section.
                 // Here section index is 0 and paragraph index is 0.
                 TextPosition positionAtSectionParagraph = richTextBoxAdv.Document.GetTextPosition("0;0;24");
            
                // Retrieves the text position at offset = 12 in a paragraph added to the table cell.
                // Here section index is 0, table index is 2, row index is 1, cell index is 1 and paragraph index is 3.
                TextPosition positionAtCellParagraph = richTextBoxAdv.Document.GetTextPosition("0;2;1;3;12");
            
                // Retrieves the text position at offset = 18 in a paragraph added to the comment.
                // Here section index is 0, paragraph(containing comment) index is 1, offset of comment is 16, paragraph(in comment) index is 2.
                TextPosition positionAtCommentParagraph = richTextBoxAdv.Document.GetTextPosition("0;1;16;C;2;18");
             }
             </code>
             <code lang="VB">
             Private Sub GetDocumentTextPositions()
             
                 ' Retrieves the text position at offset = 24 in a paragraph added to the section.
                 ' Here section index is 0 and paragraph index is 0.
                 Dim positionAtSectionParagraph As TextPosition = richTextBoxAdv.Document.GetTextPosition("0;0;24")
             
                 ' Retrieves the text position at offset = 12 in a paragraph added to the table cell.
                 ' Here section index is 0, table index is 2, row index is 1, cell index is 1 and paragraph index is 3.
                 Dim positionAtCellParagraph As TextPosition = richTextBoxAdv.Document.GetTextPosition("0;2;1;3;12")
             
                 ' Retrieves the text position at offset = 18 in a paragraph added to the comment.
                 ' Here section index is 0, paragraph(containing comment) index is 1, offset of comment is 16, paragraph(in comment) index is 2.
                 Dim positionAtCommentParagraph As TextPosition = richTextBoxAdv.Document.GetTextPosition("0;1;16;C;2;18")
             
             End Sub
             </code>
             </example>
             <exception cref="T:System.ArgumentNullException">Hierarchical position cannot be null.</exception>
             <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.GetTextPosition(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,System.Double)">
             <summary>
             Gets the text position at the specified <paramref name="offset"/> in the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>.
             </summary>
             <param name="paragraphAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.</param>
             <param name="offset">The offset in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>.</param>
             <returns>
             Returns the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> instance at the specified <paramref name="offset"/> in the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>.
             </returns>
             <example>
             <para>The following code example demonstrates how to get text position by specifying the paragraph and the corresponding offset.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
             </code>
             <code lang="C#">
             public void GetDocumentTextPositions()
             {
                // Gets text position at offset = 24 in a paragraph added to the section.
                SectionAdv sectionAdv = richTextBoxAdv.Document.Sections[0];
                ParagraphAdv sectionParagraph = sectionAdv.Blocks[0] as ParagraphAdv;
                TextPosition positionAtSectionParagraph = richTextBoxAdv.Document.GetTextPosition(sectionParagraph, 24);
            
                // Gets the text position at offset = 12 in a paragraph added to the table cell.
                TableAdv tableAdv = sectionAdv.Blocks[2] as TableAdv;
                ParagraphAdv cellParagraph = tableAdv.Rows[1].Cells[1].Blocks[2] as ParagraphAdv;
                TextPosition positionAtCellParagraph = richTextBoxAdv.Document.GetTextPosition(cellParagraph, 12);
            
                // Gets the text position at offset = 18 in a paragraph added to the table cell.
                ParagraphAdv paragraph = sectionAdv.Blocks[4] as ParagraphAdv;
                CommentAdv commentAdv = paragraph.Inlines[6] as CommentAdv;
                ParagraphAdv commentParagraph = commentAdv.Blocks[0] as ParagraphAdv;
                TextPosition positionAtCommentParagraph = richTextBoxAdv.Document.GetTextPosition(commentParagraph, 18);
             }
             </code>
             <code lang="VB">
             Private Sub GetDocumentTextPositions()
             
                 ' Gets text position at offset = 24 in a paragraph added to the section.
                 Dim sectionAdv As SectionAdv = richTextBoxAdv.Document.Sections(0)
                 Dim sectionParagraph As ParagraphAdv = TryCast(sectionAdv.Blocks(0), ParagraphAdv)
                 Dim positionAtSectionParagraph As TextPosition = richTextBoxAdv.Document.GetTextPosition(sectionParagraph, 24)
                 
                 ' Gets text position at offset = 12 in a paragraph added to the table cell.
                 Dim tableAdv As TableAdv = TryCast(sectionAdv.Blocks(2), TableAdv)
                 Dim cellParagraph As ParagraphAdv = TryCast(tableAdv.Rows(1).Cells(1).Blocks(2), ParagraphAdv)
                 Dim positionAtCellParagraph As TextPosition = richTextBoxAdv.Document.GetTextPosition(cellParagraph, 12)
             
                 ' Gets text position at offset = 18 in a paragraph added to the comment.
                 Dim paragraph As ParagraphAdv = TryCast(sectionAdv.Blocks(4), ParagraphAdv)
                 Dim commentAdv As CommentAdv = TryCast(paragraph.Inlines(6), CommentAdv)
                 Dim commentParagraph As ParagraphAdv = TryCast(commentAdv.Blocks(0), ParagraphAdv)
                 Dim positionAtCommentParagraph As TextPosition = richTextBoxAdv.Document.GetTextPosition(commentParagraph, 18)
             
             End Sub
             </code>
             </example>
             <exception cref="T:System.ArgumentNullException">ParagraphAdv cannot be null.</exception>
             <exception cref="T:System.ArgumentException">Invalid paragraph. The paragraph doesn't exist in the document.</exception>
             <exception cref="T:System.ArgumentOutOfRangeException">Offset should be greater than or equal to zero and should be less than or equal to the paragraph length.</exception>
             <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.Find(System.Text.RegularExpressions.Regex,Syncfusion.UI.Xaml.RichTextBoxAdv.FindOptions,System.Boolean,Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults)">
            <summary>
            Finds the specified pattern.
            </summary>
            <param name="pattern">The pattern.</param>
            <param name="option">The option.</param>
            <param name="isFirstMatch">if set to <c>true</c> [is first match].</param>
            <param name="results">The results.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv.FindProofingErrors(Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker)">
            <summary>
            Finds the proofing errors in the document.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.StrikeThrough">
            <summary>
            Specifies the strike through style for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat"/>.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.StrikeThrough.None">
            <summary>
            No strike will be drawn.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.StrikeThrough.SingleStrike">
            <summary>
            Draws single strike.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.StrikeThrough.DoubleStrike">
            <summary>
            Draws double strike.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment">
            <summary>
            Specifes the baseline alignment style for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat"/>.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment.Normal">
            <summary>
            Specifies the text to be rendered normally.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment.Superscript">
            <summary>
            Specifies the text to appear above the baseline of text.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment.Subscript">
            <summary>
            Specifies the text to appear below the baseline of text.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Underline">
            <summary>
            Specifies the underline style for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat"/>.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Underline.None">
            <summary>
            No underline will be drawn.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Underline.Single">
            <summary>
            Draws single underline.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Underline.Words">
            <summary>
            Draws underline for words only.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Underline.Double">
            <summary>
            Draws double underline.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Underline.Dotted">
            <summary>
            Draws dotted underline.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Underline.Thick">
            <summary>
            Draws thick underline.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Underline.Dash">
            <summary>
            Draws dash underline.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Underline.DashLong">
            <summary>
            Draws dash long underline.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Underline.DotDash">
            <summary>
            Draws dot dash underline.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Underline.DotDotDash">
            <summary>
            Draws dot dot dash underline.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Underline.Wavy">
            <summary>
            Draws wavy underline.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Underline.DottedHeavy">
            <summary>
            Draws dotted heavy underline.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Underline.DashHeavy">
            <summary>
            Draws dash heavy underline.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Underline.DashLongHeavy">
            <summary>
            Draws dash long heavy underline.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Underline.DotDashHeavy">
            <summary>
            Draws dot dash heavy underline.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Underline.DotDotDashHeavy">
            <summary>
            Draws dot dot dash heavy underline.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Underline.WavyHeavy">
            <summary>
            Draws wavy heavy underline.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Underline.WavyDouble">
            <summary>
            Draws wavy double underline.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextWrapping">
            <summary>
            Specifies the text wrapping supported by the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextWrapping.Wrap">
            <summary>
            Draws the paragraph content that fit in container width and moves remaining content to next line. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextWrapping.NoWrap">
            <summary>
            Draws the entire paragraph content in a single line,
            either it fits in container width or extends outside.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HighlightColor">
            <summary>
            Specifies the highlight color for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat"/>.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HighlightColor.NoColor">
            <summary>
            No highlight color will be applied.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HighlightColor.Yellow">
            <summary>
            Highlights the content with yellow (#ffffff00) color.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HighlightColor.BrightGreen">
            <summary>
            Highlights the content with bright green (#ff00ff00) color.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HighlightColor.Turquoise">
            <summary>
            Highlights the content with turquoise (#ff00ffff) color.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HighlightColor.Pink">
            <summary>
            Highlights the content with pink (#ffff00ff) color.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HighlightColor.Blue">
            <summary>
            Highlights the content with blue (#ff0000ff) color.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HighlightColor.Red">
            <summary>
            Highlights the content with red (#ffff0000) color.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HighlightColor.DarkBlue">
            <summary>
            Highlights the content with dark blue (#ff000080) color.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HighlightColor.Teal">
            <summary>
            Highlights the content with teal (#ff008080) color.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HighlightColor.Green">
            <summary>
            Highlights the content with green (#ff008000) color.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HighlightColor.Violet">
            <summary>
            Highlights the content with violet (#ff800080) color.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HighlightColor.DarkRed">
            <summary>
            Highlights the content with dark red (#ff800000) color.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HighlightColor.DarkYellow">
            <summary>
            Highlights the content with dark yellow (#ff808000)  color.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HighlightColor.Gray50">
            <summary>
            Highlights the content with gray 50 (#ff808080) color.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HighlightColor.Gray25">
            <summary>
            Highlights the content with gray 25 (#ffc0c0c0) color.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HighlightColor.Black">
            <summary>
            Highlights the content with black (#ff000000) color.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LineSpacingType">
            <summary>
            Specifies the line spacing type for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineSpacingType.AtLeast">
            <summary>
            The line spacing can be greater than or equal to, but never less than,
            the value specified in the LineSpacing property. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineSpacingType.Exactly">
            <summary>
            The line spacing never changes from the value specified in the LineSpacing property, 
            even if a larger font is used within the paragraph. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineSpacingType.Multiple">
            <summary>
            The line spacing is specified in the LineSpacing property as the number of lines. 
            </summary>
            <remarks>Single line spacing equals 16 pixels.</remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListType">
            <summary>
            Specifies a type of list.
            ToDo: Handle all other types supported by MS Word while exposing as public. MSDN reference: http://msdn.microsoft.com/en-us/library/ff840653.aspx
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelPattern">
            <summary>
            Specifies the pattern for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelPattern.Arabic">
            <summary>
            Specifies the default pattern for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelPattern.UpRoman">
            <summary>
            Specifies the upper roman (I, II, III, ...) pattern for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelPattern.LowRoman">
            <summary>
            Specifies the lower roman (i, ii, iii, ...) pattern for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelPattern.UpLetter">
            <summary>
            Specifies the uppercase letter (A, B, C, ...) pattern for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelPattern.LowLetter">
            <summary>
            Specifies the lowercase letter (a, b, c, ...) pattern for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelPattern.Ordinal">
            <summary>
            Specifies the ordinal (1st, 2nd, 3rd, ...) pattern for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelPattern.Number">
            <summary>
            Specifies the numbering (1, 2, 3, ...) pattern for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelPattern.OrdinalText">
            <summary>
            Specifies the ordinal text (First, Second, Third, ...) pattern for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelPattern.LeadingZero">
            <summary>
            Specifies the leading zero (01, 02, 03, ...) pattern for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelPattern.Bullet">
            <summary>
            Specifies the bullet pattern for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelPattern.FarEast">
            <summary>
            Specifies the far east pattern for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelPattern.Special">
            <summary>
            Specifies the special pattern for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelPattern.None">
            <summary>
            Specifies no pattern for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooterType">
            <summary>
            Specifies the type of Header/Footer.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooterType.EvenHeader">
            <summary>
            Header for even numbered pages.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooterType.OddHeader">
            <summary>
            Header for odd numbered pages.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooterType.EvenFooter">
            <summary>
            Footer for even numbered pages.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooterType.OddFooter">
            <summary>
            Footer for odd numbered pages.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooterType.FirstPageHeader">
            <summary>
            Header for the first page of the section. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooterType.FirstPageFooter">
            <summary>
            Footer for the first page of the section. 
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType">
            <summary>
            Specifies the format type supported by the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType.Doc">
            <summary>
            Microsoft Word 97-2003 Format.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType.Docx">
            <summary>
            Microsoft Word Open XML Format.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType.Html">
            <summary>
            HTML Format.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType.Rtf">
            <summary>
            Rich Text Format.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType.Txt">
            <summary>
            Plain Text Format.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType.WordML">
            <summary>
            Specifies the WordProcessingML (.XML) documents.
            </summary>
            <remarks>
            Provides Read/Write support for Microsoft Office Word  XML format (FlatOPC) documents.
            Provides read only support for Microsoft Office Word 2003 XML format documents.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutType">
            <summary>
            Specifies the layout type supported by the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutType.Pages">
            <summary>
            Specifies the content to be displayed in multiple pages.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutType.Continuous">
            <summary>
            Specifies the content to be displayed continuously in single page.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutType.Block">
            <summary>
            Specifies the content to be displayed continuously in single page, by restricting scrolling, zooming and editing (similar to TextBlock).
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RowPlacement">
            <summary>
            Specifies the row placement.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.RowPlacement.Above">
            <summary>
            Places the row above.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.RowPlacement.Below">
            <summary>
            Places the row below.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ColumnPlacement">
            <summary>
            Specifies the column placement.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ColumnPlacement.Left">
            <summary>
            Places the column left.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ColumnPlacement.Right">
            <summary>
            Places the column right.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FollowCharacterType">
            <summary>
            Specifies the follow character type for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.FollowCharacterType.Tab">
            <summary>
            Specifies the list value to be followed with a single tab.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.FollowCharacterType.Space">
            <summary>
            Specifies the list value to be followed with a single space.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.FollowCharacterType.None">
            <summary>
            Specifies the list value to be followed with no follow character.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FindOptions">
            <summary>
            Specifies the options for the find operation.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.FindOptions.None">
            <summary>
            Specifies default find option; Uses case-independent, arbitrary character boundaries.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.FindOptions.WholeWord">
            <summary>
            Specifies the find option to match whole words only.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.FindOptions.CaseSensitive">
            <summary>
            Specifies the find option to match case sensitive.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.FindOptions.CaseSensitiveWholeWord">
            <summary>
            Specifies the find option to match case sensitive and whole words.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.PaneType">
            <summary>
            Specifies the pane type supported by the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.PaneType.Find">
            <summary>
            Specifies the options pane with simple text search and result navigation.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.PaneType.AdvancedFind">
            <summary>
            Specifies the options pane with advanced find options.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.PaneType.Replace">
            <summary>
            Specifies the options pane with advanced replace options.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HyperlinkType">
            <summary>
            Specifies the type of the hyperlink.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HyperlinkType.File">
            <summary>
            Specifies the link to a file.
            </summary>
            <remarks>The link that starts with "file:///"</remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HyperlinkType.Webpage">
            <summary>
            Specifies the link to a web page.
            </summary>
            <remarks>The link that starts with "http://", "https://", "www." etc.</remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HyperlinkType.Email">
            <summary>
            Specifies the link to an e-mail.
            </summary>
            <remarks>The link that starts with "mailto:".</remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HyperlinkType.Bookmark">
            <summary>
            Specifies the link to a bookmark.
            </summary>
            <remarks>The link that refers to a bookmark.</remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID">
            <summary>
            Specifies the language ID's.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.af_ZA">
            <summary>
            African.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.sq_AL">
            <summary>
            Albanian.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.am_ET">
            <summary>
            Amharic.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.gsw_FR">
            <summary>
            Alsatian.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ar_DZ">
            <summary>
            Arabic Algerian.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ar_BH">
            <summary>
            Arabic Bahraini.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ar_EG">
            <summary>
            Arabic Egyptian.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ar_IQ">
            <summary>
            Arabic Iraqi.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ar_JO">
            <summary>
            Arabic Jordanian.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ar_KW">
            <summary>
            Arabic Kuwaiti.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ar_LB">
            <summary>
            Arabic Lebanese.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ar_LY">
            <summary>
            Arabic Libyan.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ar_MA">
            <summary>
            Arabic Moroccan.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ar_OM">
            <summary>
            Arabic Omani.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ar_QA">
            <summary>
            Arabic Qatari.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ar_SA">
            <summary>
            Arabic Saudi.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ar_SY">
            <summary>
            Arabic Syrian.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ar_TN">
            <summary>
            Arabic Tunisian.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ar_AE">
            <summary>
            Arabic United Arab Emirates.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ar_YE">
            <summary>
            Arabic Yemeni.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.hy_AM">
            <summary>
            Armenian.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.as_IN">
            <summary>
            Assamese.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.az_Cyrl_AZ">
            <summary>
            Azeri Cyrillic.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.az_Latn_AZ">
            <summary>
            Azeri Latin.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ba_RU">
            <summary>
            Bashkir.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.eu_ES">
            <summary>
            Basque.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.be_BY">
            <summary>
            Belarusian.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.bn_BD">
            <summary>
            Bengali (Bangladesh).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.bn_IN">
            <summary>
            Bengali (India).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.bs_Cyrl_BA">
            <summary>
            Bosnian (Cyrillic, Bosnia and Herzegovina).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.bs_Latn_BA">
            <summary>
            Bosnian (Bosnia/Herzegovina).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.bg_BG">
            <summary>
            Bulgarian.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.br_FR">
            <summary>
            Breton.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.my_MM">
            <summary>
            Burmese.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ca_ES">
            <summary>
            Catalan.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.chr_US">
            <summary>
            Cherokee - United States.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.zh_HK">
            <summary>
            Chinese - Hong Kong SAR.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.zh_MO">
            <summary>
            Chinese - Macao SAR.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.zh_CN">
            <summary>
            Chinese - People's Republic of China.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.zh_SG">
            <summary>
            Chinese - Singapore.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.zh_TW">
            <summary>
            Chinese - Taiwan.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.co_FR">
            <summary>
            Corsican.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.hr_BA">
            <summary>
            Croatian (Bosnia/Herzegovina).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.hr_HR">
            <summary>
            Croatian.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.cs_CZ">
            <summary>
            Czech.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.da_DK">
            <summary>
            Danish.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.prs_AF">
            <summary>
            Dari.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.dv_MV">
            <summary>
            Divehi.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.nl_BE">
            <summary>
            Dutch - Belgium.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.nl_NL">
            <summary>
            Dutch - Netherlands.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.bin_NG">
            <summary>
            Edo.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.et_EE">
            <summary>
            Estonian.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.en_AU">
            <summary>
            English - Australia.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.en_BZ">
            <summary>
            English - Belize.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.en_CA">
            <summary>
            English - Canada.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.en_029">
            <summary>
            English - Caribbean.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.en_HK">
            <summary>
            English - Hong Kong SAR.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.en_IN">
            <summary>
            English - India.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.en_ID">
            <summary>
            English - Indonesia.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.en_IE">
            <summary>
            English - Ireland.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.en_JM">
            <summary>
            English - Jamaica.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.en_MY">
            <summary>
            English - Malaysia.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.en_NZ">
            <summary>
            English - New Zealand.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.en_PH">
            <summary>
            English - Philippines.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.en_SG">
            <summary>
            English - Singapore.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.en_ZA">
            <summary>
            English - South Africa.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.en_TT">
            <summary>
            English - Trinidad.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.en_GB">
            <summary>
            English - United Kingdom.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.en_US">
            <summary>
            English - United States.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.en_ZW">
            <summary>
            English - Zimbabwe.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.fo_FO">
            <summary>
            Faroese.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.fil_PH">
            <summary>
            Filipino.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.fi_FI">
            <summary>
            Finnish.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.fr_BE">
            <summary>
            French - Belgium.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.fr_CM">
            <summary>
            French - Cameroon.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.fr_CA">
            <summary>
            French - Canada.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.fr_CD">
            <summary>
            French - Democratic Rep. of Congo.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.fr_CI">
            <summary>
            French - Cote d'Ivoire.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.fr_FR">
            <summary>
            French - France.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.fr_HT">
            <summary>
            French - Haiti.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.fr_LU">
            <summary>
            French - Luxembourg.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.fr_ML">
            <summary>
            French - Mali.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.fr_MC">
            <summary>
            French - Monaco.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.fr_MA">
            <summary>
            French - Morocco.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.fr_RE">
            <summary>
            French - Reunion.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.fr_SN">
            <summary>
            French - Senegal.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.fr_CH">
            <summary>
            French - Switzerland.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.fr_fr_WINDIES">
            <summary>
            French - West Indies.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.fy_NL">
            <summary>
            Frisian - Netherlands.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ff_NG">
            <summary>
            Fulfulde - Nigeria.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.gd_GB">
            <summary>
            Scottish Gaelic.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.gl_ES">
            <summary>
            Galician.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ka_GE">
            <summary>
            Georgian.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.de_AT">
            <summary>
            German - Austria.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.de_DE">
            <summary>
            German - Germany.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.de_LI">
            <summary>
            German - Liechtenstein.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.de_LU">
            <summary>
            German - Luxembourg.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.de_CH">
            <summary>
            German - Switzerland.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.el_GR">
            <summary>
            Greek.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.gn_PY">
            <summary>
            Guarani - Paraguay.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.gu_IN">
            <summary>
            Gujarati.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.kl_GL">
            <summary>
            Greenlandic.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ha_Latn_NG">
            <summary>
            Hausa - Nigeria.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.haw_US">
            <summary>
            Hawaiian - United States.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.he_IL">
            <summary>
            Hebrew.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.hi_IN">
            <summary>
            Hindi.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.hu_HU">
            <summary>
            Hungarian.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ibb_NG">
            <summary>
            Ibibio - Nigeria.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.is_IS">
            <summary>
            Icelandic.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ig_NG">
            <summary>
            Igbo - Nigeria.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.id_ID">
            <summary>
            Indonesian.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.iu_Latn_CA">
            <summary>
            Inuktitut (Latin, Canada).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.iu_Cans_CA">
            <summary>
            Inuktitut.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.it_IT">
            <summary>
            Italian - Italy.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.it_CH">
            <summary>
            Italian - Switzerland.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ga_IE">
            <summary>
            Irish.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.xh_ZA">
            <summary>
            Xhosa.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.zu_ZA">
            <summary>
            Zulu.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.kn_IN">
            <summary>
            Kannada (India).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.kr_NG">
            <summary>
            Kanuri - Nigeria.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ks_Deva">
            <summary>
            Kashmiri.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ks_Arab">
            <summary>
            Kashmiri (Arabic).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.kk_KZ">
            <summary>
            Kazakh.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.km_KH">
            <summary>
            Khmer.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.kok_IN">
            <summary>
            Konkani.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ko_KR">
            <summary>
            Korean.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ky_KG">
            <summary>
            Kyrgyz (Cyrillic).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.qut_GT">
            <summary>
            K'iche.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.rw_RW">
            <summary>
            Kinyarwanda.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.lo_LA">
            <summary>
            Lao.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.la_Latn">
            <summary>
            Latin.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.lv_LV">
            <summary>
            Latvian.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.lt_LT">
            <summary>
            Lithuanian.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.dsb_DE">
            <summary>
            Lower Sorbian (Germany).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.lb_LU">
            <summary>
            Luxembourgish.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.mk_MK">
            <summary>
            FYRO Macedonian.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ms_BN">
            <summary>
            Malay - Brunei Darussalam.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ms_MY">
            <summary>
            Malay - Malaysia.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ml_IN">
            <summary>
            Malayalam.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.mt_MT">
            <summary>
            Maltese.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.mni_IN">
            <summary>
            Manipuri.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.mi_NZ">
            <summary>
            Maori - New Zealand.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.mr_IN">
            <summary>
            Marathi.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.arn_CL">
            <summary>
            Mapudungun.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.mn_MN">
            <summary>
            Mongolian (Cyrillic).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.mn_Mong_CN">
            <summary>
            Mongolian (Mongolian).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ne_NP">
            <summary>
            Nepali.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ne_IN">
            <summary>
            Nepali - India.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.nb_NO">
            <summary>
            Norwegian (Bokmål).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.nn_NO">
            <summary>
            Norwegian (Nynorsk).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.oc_FR">
            <summary>
            Occitan.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.or_IN">
            <summary>
            Oriya.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.om_Ethi_ET">
            <summary>
            Oromo.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.pap_AN">
            <summary>
            Papiamentu.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ps_AF">
            <summary>
            Pashto.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.fa_IR">
            <summary>
            Farsi.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.pl_PL">
            <summary>
            Polish.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.pt_BR">
            <summary>
            Portuguese - Brazil.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.pt_PT">
            <summary>
            Portuguese - Portugal.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.pa_IN">
            <summary>
            Punjabi (India).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.pa_PK">
            <summary>
            Punjabi (Pakistan).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.quz_BO">
            <summary>
            Quecha - Bolivia.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.guz_EC">
            <summary>
            Quecha - Ecuador.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.guz_PE">
            <summary>
            Quecha - Peru.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ro_RO">
            <summary>
            Romanian.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ro_MO">
            <summary>
            Romanian - Moldava.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.rm_CH">
            <summary>
            Rhaeto-Romanic.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ru_RU">
            <summary>
            Russian.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ru_MO">
            <summary>
            Russian - Moldava.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.smn_FI">
            <summary>
            Sami, Inari (Finland).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.smj_NO">
            <summary>
            Sami, Lule (Norway).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.smj_SE">
            <summary>
            Sami, Lule (Sweden).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.se_FI">
            <summary>
            Sami, Northern (Finland).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.se_NO">
            <summary>
            Sami (Lappish).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.se_SE">
            <summary>
            Sami, Northern (Sweden).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.sms_FI">
            <summary>
            Sami, Skolt (Finland).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.sma_NO">
            <summary>
            Sami, Southern (Norway).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.sma_SE">
            <summary>
            Sami, Southern (Sweden).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.sa_IN">
            <summary>
            Sanskrit - India.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.sr_Cyrl_BA">
            <summary>
            Serbian (Cyrillic, Bosnia and Herzegovina).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.sr_Cyrl_CS">
            <summary>
            Serbian (Cyrillic).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.sr_Latn_BA">
            <summary>
            Serbian (Latin, Bosnia and Herzegovina).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.sr_Latn_CS">
            <summary>
            Serbian (Latin, Serbia and Montenegro (Former)).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.nso_ZA">
            <summary>
            Serbian (Latin).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.tn_ZA">
            <summary>
            Tswana.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.sd_Arab_PK">
            <summary>
            Sindhi - Pakistan.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.sd_Deva_IN">
            <summary>
            Sindhi - India.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.si_LK">
            <summary>
            Sinhalese - Sri Lanka.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.sk_SK">
            <summary>
            Slovak.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.sl_SI">
            <summary>
            Slovenian.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.so_SO">
            <summary>
            Somali.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.es_AR">
            <summary>
            Spanish - Argentina.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.es_BO">
            <summary>
            Spanish - Bolivia.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.es_CL">
            <summary>
            Spanish - Chile.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.es_CO">
            <summary>
            Spanish - Colombia.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.es_CR">
            <summary>
            Spanish - Costa Rica.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.es_DO">
            <summary>
            Spanish - Dominican Republic.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.es_EC">
            <summary>
            Spanish - Ecuador.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.es_SV">
            <summary>
            Spanish - El Salvador.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.es_GT">
            <summary>
            Spanish - Guatemala.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.es_HN">
            <summary>
            Spanish - Honduras.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.es_MX">
            <summary>
            Spanish - Mexico.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.es_NI">
            <summary>
            Spanish - Nicaragua.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.es_PA">
            <summary>
            Spanish - Panama.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.es_PY">
            <summary>
            Spanish - Paraguay.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.es_PE">
            <summary>
            Spanish - Peru.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.es_PR">
            <summary>
            Spanish - Puerto Rico.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.es_ES">
            <summary>
            Spanish - International Sort.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.es_ES_tradnl">
            <summary>
            Spanish - Spain (Traditional Sort).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.es_US">
            <summary>
            Spanish - United States.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.es_UY">
            <summary>
            Spanish - Uruguay.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.es_VE">
            <summary>
            Spanish - Venezuela.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.st_ZA">
            <summary>
            Sutu.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.sw_KE">
            <summary>
            Swahili.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.sv_FI">
            <summary>
            Swedish - Finland.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.sv_SE">
            <summary>
            Swedish.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.syr_SY">
            <summary>
            Syriac.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.tg_Cyrl_TJ">
            <summary>
            Tajik.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.tzm_Arab_MA">
            <summary>
            Tamazight.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.tzm_Latn_DZ">
            <summary>
            Tamazight (Latin).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ta_IN">
            <summary>
            Tamil.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.tt_RU">
            <summary>
            Tatar.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.te_IN">
            <summary>
            Telugu.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.th_TH">
            <summary>
            Thai.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.bo_CN">
            <summary>
            Tibetan (PRC).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ti_ER">
            <summary>
            Tigrigna (Eritrea).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ti_ET">
            <summary>
            Tigrigna (Ethiopia).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ts_ZA">
            <summary>
            Tsonga.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.tr_TR">
            <summary>
            Turkish.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.tk_TM">
            <summary>
            Turkmen.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ug_CN">
            <summary>
            Uighur - China.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.uk_UA">
            <summary>
            Ukrainian.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.hsb_DE">
            <summary>
            Sorbian.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ur_PK">
            <summary>
            Urdu.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.uz_Cyrl_UZ">
            <summary>
            Uzbek (Cyrillic).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.uz_Latn_UZ">
            <summary>
            Uzbek (Latin).
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ve_ZA">
            <summary>
            Venda.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.vi_VN">
            <summary>
            Vietnamese.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.cy_GB">
            <summary>
            Welsh.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.wo_SN">
            <summary>
            Wolof.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.sah_RU">
            <summary>
            Yakut.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ii_CN">
            <summary>
            Yi.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.yi_Hebr">
            <summary>
            Yiddish.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.yo_NG">
            <summary>
            Yoruba.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID.ja_JP">
            <summary>
            Japanese.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAlignment">
            <summary>
            Specifies the table alignment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAlignment.Left">
            <summary>
            Aligns the table to the left.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAlignment.Center">
            <summary>
            Aligns the table to the center.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAlignment.Right">
            <summary>
            Aligns the table to the right.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellVerticalAlignment">
            <summary>
            Specifies the vertical alignment.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CellVerticalAlignment.Top">
            <summary>
            Aligns the content to the top.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CellVerticalAlignment.Center">
            <summary>
            Aligns the content to the center.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CellVerticalAlignment.Bottom">
            <summary>
            Aligns the content ot the bottom.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.WidthType">
            <summary>
            Specifies the width type.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.WidthType.Auto">
            <summary>
            Specifies the width to be determined automatically.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.WidthType.Percent">
            <summary>
            Specifies the width in percentage.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.WidthType.Pixel">
            <summary>
            Specifies the width in pixels.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HeightType">
            <summary>
            Specifies the height type.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HeightType.Auto">
            <summary>
            Specifies the height to be determined automatically.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HeightType.Atleast">
            <summary>
            Specifies the least height in pixels.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HeightType.Exactly">
            <summary>
            Specifies the exact height in pixels.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle">
            <summary>
            Specifies the border style.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.None">
            <summary>
            No border.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.Single">
            <summary>
            A single solid line.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.Dot">
            <summary>
            Dots.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.DashSmallGap">
            <summary>
            A dash followed by a small gap.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.DashLargeGap">
            <summary>
            A dash followed by a large gap.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.DashDot">
            <summary>
            A dash followed by a dot.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.DashDotDot">
            <summary>
            A dash followed by two dots.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.Double">
            <summary>
            Double solid lines.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.Triple">
            <summary>
            Three solid thin lines.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.ThinThickSmallGap">
            <summary>
            An internal single thin solid line surrounded by a single thick solid line with 
            a small gap between them.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.ThickThinSmallGap">
            <summary>
            An internal single thick solid line surrounded by a single thin solid line with
            a small gap between them.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.ThinThickThinSmallGap">
            <summary>
            An internal single thin solid line surrounded by a single thick solid line surrounded
            by a single thin solid line with a small gap between all lines.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.ThinThickMediumGap">
            <summary>
            An internal single thin solid line surrounded by a single thick solid line with
            a medium gap between them.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.ThickThinMediumGap">
            <summary>
            An internal single thick solid line surrounded by a single thin solid line with
            a medium gap between them.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.ThinThickThinMediumGap">
            <summary>
            An internal single thin solid line surrounded by a single thick solid line surrounded
            by a single thin solid line with a medium gap between all lines.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.ThinThickLargeGap">
            <summary>
            An internal single thin solid line surrounded by a single thick solid line with
            a large gap between them.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.ThickThinLargeGap">
            <summary>
            An internal single thick solid line surrounded by a single thin solid line with
            a large gap between them.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.ThinThickThinLargeGap">
            <summary>
            An internal single thin solid line surrounded by a single thick solid line surrounded
            by a single thin solid line with a large gap between all lines.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.SingleWavy">
            <summary>
            A single wavy solid line.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.DoubleWavy">
            <summary>
            Double wavy solid lines.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.DashDotStroked">
            <summary>
            A dash followed by a dot stroke, thus rendering a border similar to a barber
            pole.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.Emboss3D">
            <summary>
            The border appears to have a 3-D embossed look.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.Engrave3D">
            <summary>
            The border appears to have a 3-D engraved look.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.Outset">
            <summary>
            The border appears to be outset.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.Inset">
            <summary>
            The border appears to be inset.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.Thick">
            <summary>
            Additional enums supported in Microsoft word in the XML level as well as by DocIO.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle.Cleared">
            <summary>
            Cleared border.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle">
            <summary>
            Specifies the texture style.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.TextureNone">
            <summary>
             No shading
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture2Pt5Percent">
            <summary>
            2.5 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture5Percent">
            <summary>
            5 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture7Pt5Percent">
            <summary>
            7.5 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture10Percent">
            <summary>
            10 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture12Pt5Percent">
            <summary>
            12.5 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture15Percent">
            <summary>
            15 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture17Pt5Percent">
            <summary>
            17.5 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture20Percent">
            <summary>
            20 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture22Pt5Percent">
            <summary>
            22.5 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture25Percent">
            <summary>
            25 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture27Pt5Percent">
            <summary>
            27.5 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture30Percent">
            <summary>
            30 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture32Pt5Percent">
            <summary>
            32.5 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture35Percent">
            <summary>
            35 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture37Pt5Percent">
            <summary>
            37.5 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture40Percent">
            <summary>
            40 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture42Pt5Percent">
            <summary>
            42.5 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture45Percent">
            <summary>
            45 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture47Pt5Percent">
            <summary>
            47.5 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture50Percent">
            <summary>
            50 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture52Pt5Percent">
            <summary>
            52.5 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture55Percent">
            <summary>
            55 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture57Pt5Percent">
            <summary>
            57.5 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture60Percent">
            <summary>
            60 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture62Pt5Percent">
            <summary>
            62.5 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture65Percent">
            <summary>
            65 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture67Pt5Percent">
            <summary>
            67.5 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture70Percent">
            <summary>
            70 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture72Pt5Percent">
            <summary>
            72.5 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture75Percent">
            <summary>
            75 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture77Pt5Percent">
            <summary>
            77.5 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture80Percent">
            <summary>
            80 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture82Pt5Percent">
            <summary>
            82.5 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture85Percent">
            <summary>
            85 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture87Pt5Percent">
            <summary>
            87.5 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture90Percent">
            <summary>
            90 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture92Pt5Percent">
            <summary>
            92.5 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture95Percent">
            <summary>
            95 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.Texture97Pt5Percent">
            <summary>
            97.5 percent shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.TextureSolid">
            <summary>
            Solid shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.TextureDarkHorizontal">
            <summary>
            Dark horizontal shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.TextureDarkVertical">
            <summary>
            Dark vertical shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.TextureDarkDiagonalDown">
            <summary>
            Dark diagonal down shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.TextureDarkDiagonalUp">
            <summary>
            Dark diagonal up shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.TextureDarkCross">
            <summary>
            Dark horizontal cross shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.TextureDarkDiagonalCross">
            <summary>
            Dark diagonal cross shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.TextureHorizontal">
            <summary>
            Horizontal shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.TextureVertical">
            <summary>
            Vertical shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.TextureDiagonalDown">
            <summary>
            Diagonal down shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.TextureDiagonalUp">
            <summary>
            Diagonal up shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.TextureCross">
            <summary>
            Horizontal cross shading.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle.TextureDiagonalCross">
            <summary>
            Diagonal cross shading.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.EditingContextType">
            <summary>
            Specifies the editing context type of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.EditingContextType.Text">
            <summary>
            Editing context is on text.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.EditingContextType.Table">
            <summary>
            Editing context is on table.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.NodeType">
            <summary>
            Specifies the editing <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/> type.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.OwnerDocument">
            <summary>
            Gets the owner document.
            </summary>
            <value>
            The owner document.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.FontSize">
            <summary>
            Gets or Sets the font size.
            </summary>
            <value>
            A non-negative value that specifies the font size, measured in pixels.
            </value>
            <example>
            <para>The following code example demonstrates how to define the size of the font.</para>
            <code lang="XAML">
            &lt;!-- Defines the font size as 24 pixels. --&gt; 
            &lt;RichTextBoxAdv:CharacterFormat FontSize="24"/&gt;
            </code>
            <code lang="C#">
            //  Defines the font size as 24 pixels.
            CharacterFormat characterFormat = new CharacterFormat();
            characterFormat.FontColor = 24;
            </code>
            <code lang="VB">
            ' Defines the font size as 24 pixels.
            Dim characterFormat As New CharacterFormat()
            characterFormat.FontColor = 24
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.FontFamily">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.FontFamily"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.FontFamily"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define the font family.</para>
            <code lang="XAML">
            &lt;!-- Defines the font family as Arial. --&gt; 
            &lt;RichTextBoxAdv:CharacterFormat FontFamily="Arial"/&gt;
            </code>
            <code lang="C#">
            //  Defines the font family as Arial.
            CharacterFormat characterFormat = new CharacterFormat();
            characterFormat.FontFamily = new FontFamily("Arial");
            </code>
            <code lang="VB">
            ' Defines the font family as Arial.
            Dim characterFormat As New CharacterFormat()
            characterFormat.FontFamily = New FontFamily("Arial")
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.FontColor">
            <summary>
            Gets or sets the font color.
            </summary>
            <value>
            The font color.
            </value>
            <example>
            <para>The following code example demonstrates how to define the color for the font.</para>
            <code lang="XAML">
            &lt;!-- Defines the font color as light green. --&gt; 
            &lt;RichTextBoxAdv:CharacterFormat FontColor="#FF90EE90"/&gt;
            </code>
            <code lang="C#">
            //  Defines the font color as light green.
            CharacterFormat characterFormat = new CharacterFormat();
            characterFormat.FontColor = Color.FromArgb(0xFF, 0x90, 0xEE, 0x90);
            </code>
            <code lang="VB">
            ' Defines the font color as light green.
            Dim characterFormat As New CharacterFormat()
            characterFormat.FontColor = Color.FromArgb(&amp;HFF, &amp;H90, &amp;HEE, &amp;H90)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.Bold">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat"/> represents bold.
            </summary>
            <value>
            True, if bold. Otherwise False.
            </value>
            <example>
            <para>The following code example demonstrates how to define the bold format.</para>
            <code lang="XAML">
            &lt;!-- Defines the bold format. --&gt; 
            &lt;RichTextBoxAdv:CharacterFormat Bold="True"/&gt;
            </code>
            <code lang="C#">
            //  Defines the bold format.
            CharacterFormat characterFormat = new CharacterFormat();
            characterFormat.Bold = true;
            </code>
            <code lang="VB">
            ' Defines the bold format.
            Dim characterFormat As New CharacterFormat()
            characterFormat.Bold = True
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.Italic">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat"/> represents italic.
            </summary>
            <value>
            True, if italic. Otherwise False.
            </value>
            <example>
            <para>The following code example demonstrates how to define the italic format.</para>
            <code lang="XAML">
            &lt;!-- Defines the italic format. --&gt; 
            &lt;RichTextBoxAdv:CharacterFormat Italic="True"/&gt;
            </code>
            <code lang="C#">
            //  Defines the italic format.
            CharacterFormat characterFormat = new CharacterFormat();
            characterFormat.Italic = true;
            </code>
            <code lang="VB">
            ' Defines the italic format.
            Dim characterFormat As New CharacterFormat()
            characterFormat.Italic = True
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.StrikeThrough">
            <summary>
            Gets or Sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.StrikeThrough"/> style.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.StrikeThrough"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define the strikethrough.</para>
            <code lang="XAML">
            &lt;!-- Defines the single strikethrough. --&gt; 
            &lt;RichTextBoxAdv:CharacterFormat StrikeThrough="Single"/&gt;
            </code>
            <code lang="C#">
            //  Defines the single strikethrough.
            CharacterFormat characterFormat = new CharacterFormat();
            characterFormat.StrikeThrough = StrikeThrough.Single;
            </code>
            <code lang="VB">
            ' Defines the single strikethrough.
            Dim characterFormat As New CharacterFormat()
            characterFormat.StrikeThrough = StrikeThrough.Single
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.BaselineAlignment">
            <summary>
            Gets or Sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.BaselineAlignment"/> style.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.BaselineAlignment"/> style.
            </value>
            <example>
            <para>The following code example demonstrates how to define the baseline alignment.</para>
            <code lang="XAML">
            &lt;!-- Defines the subscript baseline alignment. --&gt; 
            &lt;RichTextBoxAdv:CharacterFormat BaselineAlignment="Subscript"/&gt;
            </code>
            <code lang="C#">
            //  Defines the subscript baseline alignment.
            CharacterFormat characterFormat = new CharacterFormat();
            characterFormat.BaselineAlignment = BaselineAlignment.Subscript;
            </code>
            <code lang="VB">
            ' Defines the subscript baseline alignment.
            Dim characterFormat As New CharacterFormat()
            characterFormat.BaselineAlignment = BaselineAlignment.Subscript
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.Underline">
            <summary>
            Gets or Sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.Underline"/> style.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.Underline"/> style.
            </value>
            <example>
            <para>The following code example demonstrates how to define the underline.</para>
            <code lang="XAML">
            &lt;!-- Defines the single underline. --&gt; 
            &lt;RichTextBoxAdv:CharacterFormat Underline="Single"/&gt;
            </code>
            <code lang="C#">
            //  Defines the single underline.
            CharacterFormat characterFormat = new CharacterFormat();
            characterFormat.Underline = Underline.Single;
            </code>
            <code lang="VB">
            ' Defines the single underline.
            Dim characterFormat As New CharacterFormat()
            characterFormat.Underline = Underline.Single
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.HighlightColor">
            <summary>
            Gets or Sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.HighlightColor"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.HighlightColor"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define the hightlight color.</para>
            <code lang="XAML">
            &lt;!-- Defines the highlight color as Yellow. --&gt; 
            &lt;RichTextBoxAdv:CharacterFormat HighlightColor="Yellow"/&gt;
            </code>
            <code lang="C#">
            //  Defines the highlight color as Yellow.
            CharacterFormat characterFormat = new CharacterFormat();
            characterFormat.HighlightColor = HighlightColor.Yellow;
            </code>
            <code lang="VB">
            ' Defines the highlight color as Yellow.
            Dim characterFormat As New CharacterFormat()
            characterFormat.HighlightColor = HighlightColor.Yellow
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.LidBi">
            <summary>
            Gets or sets BiDi.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.LocaleIdASCII">
            <summary>
            Gets or sets the ASCII.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.LocaleIdFarEast">
            <summary>
            Gets or sets the FarEast.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.FontSizeProperty">
            <summary>
            Identifies the FontSize dependency property.
            </summary>
            <returns>The identifier for the FontSize dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.FontFamilyProperty">
            <summary>
            Identifies the FontFamily dependency property.
            </summary>
            <returns>The identifier for the FontFamily dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.BoldProperty">
            <summary>
            Identifies the Bold dependency property.
            </summary>
            <returns>The identifier for the Bold dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.ItalicProperty">
            <summary>
            Identifies the Italic dependency property.
            </summary>
            <returns>The identifier for the Italic dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.StrikeThroughProperty">
            <summary>
            Identifies the StrikeThrough dependency property.
            </summary>
            <returns>The identifier for the StrikeThrough dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.BaselineAlignmentProperty">
            <summary>
            Identifies the BaselineAlignment dependency property.
            </summary>
            <returns>The identifier for the BaselineAlignment dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.UnderlineProperty">
            <summary>
            Identifies the Underline dependency property.
            </summary>
            <returns>The identifier for the Underline dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.FontColorProperty">
            <summary>
            Identifies the FontColor dependency property.
            </summary>
            <returns>The identifier for the FontColor dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.HighlightColorProperty">
            <summary>
            Identifies the HighlightColor dependency property.
            </summary>
            <returns>The identifier for the HighlightColor dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.LocaleIdASCIIProperty">
            <summary>
            Identifies the ASCII LanguageID dependency property.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.LidBiProperty">
            <summary>
             Identifies the BiDi LanguageID dependency property.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.LocaleIdFarEastProperty">
            <summary>
             Identifies the FarEast LanguageID dependency property.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat" /> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat"/>.
            The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>, <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>, <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/>
            or <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.OnFontSizeChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when font size changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.OnFontFamilyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when font family changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.OnBoldChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when bold changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.OnItalicChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when italic changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.OnStrikeThroughChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when strike through changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.OnBaselineAlignmentChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when baseline alignment changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.OnUnderlineChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when underline changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.OnFontColorChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when font color changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.OnHighlightColorChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when highlight color changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.ApplyPropertyValue(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo,Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Applies the property value.
            </summary>
            <param name="baseHistoryInfo">The history info.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.ApplyPropertyValue(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo,Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Applies the property value.
            </summary>
            <param name="baseHistoryInfo">The history info.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.UpdateFontSize(System.Object)">
            <summary>
            Update the fontsize
            </summary>
            <param name="value"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.HandleCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat)">
            <summary>
            Handles the paragraph format.
            </summary>
            <param name="format"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.Relayout">
            <summary>
            Relayouts this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.GetPropertyValue(Windows.UI.Xaml.DependencyProperty)">
            <summary>
            Gets the property value.
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.GetDefaultValue(Windows.UI.Xaml.DependencyProperty)">
            <summary>
            Gets the default value.
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.GetControlDefaultValue(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv,Windows.UI.Xaml.DependencyProperty)">
            <summary>
            Gets the control default value.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance.</param>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.GetDefaultFontColor(Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv)">
            <summary>
            Gets the default font color.
            </summary>
            <param name="document">The document.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.SetHighlightColor(Windows.UI.Color)">
            <summary>
            Sets the color of the highlight.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.GetHighlightColor">
            <summary>
            Gets the color of the highlight.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.CopyFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat)">
            <summary>
            Copies the format.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.CloneFormat">
            <summary>
            Clones the format.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.IsEqualFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat)">
            <summary>
            Determines whether the specified format is equal.
            </summary>
            <param name="format">The format.</param>
            <returns>
              <c>true</c> if  the specified format is equal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.GetLanguageID">
            <summary>
            Gets the language 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.Document">
            <summary>
            Gets the document.
            </summary>
            <value>
            The document.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.LeftIndent">
            <summary>
            Gets or Sets the left indent of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>.
            </summary>
            <value>
            The left indent of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define the left indent.</para>
            <code lang="XAML">
            &lt;!-- Defines the left indent as 96 pixels. --&gt; 
            &lt;RichTextBoxAdv:ParagraphFormat LeftIndent="96"/&gt;
            </code>
            <code lang="C#">
            // Defines the left indent as 96 pixels.
            ParagraphFormat paragraphFormat = new ParagraphFormat();
            paragraphFormat.LeftIndent = 96;
            </code>
            <code lang="VB">
            ' Defines the left indent as 96 pixels.
            Dim paragraphFormat As New ParagraphFormat()
            paragraphFormat.LeftIndent = 96
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.RightIndent">
            <summary>
            Gets or Sets the right indent of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>.
            </summary>
            <value>
            The right indent of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define the right indent.</para>
            <code lang="XAML">
            &lt;!-- Defines the right indent as 48 pixels. --&gt; 
            &lt;RichTextBoxAdv:ParagraphFormat RightIndent="48"/&gt;
            </code>
            <code lang="C#">
            // Defines the right indent as 48 pixels.
            ParagraphFormat paragraphFormat = new ParagraphFormat();
            paragraphFormat.RightIndent = 48;
            </code>
            <code lang="VB">
            ' Defines the right indent as 48 pixels.
            Dim paragraphFormat As New ParagraphFormat()
            paragraphFormat.RightIndent = 48
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.FirstLineIndent">
            <summary>
            Gets or Sets the first line indent of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>.
            </summary>
            <value>
            The first line indent of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define the first line indent.</para>
            <code lang="XAML">
            &lt;!-- Defines the first line indent as -24 pixels. --&gt; 
            &lt;RichTextBoxAdv:ParagraphFormat FirstLineIndent="-24"/&gt;
            </code>
            <code lang="C#">
            // Defines the first line indent as -24 pixels.
            ParagraphFormat paragraphFormat = new ParagraphFormat();
            paragraphFormat.FirstLineIndent = -24;
            </code>
            <code lang="VB">
            ' Defines the first line indent as -24 pixels.
            Dim paragraphFormat As New ParagraphFormat()
            paragraphFormat.FirstLineIndent = -24
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.TextAlignment">
            <summary>
            Gets or Sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.TextAlignment"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.TextAlignment"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define the left indent.</para>
            <code lang="XAML">
            &lt;!-- Defines the text alignment as center. --&gt; 
            &lt;RichTextBoxAdv:ParagraphFormat TextAlignment="Center"/&gt;
            </code>
            <code lang="C#">
            // Defines the text alignment as center.
            ParagraphFormat paragraphFormat = new ParagraphFormat();
            paragraphFormat.TextAlignment = TextAlignment.Center;
            </code>
            <code lang="VB">
            ' Defines the text alignment as center.
            Dim paragraphFormat As New ParagraphFormat()
            paragraphFormat.TextAlignment = TextAlignment.Center
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.AfterSpacing">
            <summary>
            Gets or Sets the after spacing of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>.
            </summary>
            <value>
            The after spacing of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define the spacing before the paragraph.</para>
            <code lang="XAML">
            &lt;!-- Defines the spacing after the paragraph as 24 pixels. --&gt; 
            &lt;RichTextBoxAdv:ParagraphFormat AfterSpacing="24"/&gt;
            </code>
            <code lang="C#">
            // Defines the lspacing after the paragraph as 24 pixels.
            ParagraphFormat paragraphFormat = new ParagraphFormat();
            paragraphFormat.AfterSpacing = 24;
            </code>
            <code lang="VB">
            ' Defines the spacing after the paragraph as 96 pixels.
            Dim paragraphFormat As New ParagraphFormat()
            paragraphFormat.AfterSpacing = 24
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.BeforeSpacing">
            <summary>
            Gets or Sets the before spacing of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>.
            </summary>
            <value>
            The before spacing of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define the spacing before the paragraph.</para>
            <code lang="XAML">
            &lt;!-- Defines the spacing before the paragraph as 48 pixels. --&gt; 
            &lt;RichTextBoxAdv:ParagraphFormat BeforeSpacing="48"/&gt;
            </code>
            <code lang="C#">
            // Defines the spacing before the paragraph as 48 pixels.
            ParagraphFormat paragraphFormat = new ParagraphFormat();
            paragraphFormat.BeforeSpacing = 48;
            </code>
            <code lang="VB">
            ' Defines the spacing before the paragraph as 48 pixels.
            Dim paragraphFormat As New ParagraphFormat()
            paragraphFormat.BeforeSpacing = 48
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.LineSpacing">
            <summary>
            Gets or Sets the line spacing of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>.
            </summary>
            <value>
            The line spacing of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define the line spacing.</para>
            <code lang="XAML">
            &lt;!-- Defines the line spacing as 24 pixels. --&gt; 
            &lt;RichTextBoxAdv:ParagraphFormat LineSpacingType="Atleast" LineSpacing="24"/&gt;
            </code>
            <code lang="C#">
            // Defines the line spacing as 24 pixels.
            ParagraphFormat paragraphFormat = new ParagraphFormat();
            paragraphFormat.LineSpacingType = LineSpacingType.Atleast;
            paragraphFormat.LineSpacing = 24;
            </code>
            <code lang="VB">
            ' Defines the line spacing as 24 pixels.
            Dim paragraphFormat As New ParagraphFormat()
            paragraphFormat.LineSpacingType = LineSpacingType.Atleast
            paragraphFormat.LineSpacing = 24
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.LineSpacingType">
            <summary>
            Gets or Sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.LineSpacingType"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.LineSpacingType"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define the line spacing type.</para>
            <code lang="XAML">
            &lt;!-- Defines the multiple line spacing with the value of three. --&gt; 
            &lt;RichTextBoxAdv:ParagraphFormat LineSpacingType="Multiple" LineSpacing="3"/&gt;
            </code>
            <code lang="C#">
            // Defines the multiple line spacing with the value of three.
            ParagraphFormat paragraphFormat = new ParagraphFormat();
            paragraphFormat.LineSpacingType = LineSpacingType.Multiple;
            paragraphFormat.LineSpacing = 3;
            </code>
            <code lang="VB">
            ' Defines the multiple line spacing with the value of three.
            Dim paragraphFormat As New ParagraphFormat()
            paragraphFormat.LineSpacingType = LineSpacingType.Multiple
            paragraphFormat.LineSpacing = 3
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.ListFormat">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.ListFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.ListFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define the list format.</para>
            <code lang="XAML">
            &lt;!-- Defines the list format. --&gt; 
            &lt;RichTextBoxAdv:ParagraphFormat&gt;
                &lt;RichTextBoxAdv:ParagraphFormat.ListFormat&gt;
                    &lt;RichTextBoxAdv:ListFormat ListId="3" ListLevelNumber="0"/&gt;
                &lt;/RichTextBoxAdv:ParagraphFormat.ListFormat&gt;
            &lt;/RichTextBoxAdv:ParagraphFormat&gt;
            </code>
            <code lang="C#">
            // Defines the list format.
            ParagraphFormat paragraphFormat = new ParagraphFormat();
            ListFormat listFormat = new ListFormat();
            listFormat.ListId = 3;
            listFormat.ListLevelNumber = 0;
            paragraphFormat.ListFormat = listFormat;
            </code>
            <code lang="VB">
            ' Defines the list format.
            Dim paragraphFormat As New ParagraphFormat()
            Dim listFormat As New ListFormat()
            listFormat.ListId = 3
            listFormat.ListLevelNumber = 0
            paragraphFormat.ListFormat = listFormat
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.ListFormatProperty">
            <summary>
            Identifies the ListFormat dependency property.
            </summary>
            <returns>The identifier for the ListFormat dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.LeftIndentProperty">
            <summary>
            Identifies the LeftIndent dependency property.
            </summary>
            <returns>The identifier for the LeftIndent dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.RightIndentProperty">
            <summary>
            Identifies the RightIndent dependency property.
            </summary>
            <returns>The identifier for the RightIndent dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.FirstLineIndentProperty">
            <summary>
            Identifies the FirstLineIndent dependency property.
            </summary>
            <returns>The identifier for the FirstLineIndent dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.TextAlignmentProperty">
            <summary>
            Identifies the TextAlignment dependency property.
            </summary>
            <returns>The identifier for the TextAlignment dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.AfterSpacingProperty">
            <summary>
            Identifies the AfterSpacing dependency property.
            </summary>
            <returns>The identifier for the AfterSpacing dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.BeforeSpacingProperty">
            <summary>
            Identifies the BeforeSpacing dependency property.
            </summary>
            <returns>The identifier for the BeforeSpacing dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.LineSpacingProperty">
            <summary>
            Identifies the LineSpacing dependency property.
            </summary>
            <returns>The identifier for the LineSpacing dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.LineSpacingTypeProperty">
            <summary>
            Identifies the LineSpacingType dependency property.
            </summary>
            <returns>The identifier for the LineSpacingType dependency property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat" /> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat" /> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>.
            The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>, <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>, <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/>
            or <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.OnListFormatChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when list format changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.OnLeftIndentChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when left indent changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.OnRightIndentChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when right indent changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.OnFirstLineIndentChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when first line indent changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.OnTextAlignmentChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when text alignment changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.OnAfterSpacingChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when after spacing changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.OnBeforeSpacingChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when before spacing changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.OnLineSpacingChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when line spacing changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.OnLineSpacingTypeChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when line spacing type changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.ApplyList(Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv,System.Int32)">
             <summary>
             Applies the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> with the specified <paramref name="levelNumber"/>.
             </summary>
             <param name="listAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> instance.</param>
             <param name="levelNumber">The level number of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/>.</param>
             <example>
             <para>The following code example demonstrates how to apply a list for the paragraph.</para>
             <code lang="C#">
             public void ApplyList()
             {
                 // Retrieves the paragaph from the document.
                 ParagraphAdv paragraphAdv = richTextBoxAdv.Document.Sections[0].Blocks[0] as ParagraphAdv;
                 // Retrieves the list from the document.
                 ListAdv listAdv = richTextBoxAdv.Document.Lists[2];
                 // Applies the list for the paragraph with level number = 0.
                 paragraphAdv.ParagraphFormat.ApplyList(listAdv, 0);
            }
             </code>
             <code lang="VB">
             Private Sub GetDocumentTextPositions()
             
                 ' Retrieves the paragaph from the document.
                 Dim paragraphAdv As ParagraphAdv = TryCast(richTextBoxAdv.Document.Sections(0).Blocks(0), ParagraphAdv)   
                 ' Retrieves the list from the document.
                 Dim listAdv As ListAdv = richTextBoxAdv.Document.Lists(2)
                 ' Applies the list for the paragraph with level number = 0.
                 paragraphAdv.ParagraphFormat.ApplyList(listAdv, 0)
             
             End Sub
             </code>
             </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.ApplyPropertyValue(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo,Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Applies the property value.
            </summary>
            <param name="baseHistoryInfo">The history info.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.ApplyPropertyValue(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo,Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Applies the property value.
            </summary>
            <param name="baseHistoryInfo">The history info.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.HandleParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat)">
            <summary>
            Handles the paragraph format.
            </summary>
            <param name="format"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.HandleListFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat,Syncfusion.UI.Xaml.RichTextBoxAdv.History)">
            <summary>
            Handles the list format.
            </summary>
            <param name="paragraphFormat">The paragraph format.</param>
            <param name="history">The history.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.Relayout">
            <summary>
            Relayouts this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.GetPropertyValue(Windows.UI.Xaml.DependencyProperty)">
            <summary>
            Gets the property value.
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.CopyFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat)">
            <summary>
            Copies the format.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.CloneFormat">
            <summary>
            Clones the format.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.CopyFromListLevelParagrahFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat)">
            <summary>
            Copies from list level paragrah format.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.ValidateLineSpacing(System.Double)">
            <summary>
            Validates the line spacing property
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.ValidateSpacing(System.Double)">
            <summary>
            validates the spacing property
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat"/> class.
            </summary>
            <example>
            <para>The following code example demonstrates how to define the list format.</para>
            <code lang="XAML">
            &lt;!-- Defines the list format. --&gt; 
            &lt;RichTextBoxAdv:ParagraphFormat&gt;
                &lt;RichTextBoxAdv:ParagraphFormat.ListFormat&gt;
                    &lt;RichTextBoxAdv:ListFormat ListId="3" ListLevelNumber="0"/&gt;
                &lt;/RichTextBoxAdv:ParagraphFormat.ListFormat&gt;
            &lt;/RichTextBoxAdv:ParagraphFormat&gt;
            </code>
            <code lang="C#">
            // Defines the list format.
            ParagraphFormat paragraphFormat = new ParagraphFormat();
            ListFormat listFormat = new ListFormat();
            listFormat.ListId = 3;
            listFormat.ListLevelNumber = 0;
            paragraphFormat.ListFormat = listFormat;
            </code>
            <code lang="VB">
            ' Defines the list format.
            Dim paragraphFormat As New ParagraphFormat()
            Dim listFormat As New ListFormat()
            listFormat.ListId = 3
            listFormat.ListLevelNumber = 0
            paragraphFormat.ListFormat = listFormat
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat.Document">
            <summary>
            Gets the document.
            </summary>
            <value>
            The document.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat.List">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/>.
            </summary>
            <value>
            The instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat.ListLevelNumber">
            <summary>
            Gets or sets the level number of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/>.
            </summary>
            <value>
            The level number of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat.ListLevel">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/>.
            </summary>
            <returns>
            Returns null if the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> is not defined. Otherwise returns the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> 
            at the defined level number in the associated <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat.ListId">
            <summary>
            Gets or sets the identifier of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/>.
            </summary>
            <value>The Id that uniquely identifies the associated <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat.ListProperty">
            <summary>
            Identifies the List dependency property.
            </summary>
            <returns>The identifier for the List dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat.ListLevelNumberProperty">
            <summary>
            Identifies the ListLevelNumber dependency property.
            </summary>
            <returns>The identifier for the ListLevelNumber dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat.ListIdProperty">
            <summary>
            Identifies the ListId dependency property.
            </summary>
            <returns>The identifier for the ListId dependency property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat" /> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>.
            </summary>
            <param name="paragraphFormat">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/> associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat.OnListIdChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [list id changed].
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:System.Windows.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat.OnListLevelNumberChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [list level number changed].
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:System.Windows.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat.OnListChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [list changed].
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:System.Windows.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat.RemoveList">
            <summary>
            Removes the list.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat.UpdateOwnerParagraphFormat">
            <summary>
            Updates the owner paragraph format.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat.ApplyList(Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv,System.Int32)">
            <summary>
            Applies the list.
            </summary>
            <param name="list">The list.</param>
            <param name="listLevel">The list level.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat.ApplyPropertyValue(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo,System.Object)">
            <summary>
            Applies the property value.
            </summary>
            <param name="baseHistoryInfo">The history info.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat.Relayout">
            <summary>
            Relayouts this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat.GetPropertyValue(Windows.UI.Xaml.DependencyProperty)">
            <summary>
            Gets the property value.
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat.CopyFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat)">
            <summary>
            Copies the format.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListFormat"/> instance.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.Document">
            <summary>
            Gets the document.
            </summary>
            <value>
            The document.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.PageSize">
            <summary>
            Gets or Sets the size of the page.
            </summary>
            <value>
            The size of the page.
            </value>
            <example>
            <para>The following code example demonstrates how to define the page size for a section.</para>
            <code lang="XAML">
            &lt;!-- Defines a Section of page size 480 x 520 pixels. --&gt; 
            &lt;RichTextBoxAdv:SectionAdv&gt;
                &lt;RichTextBoxAdv:SectionAdv.SectionFormat&gt;
                    &lt;RichTextBoxAdv:SectionFormat PageSize="480 520"/&gt;
                &lt;/RichTextBoxAdv:SectionAdv.SectionFormat&gt;
                &lt;!-- Define the blocks, headers and footers of the section. --&gt; 
            &lt;/RichTextBoxAdv:SectionAdv&gt;
            </code>
            <code lang="C#">
            // Defines a Section of page size 480 x 520 pixels.
            SectionAdv section = new SectionAdv();
            SectionFormat sectionFormat = new SectionFormat();
            sectionFormat.PageSize = new Size(480, 520);
            section.SectionFormat = sectionFormat;
            // Define the blocks, headers and footers of the section.
            </code>
            <code lang="VB">
            ' Defines a Section of page size 480 x 520 pixels.
            Dim section As New SectionAdv()
            Dim sectionFormat As New SectionFormat()
            sectionFormat.PageSize = New Size(480, 520)
            section.SectionFormat = sectionFormat
            ' Define the blocks, headers and footers of the section.
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.PageMargin">
            <summary>
            Gets or Sets the margin of the page.
            </summary>
            <value>
            The page margin.
            </value>
            <example>
            <para>The following code example demonstrates how to define the page margin for a section.</para>
            <code lang="XAML">
            &lt;!-- Defines a Section with left and right page margins as 96 pixels and top and bottom margins as 48 pixels respectively. --&gt; 
            &lt;RichTextBoxAdv:SectionAdv&gt;
                &lt;RichTextBoxAdv:SectionAdv.SectionFormat&gt;
                    &lt;RichTextBoxAdv:SectionFormat PageMargin="96 48"/&gt;
                &lt;/RichTextBoxAdv:SectionAdv.SectionFormat&gt;
                &lt;!-- Define the blocks, headers and footers of the section. --&gt; 
            &lt;/RichTextBoxAdv:SectionAdv&gt;
            </code>
            <code lang="C#">
            // Defines a Section with left and right page margins as 96 pixels and top and bottom margins as 48 pixels respectively.
            SectionAdv section = new SectionAdv();
            SectionFormat sectionFormat = new SectionFormat();
            sectionFormat.PageMargin = new Thickness(96, 48);
            section.SectionFormat = sectionFormat;
            // Define the blocks, headers and footers of the section.
            </code>
            <code lang="VB">
            ' Defines a Section with left and right page margins as 96 pixels and top and bottom margins as 48 pixels respectively.
            Dim section As New SectionAdv()
            Dim sectionFormat As New SectionFormat()
            sectionFormat.PageMargin = New Thickness(96, 48)
            section.SectionFormat = sectionFormat
            ' Define the blocks, headers and footers of the section.
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.HeaderDistance">
            <summary>
            Gets or Sets the header distance from the page top.
            </summary>
            <value>
            The header distance from the page top.
            </value>
            <example>
            <para>The following code example demonstrates how to define the header distance for a section.</para>
            <code lang="XAML">
            &lt;!-- Defines a Section with header distance of 06 pixels. --&gt; 
            &lt;RichTextBoxAdv:SectionAdv&gt;
                &lt;RichTextBoxAdv:SectionAdv.SectionFormat&gt;
                    &lt;RichTextBoxAdv:SectionFormat HeaderDistance="96"/&gt;
                &lt;/RichTextBoxAdv:SectionAdv.SectionFormat&gt;
                &lt;!-- Define the blocks, headers and footers of the section. --&gt; 
            &lt;/RichTextBoxAdv:SectionAdv&gt;
            </code>
            <code lang="C#">
            // Defines a Section with header distance of 96 pixels.
            SectionAdv section = new SectionAdv();
            SectionFormat sectionFormat = new SectionFormat();
            sectionFormat.HeaderDistance = 96;
            section.SectionFormat = sectionFormat;
            // Define the blocks, headers and footers of the section.
            </code>
            <code lang="VB">
            ' Defines a Section with header distance of 96 pixels.
            Dim section As New SectionAdv()
            Dim sectionFormat As New SectionFormat()
            sectionFormat.HeaderDistance = 96
            section.SectionFormat = sectionFormat
            ' Define the blocks, headers and footers of the section.
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.FooterDistance">
            <summary>
            Gets or Sets the footer distance from the page bottom.
            </summary>
            <value>
            The footer distance from the page bottom.
            </value>
            <example>
            <para>The following code example demonstrates how to define the footer distance for a section.</para>
            <code lang="XAML">
            &lt;!-- Defines a Section with footer distance of 48 pixels. --&gt; 
            &lt;RichTextBoxAdv:SectionAdv&gt;
                &lt;RichTextBoxAdv:SectionAdv.SectionFormat&gt;
                    &lt;RichTextBoxAdv:SectionFormat FooterDistance="48"/&gt;
                &lt;/RichTextBoxAdv:SectionAdv.SectionFormat&gt;
                &lt;!-- Define the blocks, headers and footers of the section. --&gt; 
            &lt;/RichTextBoxAdv:SectionAdv&gt;
            </code>
            <code lang="C#">
            // Defines a Section with footer distance of 48 pixels.
            SectionAdv section = new SectionAdv();
            SectionFormat sectionFormat = new SectionFormat();
            sectionFormat.FooterDistance = 48;
            section.SectionFormat = sectionFormat;
            // Define the blocks, headers and footers of the section.
            </code>
            <code lang="VB">
            ' Defines a Section with footer distance of 48 pixels.
            Dim section As New SectionAdv()
            Dim sectionFormat As New SectionFormat()
            sectionFormat.FooterDistance = 48
            section.SectionFormat = sectionFormat
            ' Define the blocks, headers and footers of the section.
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.DifferentFirstPage">
            <summary>
            Gets or sets a value indicating whether the section has different first page.
            </summary>
            <value>
             True, if the section has different first page. Otherwise False.
            </value>
            <example>
            <para>The following code example demonstrates how to specify that a section has different first page header and footer.</para>
            <code lang="XAML">
            &lt;!-- Defines a Section that has different first page header and footer. --&gt; 
            &lt;RichTextBoxAdv:SectionAdv&gt;
                &lt;RichTextBoxAdv:SectionAdv.SectionFormat&gt;
                    &lt;RichTextBoxAdv:SectionFormat DifferentFirstPage="True"/&gt;
                &lt;/RichTextBoxAdv:SectionAdv.SectionFormat&gt;
                &lt;!-- Define the blocks, headers and footers of the section. --&gt; 
            &lt;/RichTextBoxAdv:SectionAdv&gt;
            </code>
            <code lang="C#">
            // Defines a Section that has different first page header and footer.
            SectionAdv section = new SectionAdv();
            SectionFormat sectionFormat = new SectionFormat();
            sectionFormat.DifferentFirstPage = true;
            section.SectionFormat = sectionFormat;
            // Define the blocks, headers and footers of the section.
            </code>
            <code lang="VB">
            ' Defines a Section that has different first page header and footer.
            Dim section As New SectionAdv()
            Dim sectionFormat As New SectionFormat()
            sectionFormat.DifferentFirstPage = True
            section.SectionFormat = sectionFormat
            ' Define the blocks, headers and footers of the section.
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.DifferentOddAndEvenPages">
            <summary>
            Gets or sets a value indicating whether the section has different odd and even pages.
            </summary>
            <value>
            True, if the section has different odd and even pages. Otherwise False.
            </value>
            <example>
            <para>The following code example demonstrates how to specify that a section has different odd and even pages header and footer.</para>
            <code lang="XAML">
            &lt;!-- Defines a Section that has different odd and even pages header and footer. --&gt; 
            &lt;RichTextBoxAdv:SectionAdv&gt;
                &lt;RichTextBoxAdv:SectionAdv.SectionFormat&gt;
                    &lt;RichTextBoxAdv:SectionFormat DifferentOddAndEvenPages="True"/&gt;
                &lt;/RichTextBoxAdv:SectionAdv.SectionFormat&gt;
                &lt;!-- Define the blocks, headers and footers of the section. --&gt; 
            &lt;/RichTextBoxAdv:SectionAdv&gt;
            </code>
            <code lang="C#">
            // Defines a Section that has different odd and even pages header and footer.
            SectionAdv section = new SectionAdv();
            SectionFormat sectionFormat = new SectionFormat();
            sectionFormat.DifferentOddAndEvenPages = true;
            section.SectionFormat = sectionFormat;
            // Define the blocks, headers and footers of the section.
            </code>
            <code lang="VB">
            ' Defines a Section that has different odd and even pages header and footer.
            Dim section As New SectionAdv()
            Dim sectionFormat As New SectionFormat()
            sectionFormat.DifferentOddAndEvenPages = True
            section.SectionFormat = sectionFormat
            ' Define the blocks, headers and footers of the section.
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.PageSizeProperty">
            <summary>
            Identifies the PageSize dependency property.
            </summary>
            <returns>The identifier for the PageSize dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.PageMarginProperty">
            <summary>
            Identifies the PageMargin dependency property.
            </summary>
            <returns>The identifier for the PageMargin dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.HeaderDistanceProperty">
            <summary>
            Identifies the HeaderDistance dependency property.
            </summary>
            <returns>The identifier for the HeaderDistance dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.FooterDistanceProperty">
            <summary>
            Identifies the FooterDistance dependency property.
            </summary>
            <returns>The identifier for the FooterDistance dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.DifferentFirstPageProperty">
            <summary>
            Identifies the DifferentFirstPage dependency property.
            </summary>
            <returns>The identifier for the DifferentFirstPage dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.DifferentOddAndEvenPagesProperty">
            <summary>
            Identifies the DifferentOddAndEvenPages dependency property.
            </summary>
            <returns>The identifier for the DifferentOddAndEvenPages dependency property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/>.
            </summary>
            <param name="sectionAdv">The value can null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.OnPageSizeChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when page size changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.OnPageMarginChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when page margin changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.OnHeaderDistanceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when header distance changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.OnFooterDistanceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when footer distance changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.OnDifferentFirstPageChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when different first page changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.OnDifferentOddAndEvenPagesChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when different odd and even pages changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.ApplyPropertyValue(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo,Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Applies the property value.
            </summary>
            <param name="baseHistoryInfo">The history info.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.Relayout">
            <summary>
            Relayouts this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.CopyFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat)">
            <summary>
            Copies the format.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.Document">
            <summary>
            Gets the document.
            </summary>
            <value>
            The document.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.AllowAutoFit">
            <summary>
            Gets or Sets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/> is allowed to fit automatically.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.Background">
            <summary>
            Gets or sets the background color of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </summary>
            <value>
            The background color for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.Borders">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.Borders"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </summary>
            <value>
            The borders for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </value>
            <example>
            <para> The following code example demonstrates how to define the borders for the table</para>
            <code lang="XAML">
            &lt;!-- Defines the borders for the table --&gt; 
            &lt;RichTextBoxAdv:TableAdv&gt;
                &lt;RichTextBoxAdv:TableAdv.TableFormat&gt;
                    &lt;RichTextBoxAdv:TableFormat&gt;
                    &lt;RichTextBoxAdv:TableFormat.Borders&gt;
                    &lt;RichTextBoxAdv:Borders&gt;
                    &lt;RichTextBoxAdv:Borders.Left&gt;
                    &lt;RichTextBoxAdv:Border LineStyle="Single"/&gt;
                    &lt;/RichTextBoxAdv:Borders.Left&gt;
                    &lt;RichTextBoxAdv:Borders.Right&gt;
                    &lt;RichTextBoxAdv:Border LineStyle="Single"/&gt;
                    &lt;/RichTextBoxAdv:Borders.Right&gt;
                    &lt;RichTextBoxAdv:Borders.Top&gt;
                    &lt;RichTextBoxAdv:Border LineStyle="Single"/&gt;
                    &lt;/RichTextBoxAdv:Borders.Top&gt;
                    &lt;RichTextBoxAdv:Borders.Bottom&gt;
                    &lt;RichTextBoxAdv:Border LineStyle="Single"/&gt;
                    &lt;/RichTextBoxAdv:Borders.Bottom&gt;
                    &lt;RichTextBoxAdv:Borders.DiagonalUp&gt;
                    &lt;RichTextBoxAdv:Border  LineStyle="Single"/&gt;
                    &lt;/RichTextBoxAdv:Borders.DiagonalUp&gt;
                    &lt;RichTextBoxAdv:Borders.DiagonalDown&gt;
                    &lt;RichTextBoxAdv:Border  LineStyle="Single"/&gt;
                    &lt;/RichTextBoxAdv:Borders.DiagonalDown&gt;
                    &lt;RichTextBoxAdv:Borders.Horizontal&gt;
                    &lt;RichTextBoxAdv:Border  LineStyle="Single"/&gt;
                    &lt;/RichTextBoxAdv:Borders.Horizontal&gt;
                    &lt;RichTextBoxAdv:Borders.Vertical&gt;
                    &lt;RichTextBoxAdv:Border  LineStyle="Single"/&gt;
                    &lt;/RichTextBoxAdv:Borders.Vertical&gt;
                    &lt;/RichTextBoxAdv:Borders&gt;
                    &lt;/RichTextBoxAdv:TableFormat.Borders&gt;
                    &lt;/RichTextBoxAdv:TableFormat&gt;
                &lt;/RichTextBoxAdv:TableAdv.TableFormat&gt;
                &lt;!-- Define the borders of the table. --&gt; 
            &lt;/RichTextBoxAdv:TableAdv&gt; 
            </code>
            <code lang ="C#">
            // Defines the borders for the table.
             TableAdv table = new TableAdv();
             TableFormat tableFormat = new TableFormat();
             Borders borders = new Borders();
             Border left = new Border();
             left.LineStyle = LineStyle.Single;
             borders.Left = left;
             Border right = new Border();
             borders.Right = right;
             right.LineStyle = LineStyle.Single;
             borders.Right = right;
             Border top = new Border();
             top.LineStyle = LineStyle.Single;
             borders.Top = top;
             Border bottom = new Border();
             bottom.LineStyle = LineStyle.Single;
             borders.Bottom = bottom;
             Border diagonalUp= new Border();
             diagonalUp.LineStyle = LineStyle.Single;
             borders.DiagonalUp = diagonalUp;
             Border diagonalDown = new Border();
             diagonalDown.LineStyle = LineStyle.Single;
             borders.DiagonalDown = diagonalDown;
             Border horizontal = new Border();
             horizontal.LineStyle = LineStyle.Single;
             borders.Horizontal = horizontal;
             Border vertical = new Border();
             vertical.LineStyle = LineStyle.Single;
             borders.Vertical = vertical;
             tableFormat.Borders = borders;
             table.TableFormat = tableFormat;
             // Defines the borders of the table.
            </code>
            <code lang = "VB">
            ' Defines the borders for the table.
             Dim table As New TableAdv()
             Dim tableFormat As New TableFormat()
             Dim borders As New Borders()
             Dim left As New Border()
             left.LineStyle = LineStyle.Single
             borders.Left = left
             Dim right As New Border()
             right.LineStyle = LineStyle.Single
             borders.Right = right
             Dim top As New Border()
             top.LineStyle = LineStyle.Single
             borders.Top = top
             Dim bottom As New Border()
             bottom.LineStyle = LineStyle.Single
             borders.Bottom = bottom
             Dim diagonalUp As New Border()
             diagonalUp.LineStyle = LineStyle.Single
             borders.DiagonalUp = diagonalUp
             Dim diagonalDown As New Border()
             diagonalDown.LineStyle = LineStyle.Single
             borders.DiagonalDown = diagonalDown
             Border horizontal = new Border()
             horizontal.LineStyle = LineStyle.Single
             borders.Horizontal = horizontal
             Border vertical = new Border()
             vertical.LineStyle = LineStyle.Single
             borders.Vertical = vertical
             tableFormat.Borders = borders
             table.TableFormat = tableFormat
             'Defines the borders of the table.
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.CellSpacing">
            <summary>
            Gets or sets the spacing between the cells in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </summary>
            <value>
            The cell spacing for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define cell spacing for the table.</para>
            <code lang="XAML">
            &lt;!-- Defines the cell spacing for a table with 2 pixes --&gt; 
            &lt;RichTextBoxAdv:TableAdv&gt;
                &lt;RichTextBoxAdv:TableAdv.TableFormat&gt;
                    &lt;RichTextBoxAdv:TableFormat CellSpacing="2"/&gt;
                &lt;/RichTextBoxAdv:TableAdv.TableFormat&gt;
                &lt;!-- Define the cell spacing of the table. --&gt; 
            &lt;/RichTextBoxAdv:TableAdv&gt;
            </code>
            <code lang="C#">
            // Defines the cell spacing for a table with 20 pixels.
            TableAdv table = new TableAdv();
            TableFormat tableFormat = new TableFormat();
            tableFormat.CellSpacing = 2;
            table.TableFormat = tableFormat;
            // Define the cell spacing of the table.
            </code>
            <code lang="VB">
            ' Defines the cell spacing for a table with 20 pixels.
            Dim table As New TableAdv()
            Dim tableFormat As New TableFormat()
            tableFormat.CellSpacing = 2
            table.TableFormat = tableFormat
            '  Define the cell spacing of the table.
            </code>
            </example>
            <exception cref="T:System.ArgumentOutOfRangeException">The measuremnet must be between 0 px and 264.6 px.</exception>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.LeftMargin">
            <summary>
            Gets or sets the default cell left margin of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </summary>
            <value>
            The  default cell left margin for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define the default cell left margin for the table.</para>
            <code lang="XAML">
            &lt;!-- Defines the default cell  left margin for the table with 13 pixels --&gt; 
            &lt;RichTextBoxAdv:TableAdv&gt;
                &lt;RichTextBoxAdv:TableAdv.TableFormat&gt;
                    &lt;RichTextBoxAdv:TableFormat LeftMargin ="13"/&gt;
                &lt;/RichTextBoxAdv:TableAdv.TableFormat&gt;
                &lt;!-- Define the  default cell left margin of the table. --&gt; 
            &lt;/RichTextBoxAdv:TableAdv&gt;
            </code>
            <code lang="C#">
            // Defines the default cell left margin for the table with 13 pixels.
            TableAdv table = new TableAdv();
            TableFormat tableFormat = new TableFormat();
            tableFormat.LeftMargin = 13;
            table.TableFormat = tableFormat;
            // Define the default cell left margin of the table.
            </code>
            <code lang="VB">
            ' Defines the default cell left margin for the table with 13 pixels.
            Dim table As New TableAdv()
            Dim tableFormat As New TableFormat()
            tableFormat.LeftMargin = 13
            table.TableFormat = tableFormat
            '  Define the  default cell left margin of the table.
            </code>
            </example>
            <exception cref="T:System.ArgumentOutOfRangeException">The measuremnet must be between -0 px and 2112px px.</exception>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.RightMargin">
            <summary>
            Gets or sets the default cell right margin of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </summary>
            <value>
            The default cell right margin for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define default cell right margin for the table.</para>
            <code lang="XAML">
            &lt;!-- Defines the default cell right margin for the table with 13 pixels --&gt; 
            &lt;RichTextBoxAdv:TableAdv&gt;
                &lt;RichTextBoxAdv:TableAdv.TableFormat&gt;
                    &lt;RichTextBoxAdv:TableFormat RightMargin ="13"/&gt;
                &lt;/RichTextBoxAdv:TableAdv.TableFormat&gt;
                &lt;!-- Define the default cell right margin of the table. --&gt; 
            &lt;/RichTextBoxAdv:TableAdv&gt;
            </code>
            <code lang="C#">
            // Defines the default cell right margin for the table with 13 pixels.
            TableAdv table = new TableAdv();
            TableFormat tableFormat = new TableFormat();
            tableFormat.RightMargin = 13;
            table.TableFormat = tableFormat;
            // Define the default cell right margin of the table.
            </code>
            <code lang="VB">
            ' Defines the default cell right margin for the table with 13 pixels.
            Dim table As New TableAdv()
            Dim tableFormat As New TableFormat()
            tableFormat.RightMargin = 13
            table.TableFormat = tableFormat
            '  Define the default cell right margin of the table.
            </code>
            </example>
            <exception cref="T:System.ArgumentOutOfRangeException">The measuremnet must be between -0 px and 2112px px.</exception>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.TopMargin">
            <summary>
            Gets or sets the default cell top margin of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </summary>
            <value>
            The default cell top margin for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define the default cell top margin for the table.</para>
            <code lang="XAML">
            &lt;!-- Defines the default cell top margin for the table with 13 pixels --&gt; 
            &lt;RichTextBoxAdv:TableAdv&gt;
                &lt;RichTextBoxAdv:TableAdv.TableFormat&gt;
                    &lt;RichTextBoxAdv:TableFormat TopMargin ="13"/&gt;
                &lt;/RichTextBoxAdv:TableAdv.TableFormat&gt;
                &lt;!-- Define the default cell top margin of the table. --&gt; 
            &lt;/RichTextBoxAdv:TableAdv&gt;
            </code>
            <code lang="C#">
            // Defines the default cell top margin for the table with 13 pixels.
            TableAdv table = new TableAdv();
            TableFormat tableFormat = new TableFormat();
            tableFormat.TopMargin = 13;
            table.TableFormat = tableFormat;
            // Define the default cell top margin of the table.
            </code>
            <code lang="VB">
            ' Defines the default cell top margin for the table with 13 pixels.
            Dim table As New TableAdv()
            Dim tableFormat As New TableFormat()
            tableFormat.TopMargin = 13
            table.TableFormat = tableFormat
            '  Define the default cell  top margin of the table.
            </code>
            </example>
            <exception cref="T:System.ArgumentOutOfRangeException">The measuremnet must be between -0 px and 2112px px.</exception>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.BottomMargin">
            <summary>
            Gets or sets the default cell bottom margin of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </summary>
            <value>
            The default cell bottom margin for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define the default cell bottom margin for the table.</para>
            <code lang="XAML">
            &lt;!-- Defines the default cell bottom margin for the table with 13 pixels --&gt; 
            &lt;RichTextBoxAdv:TableAdv&gt;
                &lt;RichTextBoxAdv:TableAdv.TableFormat&gt;
                    &lt;RichTextBoxAdv:TableFormat BottomMargin ="13"/&gt;
                &lt;/RichTextBoxAdv:TableAdv.TableFormat&gt;
                &lt;!-- Define the default cell bottom margin of the table. --&gt; 
            &lt;/RichTextBoxAdv:TableAdv&gt;
            </code>
            <code lang="C#">
            // Defines the default cell bottom margin for the table with 13 pixels.
            TableAdv table = new TableAdv();
            TableFormat tableFormat = new TableFormat();
            tableFormat.BottomMargin = 13;
            table.TableFormat = tableFormat;
            // Define the default cell bottom margin of the table.
            </code>
            <code lang="VB">
            ' Defines the default cell bottom margin for the table with 13 pixels.
            Dim table As New TableAdv()
            Dim tableFormat As New TableFormat()
            tableFormat.BottomMargin = 13
            table.TableFormat = tableFormat
            '  Define the default cell bottom margin of the table.
            </code>
            </example>
            <exception cref="T:System.ArgumentOutOfRangeException">The measuremnet must be between -0 px and 2112px px.</exception>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.LeftIndent">
            <summary>
            Gets or sets the left indent of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </summary>
            <value>
            The left indent for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define left indent for a table.</para>
            <code lang="XAML">
            &lt;!-- Defines a table that indents 48 pixels from the left. --&gt; 
            &lt;RichTextBoxAdv:TableAdv&gt;
                &lt;RichTextBoxAdv:TableAdv.TableFormat&gt;
                    &lt;RichTextBoxAdv:TableFormat LeftIndent="48"/&gt;
                &lt;/RichTextBoxAdv:TableAdv.TableFormat&gt;
                &lt;!-- Define the rows of the table. --&gt; 
            &lt;/RichTextBoxAdv:TableAdv&gt;
            </code>
            <code lang="C#">
            // Defines a table that indents 48 pixels from the left.
            TableAdv table = new TableAdv();
            TableFormat tableFormat = new TableFormat();
            tableFormat.LeftIndent = 48;
            table.TableFormat = tableFormat;
            // Define the row of the table.
            </code>
            <code lang="VB">
            ' Defines a table that indents 48 pixels from the left.
            Dim table As New TableAdv()
            Dim tableFormat As New TableFormat()
            tableFormat.LeftIndent = 48
            table.TableFormat = tableFormat
            '  Define the row of the table.
            </code>
            </example>
            <exception cref="T:System.ArgumentOutOfRangeException">The measurement must be between -1440 px and 1440 px.</exception>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.Shading" -->
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.TableAlignment">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.TableAlignment"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </summary>
            <value>
            The table alignment for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define alignment for the table.</para>
            <code lang="XAML">
            &lt;!-- Defines the alignment for the table. --&gt; 
            &lt;RichTextBoxAdv:TableAdv&gt;
                &lt;RichTextBoxAdv:TableAdv.TableFormat&gt;
                    &lt;RichTextBoxAdv:TableFormat TableAlignment = "Center"/&gt;
                &lt;/RichTextBoxAdv:TableAdv.TableFormat&gt;
                &lt;!-- Define the alignment of the table. --&gt; 
            &lt;/RichTextBoxAdv:TableAdv&gt;
            </code>
            <code lang="C#">
            // Defines the alignment of the table.
            TableAdv table = new TableAdv();
            TableFormat tableFormat = new TableFormat();
            tableFormat.TableAlignment = TableAlignment.Center;
            table.TableFormat = tableFormat;
            // Define the alignment of the table.
            </code>
            <code lang="VB">
            ' Defines the alignment of the table.
            Dim table As New TableAdv()
            Dim tableFormat As New TableFormat()
            tableFormat.TableAlignment = TableAlignment.Center
            table.TableFormat = tableFormat
            '  Define the alignment of the table.
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.PreferredWidth">
            <summary>
            Gets or sets the preferred width of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </summary>
            <value>
            The preferred width for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define preferred width for the table.</para>
            <code lang="XAML">
            &lt;!-- Defines the preferred width for the table. --&gt; 
            &lt;RichTextBoxAdv:TableAdv&gt;
                &lt;RichTextBoxAdv:TableAdv.TableFormat&gt;
                    &lt;RichTextBoxAdv:TableFormat PreferredWidthType = "Pixel"; PreferredWidth = "500" /&gt;
                &lt;/RichTextBoxAdv:TableAdv.TableFormat&gt;
                &lt;!-- Define the preferred width of the table. --&gt; 
            &lt;/RichTextBoxAdv:TableAdv&gt;
            </code>
            <code lang="C#">
            // Defines the preferred width of the table.
            TableAdv table = new TableAdv();
            TableFormat tableFormat = new TableFormat();
            tableFormat.PreferredWidthType = WidthType.Pixel;
            tableFormat.PreferredWidth = 500;
            table.TableFormat = tableFormat;
            // Define the preferred width of the table.
            </code>
            <code lang="VB">
            ' Defines the preferred width of the table.
            Dim table As New TableAdv()
            Dim tableFormat As New TableFormat()
            tableFormat.PreferredWidthType = WidthType.Pixel
            tableFormat.PreferredWidth = 500
            table.TableFormat = tableFormat
            '  Define the preferred width of the table.
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.PreferredWidthType">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.WidthType"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </summary>
            <value>
            The preferred width type for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define preferred width type for the table.</para>
            <code lang="XAML">
            &lt;!-- Defines the preferred width type for the table. --&gt; 
            &lt;RichTextBoxAdv:TableAdv&gt;
                &lt;RichTextBoxAdv:TableAdv.TableFormat&gt;
                    &lt;RichTextBoxAdv:TableFormat PreferredWidthType = "Pixel"; PreferredWidth = "500"/&gt;
                &lt;/RichTextBoxAdv:TableAdv.TableFormat&gt;
                &lt;!-- Define the preferred width type of the table. --&gt; 
            &lt;/RichTextBoxAdv:TableAdv&gt;
            </code>
            <code lang="C#">
            // Defines the preferred width type of the table.
            TableAdv table = new TableAdv();
            TableFormat tableFormat = new TableFormat();
            tableFormat.PreferredWidthType = WidthType.Pixel;
            tableFormat.PreferredWidth = 500;
            table.TableFormat = tableFormat;
            // Define the preferred width type of the table.
            </code>
            <code lang="VB">
            ' Defines the preferred width type of the table.
            Dim table As New TableAdv()
            Dim tableFormat As New TableFormat()
            tableFormat.PreferredWidthType = WidthType.Pixel
            tableFormat.PreferredWidth = 500
            table.TableFormat = tableFormat
            '  Define the preferred width type of the table.
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.AllowAutoFitProperty">
            <summary>
            Identifies the AllowAutoFit dependency property.
            </summary>
            <returns>The identifier for the AllowAutoFit dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.BackgroundProperty">
            <summary>
            Identifies the Background dependency property.
            </summary>
            <returns>The identifier for the Background dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.BordersProperty">
            <summary>
            Identifies the Borders dependency property.
            </summary>
            <returns>The identifier for the Borders dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.CellSpacingProperty">
            <summary>
            Identifies the CellSpacing dependency property.
            </summary>
            <returns>The identifier for the CellSpacing dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.LeftIndentProperty">
            <summary>
            Identifies the LeftIndent dependency property.
            </summary>
            <returns>The identifier for the LeftIndent dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.ShadingProperty">
            <summary>
            Identifies the Shading dependency property.
            </summary>
            <returns>The identifier for the Shading dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.TableAlignmentProperty">
            <summary>
            Identifies the TableAlignment dependency property.
            </summary>
            <returns>The identifier for the TableAlignment dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.PreferredWidthProperty">
            <summary>
            Identifies the PreferredWidth dependency property.
            </summary>
            <returns>The identifier for the PreferredWidth dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.PreferredWidthTypeProperty">
            <summary>
            Identifies the PreferredWidthType dependency property.
            </summary>
            <returns>The identifier for the PreferredWidthType dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.LeftMarginProperty">
            <summary>
            Identifies the LeftMargin dependency property.
            </summary>
            <returns>The identifier for the LeftMargin dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.RightMarginProperty">
            <summary>
            Identifies the RightMargin dependency property.
            </summary>
            <returns>The identifier for the RightMargin dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.TopMarginProperty">
            <summary>
            Identifies the TopMargin dependency property.
            </summary>
            <returns>The identifier for the TopMargin dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.BottomMarginProperty">
            <summary>
            Identifies the BottomMargin dependency property.
            </summary>
            <returns>The identifier for the BottomMargin dependency property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat" /> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.OnAllowAutoFitChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when allow auto fit changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.OnBackgroundChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when background changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.OnBordersChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when borders changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.OnCellSpacingChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when cell spacing changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.OnLeftIndentChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when left indent changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.OnShadingChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when shading changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.OnTableAlignmentChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when table alignment changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.OnTableWidthChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when table width changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.OnWidthTypeChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when width type changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.OnLeftMarginChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when left margin changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.OnRightMarginChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when right margin changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.OnTopMarginChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when top margin changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.OnBottomMarginChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Bottom margin changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.AssignTableMarginValue(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Assign the parameter value to the tableformat properties
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.InitializeTableBorders">
            <summary>
            Assign the single border style to 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.ApplyPropertyValue(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo,Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Applies the property value.
            </summary>
            <param name="baseHistoryInfo">The history info.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.HandleTableFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat)">
            <summary>
            Handles the table format.
            </summary>
            <param name="format"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.CopyFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat)">
            <summary>
            Copies the format.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.CloneFormat">
            <summary>
            Clones the table format.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.Relayout">
            <summary>
            Relayout the table
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.ValidateMarginValue(System.Double)">
            <summary>
            Validate the margin value
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.Document">
            <summary>
            Gets the document.
            </summary>
            <value>
            The document.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.AllowBreakAcrossPages">
            <summary>
            Determines whether the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> is allowed to break across pages.
            </summary>
            <example>
            <para>The following code example demonstrates whether the table row is allowed to break across pages.</para>
            <code lang="XAML">
            &lt;!-- Defines the table row with break across pages. --&gt; 
            &lt;RichTextBoxAdv:TableRowAdv&gt;
                &lt;RichTextBoxAdv:TableRowAdv.RowFormat&gt;
                    &lt;RichTextBoxAdv:RowFormat AllowBreakAcrossPages = "true"/&gt;
                &lt;/RichTextBoxAdv:TableRowAdv.RowFormat&gt;
                &lt;!-- Define the table row with break across pages. --&gt; 
            &lt;/RichTextBoxAdv:TableRowAdv&gt;
            </code>
            <code lang="C#">
            // Defines the table row with break across pages.
             TableRowAdv tableRow = new TableRowAdv();
             RowFormat rowFormat = new RowFormat();
             rowFormat.AllowBreakAcrossPages = true;
             tableRow.RowFormat = rowFormat;
            // Define the table row with break across pages.
            </code>
            <code lang="VB">
            ' Defines the table row with break across pages.
            Dim tableRow As New TableRowAdv()
            Dim rowFormat As New RowFormat()
            rowFormat.AllowBreakAcrossPages = True
            tableRow.RowFormat = rowFormat
            ' Define the table row with break across pages.
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.IsHeader">
            <summary>
            Determines whether the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> is header row or not.
            </summary>
            <example>
            <para>The following code example demonstrates whether the table row is header row or not.</para>
            <code lang="XAML">
            &lt;!-- Defines whether the table row is header row or not. --&gt; 
            &lt;RichTextBoxAdv:TableRowAdv&gt;
                &lt;RichTextBoxAdv:TableRowAdv.RowFormat&gt;
                    &lt;RichTextBoxAdv:RowFormat IsHeader = "true"/&gt;
                &lt;/RichTextBoxAdv:TableRowAdv.RowFormat&gt;
                &lt;!-- Define whether the table row is header row or not. --&gt; 
            &lt;/RichTextBoxAdv:TableRowAdv&gt;
            </code>
            <code lang="C#">
            // Defines whether the table row is header row or not.
             TableRowAdv tableRow = new TableRowAdv();
             RowFormat rowFormat = new RowFormat();
             rowFormat.IsHeader = true;
             tableRow.RowFormat = rowFormat;
            // Define whether the table row is header row or not.
            </code>
            <code lang="VB">
            ' Defines whether the table row is header row or not.
            Dim tableRow As New TableRowAdv()
            Dim rowFormat As New RowFormat()
            rowFormat.IsHeader = True
            tableRow.RowFormat = rowFormat
            ' Define whether the table row is header row or not.
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.Height">
            <summary>
            Gets or sets the height of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/>.
            </summary>
            <value>
            The height for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define height for the table row.</para>
            <code lang="XAML">
            &lt;!-- Defines the height of the table row. --&gt; 
            &lt;RichTextBoxAdv:TableRowAdv&gt;
                &lt;RichTextBoxAdv:TableRowAdv.RowFormat&gt;
                    &lt;RichTextBoxAdv:RowFormat HeightType = "Atleast" Height = "12"/&gt;
                &lt;/RichTextBoxAdv:TableRowAdv.RowFormat&gt;
                &lt;!-- Define the height of the table row. --&gt; 
            &lt;/RichTextBoxAdv:TableRowAdv&gt;
            </code>
            <code lang="C#">
            // Defines the height of the table row.
             TableRowAdv tableRow = new TableRowAdv();
             RowFormat rowFormat = new RowFormat();
             rowFormat.HeightType = HeightType.Atleast;
             rowFormat.Height = 12;
             tableRow.RowFormat = rowFormat;
            // Define the height of the table row.
            </code>
            <code lang="VB">
            ' Defines the height of the table row.
            Dim tableRow As New TableRowAdv()
            Dim rowFormat As New RowFormat()
             rowFormat.HeightType = HeightType.Atleast
            rowFormat.Height = 12
            tableRow.RowFormat = rowFormat
            ' Define the height of the table row.
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.HeightType">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.HeightType"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/>.
            </summary>
            <value>
            The height type  for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define height type for the table row.</para>
            <code lang="XAML">
            &lt;!-- Defines the height type of the table row. --&gt; 
            &lt;RichTextBoxAdv:TableRowAdv&gt;
                &lt;RichTextBoxAdv:TableRowAdv.RowFormat&gt;
                    &lt;RichTextBoxAdv:RowFormat HeightType = "Atleast" Height = "20"/&gt;
                &lt;/RichTextBoxAdv:TableRowAdv.RowFormat&gt;
                &lt;!-- Define the height type  of the table row. --&gt; 
            &lt;/RichTextBoxAdv:TableRowAdv&gt;
            </code>
            <code lang="C#">
            // Defines the height type of the table row.
             TableRowAdv tableRow = new TableRowAdv();
             RowFormat rowFormat = new RowFormat();
             rowFormat.HeightType = HeightType.Atleast;
             rowFormat.Height = 20;
             tableRow.RowFormat = rowFormat;
            // Define the height type of the table row.
            </code>
            <code lang="VB">
            ' Defines the height type of the table row.
            Dim tableRow As New TableRowAdv()
            Dim rowFormat As New RowFormat()
            rowFormat.HeightType = HeightType.Atleast;
            rowFormat.Height = 20
            tableRow.RowFormat = rowFormat
            ' Define the height type of the table row.
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.Borders">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.Borders"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.AllowBreakAcrossPagesProperty">
            <summary>
            Identifies the AllowBreakAcrossPages dependency property.
            </summary>
            <returns>The identifier for the AllowBreakAcrossPages dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.HeightProperty">
            <summary>
            Identifies the Height dependency property.
            </summary>
            <returns>The identifier for the Height dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.HeightTypeProperty">
            <summary>
            Identifies the HeightType dependency property.
            </summary>
            <returns>The identifier for the HeightType dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.IsHeaderProperty">
            <summary>
            Identifies the AllowBreakAcrossPages dependency property.
            </summary>
            <returns>The identifier for the AllowBreakAcrossPages dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.BordersProperty">
            <summary>
            Identifies the Borders dependency property.
            </summary>
            <returns> The identifier of the Borders dependency property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat" /> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode"/>.
            </summary>
            <param name="baseNode">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.OnAllowRowBreakAcrossPagesChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when allow break across pages changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.OnHeightChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when height changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.OnHeightTypeChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when height type changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.OnIsHeaderChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when is header changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.OnBordersChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the Borders changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.ApplyPropertyValue(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo,Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Applies the property value.
            </summary>
            <param name="baseHistoryInfo">The history info.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.HandleRowFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat)">
            <summary>
            Handles the table format.
            </summary>
            <param name="format"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.CopyFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat)">
            <summary>
            Copies the format.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.CloneFormat">
            <summary>
            Clones the format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.Relayout">
            <summary>
            Relayout this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat.ValidateRowHeight(System.Double)">
            <summary>
            validates the Height value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.Document">
            <summary>
            Gets the cell Documnet.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.Background">
            <summary>
            Gets or sets a color that provides the background of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>.
            </summary>
            <value>
            The color that provides the background of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>. Default color is empty (#00000000).
            </value>
            <example>
            <para>The following code example demonstrates how to define background color for a table cell.</para>
            <code lang="XAML">
            &lt;!-- Defines a table cell with background color as Green. --&gt; 
            &lt;RichTextBoxAdv:TableCellAdv&gt;
                &lt;RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                    &lt;RichTextBoxAdv:CellFormat Background="#FF00FF00"/&gt;
                &lt;/RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                &lt;!-- Define the blocks of the table cell. --&gt; 
            &lt;/RichTextBoxAdv:TableCellAdv&gt;
            </code>
            <code lang="C#">
            // Defines a table cell with background color as Green.
            TableCellAdv tableCell = new TableCellAdv();
            CellFormat cellFormat = new CellFormat();
            cellFormat.Background = Color.FromArgb(0xFF, 0x00, 0xFF, 0x00);
            tableCell.CellFormat = cellFormat;
            // Define the blocks of the table cell.
            </code>
            <code lang="VB">
            ' Defines a table cell with background color as Green.
            Dim tableCell As New TableCellAdv()
            Dim cellFormat As New CellFormat()
            cellFormat.Background = Color.FromArgb(&amp;HFF, &amp;H0, &amp;HFF, &amp;H0)
            tableCell.CellFormat = cellFormat
            ' Define the blocks of the table cell.
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.Borders">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.Borders"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>.
            </summary>
            <value>
            The borders of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>
            </value>
            <example>
            <para>The following code example demonstrates how to define borders of the table cell.</para>
            <code lang="XAML">
            &lt;!-- Defines the borders of the table cell. --&gt; 
            &lt;RichTextBoxAdv:TableCellAdv&gt;
                &lt;RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                    &lt;RichTextBoxAdv:CellFormat&gt;
                    &lt;RichTextBoxAdv:CellFormat.Borders&gt;
                    &lt;RichTextBoxAdv:Borders&gt;
                    &lt;RichTextBoxAdv:Borders.Left&gt;
                    &lt;RichTextBoxAdv:Border LineStyle="Single"/&gt;
                    &lt;/RichTextBoxAdv:Borders.Left&gt;
                    &lt;/RichTextBoxAdv:Borders&gt;
                    &lt;/RichTextBoxAdv:CellFormat.Borders&gt;
                    &lt;/RichTextBoxAdv:CellFormat&gt;
                &lt;/RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                &lt;!-- Define the borders of the table cell. --&gt; 
            &lt;/RichTextBoxAdv:TableCellAdv&gt; 
            </code>
            <code lang ="C#">
            // Defines the borders of the table cell.
             TableCellAdv tableCell = new TableCellAdv();
             CellFormat cellFormat = new CellFormat();
             Borders borders = new Borders();
             Border left = new Border();
             left.LineStyle = LineStyle.Single;
             borders.Left = left;
             cellFormat.Borders = borders;
             tableCell.CellFormat = cellFormat;
             // Defines the borders of the table cell.
            </code>
            <code lang = "VB">
            ' Defines the borders of the table cell.
            Dim tableCell As New TableCellAdv()
            Dim cellFormat As New CellFormat()
            Dim borders As New Borders()
            Dim left As New Border()
            left.LineStyle = LineStyle.[Single]
            borders.Left = left
            cellFormat.Borders = borders
            tableCell.CellFormat = cellFormat
            'Defines the borders of the table cell.
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.LeftMargin">
            <summary>
            Gets or sets the left margin of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>.
            </summary>
            <value>
            The left margin of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define left margin for a table cell.</para>
            <code lang="XAML">
            &lt;!-- Defines a table cell with left margin as 6 pixels. --&gt; 
            &lt;RichTextBoxAdv:TableCellAdv&gt;
                &lt;RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                    &lt;RichTextBoxAdv:CellFormat LeftMargin="6"/&gt;
                &lt;/RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                &lt;!-- Define the blocks of the table cell. --&gt; 
            &lt;/RichTextBoxAdv:TableCellAdv&gt;
            </code>
            <code lang="C#">
            // Defines a table cell with left margin as 6 pixels.
            TableCellAdv tableCell = new TableCellAdv();
            CellFormat cellFormat = new CellFormat();
            cellFormat.LeftMargin = 6;
            tableCell.CellFormat = cellFormat;
            // Define the blocks of the table cell.
            </code>
            <code lang="VB">
            ' Defines a table cell with left margin as 6 pixels.
            Dim tableCell As New TableCellAdv()
            Dim cellFormat As New CellFormat()
            cellFormat.LeftMargin = 6
            tableCell.CellFormat = cellFormat
            ' Define the blocks of the table cell.
            </code>
            </example>
            <exception cref="T:System.ArgumentOutOfRangeException">The measurement must be between 0 px and 2112px px.</exception>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.RightMargin">
            <summary>
            Gets or sets the right margin of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>.
            </summary>
            <value>
            The right margin of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define right margin for a table cell.</para>
            <code lang="XAML">
            &lt;!-- Defines a table cell with right margin as 4 pixels. --&gt; 
            &lt;RichTextBoxAdv:TableCellAdv&gt;
                &lt;RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                    &lt;RichTextBoxAdv:CellFormat RightMargin="4"/&gt;
                &lt;/RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                &lt;!-- Define the blocks of the table cell. --&gt; 
            &lt;/RichTextBoxAdv:TableCellAdv&gt;
            </code>
            <code lang="C#">
            // Defines a table cell with right margin as 4 pixels.
            TableCellAdv tableCell = new TableCellAdv();
            CellFormat cellFormat = new CellFormat();
            cellFormat.RightMargin = 4;
            tableCell.CellFormat = cellFormat;
            // Define the blocks of the table cell.
            </code>
            <code lang="VB">
            ' Defines a table cell with right margin as 4 pixels.
            Dim tableCell As New TableCellAdv()
            Dim cellFormat As New CellFormat()
            cellFormat.RightMargin = 4
            tableCell.CellFormat = cellFormat
            ' Define the blocks of the table cell.
            </code>
            </example>
            <exception cref="T:System.ArgumentOutOfRangeException">The measurement must be between 0 px and 2112px px.</exception>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.TopMargin">
            <summary>
            Gets or sets the top margin of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>.
            </summary>
            <value>
            The top margin of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define top margin for a table cell.</para>
            <code lang="XAML">
            &lt;!-- Defines a table cell with bottom margin as 6 pixels. --&gt; 
            &lt;RichTextBoxAdv:TableCellAdv&gt;
                &lt;RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                    &lt;RichTextBoxAdv:CellFormat TopMargin="6"/&gt;
                &lt;/RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                &lt;!-- Define the blocks of the table cell. --&gt; 
            &lt;/RichTextBoxAdv:TableCellAdv&gt;
            </code>
            <code lang="C#">
            // Defines a table cell with bottom margin as 6 pixels.
            TableCellAdv tableCell = new TableCellAdv();
            CellFormat cellFormat = new CellFormat();
            cellFormat.TopMargin = 6;
            tableCell.CellFormat = cellFormat;
            // Define the blocks of the table cell.
            </code>
            <code lang="VB">
            ' Defines a table cell with top margin as 6 pixels.
            Dim tableCell As New TableCellAdv()
            Dim cellFormat As New CellFormat()
            cellFormat.ToplMargin = 6
            tableCell.CellFormat = cellFormat
            ' Define the blocks of the table cell.
            </code>
            </example>
            <exception cref="T:System.ArgumentOutOfRangeException">The measurement must be between 0 px and 2112px px.</exception>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.BottomMargin">
            <summary>
            Gets or sets the bottom margin of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>.
            </summary>
            <value>
            The bottom margin of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define bottom margin for a table cell.</para>
            <code lang="XAML">
            &lt;!-- Defines a table cell with bottom margin as 4 pixels. --&gt; 
            &lt;RichTextBoxAdv:TableCellAdv&gt;
                &lt;RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                    &lt;RichTextBoxAdv:CellFormat BottomMargin="4"/&gt;
                &lt;/RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                &lt;!-- Define the blocks of the table cell. --&gt; 
            &lt;/RichTextBoxAdv:TableCellAdv&gt;
            </code>
            <code lang="C#">
            // Defines a table cell with bottom margin as 4 pixels.
            TableCellAdv tableCell = new TableCellAdv();
            CellFormat cellFormat = new CellFormat();
            cellFormat.BottomMargin = 4;
            tableCell.CellFormat = cellFormat;
            // Define the blocks of the table cell.
            </code>
            <code lang="VB">
            ' Defines a table cell with bottom margin as 4 pixels.
            Dim tableCell As New TableCellAdv()
            Dim cellFormat As New CellFormat()
            cellFormat.BottomMargin = 4
            tableCell.CellFormat = cellFormat
            ' Define the blocks of the table cell.
            </code>
            </example>
            <exception cref="T:System.ArgumentOutOfRangeException">The measuremnet must be between 0 px and 2112px px.</exception>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.CellWidth">
            <summary>
            Gets or sets the width of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>.
            </summary>
            <value>
            The width of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define width for a table cell.</para>
            <code lang="XAML">
            &lt;!-- Defines a table cell of width as 300 pixels. --&gt; 
            &lt;RichTextBoxAdv:TableCellAdv&gt;
                &lt;RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                    &lt;RichTextBoxAdv:CellFormat CellWidth="300"/&gt;
                &lt;/RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                &lt;!-- Define the blocks of the table cell. --&gt; 
            &lt;/RichTextBoxAdv:TableCellAdv&gt;
            </code>
            <code lang="C#">
            // Defines a table cell of width as 300 pixels.
            TableCellAdv tableCell = new TableCellAdv();
            CellFormat cellFormat = new CellFormat();
            cellFormat.CellWidth = 300;
            tableCell.CellFormat = cellFormat;
            // Define the blocks of the table cell.
            </code>
            <code lang="VB">
            ' Defines a table cell of width as 300 pixels.
            Dim tableCell As New TableCellAdv()
            Dim cellFormat As New CellFormat()
            cellFormat.CellWidth = 300
            tableCell.CellFormat = cellFormat
            ' Define the blocks of the table cell.
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.ColumnSpan">
            <summary>
            Gets or sets the number of columns that the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> should span.
            </summary>
            <value>
            The number of columns that the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> should span.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">ColumnSpan value must be greater than or equal to one.</exception>
            <example>
            <para>The following code example demonstrates how to define a table cell to span horizontally across multiple columns.</para>
            <code lang="XAML">
            &lt;!-- Defines a table cell that spans horizontally across two columns. --&gt; 
            &lt;RichTextBoxAdv:TableCellAdv&gt;
                &lt;RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                    &lt;RichTextBoxAdv:CellFormat ColumnSpan="2"/&gt;
                &lt;/RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                &lt;!-- Define the blocks of the table cell. --&gt; 
            &lt;/RichTextBoxAdv:TableCellAdv&gt;
            </code>
            <code lang="C#">
            // Defines a table cell that spans horizontally across two columns.
            TableCellAdv tableCell = new TableCellAdv();
            CellFormat cellFormat = new CellFormat();
            cellFormat.ColumnSpan = 2;
            tableCell.CellFormat = cellFormat;
            // Define the blocks of the table cell.
            </code>
            <code lang="VB">
            ' Defines a table cell that spans horizontally across two columns.
            Dim tableCell As New TableCellAdv()
            Dim cellFormat As New CellFormat()
            cellFormat.ColumnSpan = 2
            tableCell.CellFormat = cellFormat
            ' Define the blocks of the table cell.
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.RowSpan">
            <summary>
            Gets or sets the number of rows that the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> should span.
            </summary>
            <value>
            The number of rows that the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> should span.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">RowSpan value must be greater than or equal to one.</exception>
            <example>
            <para>The following code example demonstrates how to define a table cell to span vertically across multiple rows.</para>
            <code lang="XAML">
            &lt;!-- Defines a table cell that spans vertically across four rows. --&gt; 
            &lt;RichTextBoxAdv:TableCellAdv&gt;
                &lt;RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                    &lt;RichTextBoxAdv:CellFormat RowSpan="4"/&gt;
                &lt;/RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                &lt;!-- Define the blocks of the table cell. --&gt; 
            &lt;/RichTextBoxAdv:TableCellAdv&gt;
            </code>
            <code lang="C#">
            // Defines a table cell that spans vertically across four rows.
            TableCellAdv tableCell = new TableCellAdv();
            CellFormat cellFormat = new CellFormat();
            cellFormat.RowSpan = 4;
            tableCell.CellFormat = cellFormat;
            // Define the blocks of the table cell.
            </code>
            <code lang="VB">
            ' Defines a table cell that spans vertically across four rows.
            Dim tableCell As New TableCellAdv()
            Dim cellFormat As New CellFormat()
            cellFormat.RowSpan = 4
            tableCell.CellFormat = cellFormat
            ' Define the blocks of the table cell.
            </code>
            </example>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.Shading" -->
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.VerticalAlignment">
             <summary>
             Gets or sets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellVerticalAlignment"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>.
             </summary>
             <value> The cell vertical alignment of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/></value>
             <example>
             <para>The following code example demonstrates how to define the vertical alignment of the table cell.</para>
             <code lang="XAML">
             &lt;!-- Defines the vertical alignment of the table cell. --&gt; 
             &lt;RichTextBoxAdv:TableCellAdv&gt;
                 &lt;RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                     &lt;RichTextBoxAdv:CellFormat VerticalAlignment="Center"/&gt;
                 &lt;/RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                 &lt;!-- Define the vertical alignment of the table cell. --&gt; 
             &lt;/RichTextBoxAdv:TableCellAdv&gt;
             </code>
             <code lang="C#">
             // Defines the vertical alignment of the table cell.
             TableCellAdv tableCell = new TableCellAdv();
             CellFormat cellFormat = new CellFormat();
             cellFormat.VerticalAlignment = CellVerticalAlignment.Center;
             tableCell.CellFormat = cellFormat;
             // Define the vertical alignment of the table cell.
             </code>
             <code lang="VB">
             ' Defines the vertical alignment of the table cell.
            Dim tableCell As New TableCellAdv()
            Dim cellFormat As New CellFormat()
            cellFormat.VerticalAlignment = CellVerticalAlignment.Center
            tableCell.CellFormat = cellFormat
             ' Define the vertcal alignment of the table cell.
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.PreferredWidthType">
             <summary>
             Gets or sets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.WidthType">PreferredWidthType</see> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>
             </summary>
             <value>The preferred width type of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> </value>
             <example>
             <para>The following code example demonstrates how to define preferred width type for the table cell.</para>
             <code lang="XAML">
             &lt;!-- Defines the preferred width type for the table cell. --&gt; 
             &lt;RichTextBoxAdv:TableCellAdv&gt;
                 &lt;RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                     &lt;RichTextBoxAdv:CellFormat PreferredWidthType = "Pixel"; PreferredWidth = "500"/&gt;
                 &lt;/RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                 &lt;!-- Define the preferred width type of the table cell. --&gt; 
             &lt;/RichTextBoxAdv:TableCellAdv&gt;
             </code>
             <code lang="C#">
             // Defines the preferred width type of the table cell.
             TableCellAdv tableCell = new TableCellAdv();
             CellFormat cellFormat = new CellFormat();
             cellFormat.PreferredWidthType = WidthType.Pixel;
             CellFormat.PreferredWidth = 500;
             tableCell.CellFormat = cellFormat;
             // Define the preferred width type of the table cell.
             </code>
             <code lang="VB">
             ' Defines the preferred width type of the table cell.
            Dim tableCell As New TableCellAdv()
            Dim cellFormat As New CellFormat()
            cellFormat.PreferredWidthType = WidthType.Pixel
            CellFormat.PreferredWidth = 500
            tableCell.CellFormat = cellFormat
             '  Define the preferred width type of the table cell.
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.CellMargin">
            <summary>
            Gets or sets the margin of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>.
            </summary>
            <value>
            The margin of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.PreferredWidth">
            <summary>
            Gets or sets the preferred width of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>.
            </summary>
            <value>The preferred width of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> </value>
            <example>
            <para>The following code example demonstrates how to define preferred width for the table cell.</para>
            <code lang="XAML">
            &lt;!-- Defines the preferred width for the table cell. --&gt; 
            &lt;RichTextBoxAdv:TableCellAdv&gt;
                &lt;RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                    &lt;RichTextBoxAdv:CellFormat PreferredWidthType = "Pixel"; PreferredWidth = "500"/&gt;
                &lt;/RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                &lt;!-- Define the preferred width of the table cell. --&gt; 
            &lt;/RichTextBoxAdv:TableCellAdv&gt;
            </code>
            <code lang="C#">
            // Defines the preferred width of the table cell.
            TableCellAdv tableCell = new TableCellAdv();
            CellFormat cellFormat = new CellFormat();
            cellFormat.PreferredWidthType = WidthType.Pixel;
            CellFormat.PreferredWidth = 500;
            tableCell.CellFormat = cellFormat;
            // Define the preferred width of the table cell.
            </code>
            <code lang="VB">
            ' Defines the preferred width of the table cell.
            Dim tableCell As New TableCellAdv()
            Dim cellFormat As New CellFormat()
            cellFormat.PreferredWidthType = WidthType.Pixel
            CellFormat.PreferredWidth = 500
            tableCell.CellFormat = cellFormat
            '  Define the preferred width of the table cell.
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.BackgroundProperty">
            <summary>
            Identifies the Background dependency property.
            </summary>
            <returns>The identifier for the Background dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.BordersProperty">
            <summary>
            Identifies the Borders dependency property.
            </summary>
            <returns>The identifier for the Borders dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.CellWidthProperty">
            <summary>
            Identifies the CellWidth dependency property.
            </summary>
            <returns>The identifier for the CellWidth dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.ColumnSpanProperty">
            <summary>
            Identifies the ColumnSpan dependency property.
            </summary>
            <returns>The identifier for the ColumnSpan dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.RowSpanProperty">
            <summary>
            Identifies the RowSpan dependency property.
            </summary>
            <returns>The identifier for the RowSpan dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.ShadingProperty">
            <summary>
            Identifies the Shading dependency property.
            </summary>
            <returns>The identifier for the Shading dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.VerticalAlignmentProperty">
            <summary>
            Identifies the VerticalAlignment dependency property.
            </summary>
            <returns>The identifier for the VerticalAlignment dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.PreferredWidthTypeProperty">
            <summary>
            Identifies the PreferredWidthType dependency property.
            </summary>
            <returns>The identifier for the PreferredWidthType dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.LeftMarginProperty">
            <summary>
            Identifies the LeftMargin dependency property.
            </summary>
            <returns>The identifier for the LeftMargin dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.RightMarginProperty">
            <summary>
            Identifies the RightMargin dependency property.
            </summary>
            <returns>The identifier for the RightMargin dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.TopMarginProperty">
            <summary>
            Identifies the TopMargin dependency property.
            </summary>
            <returns>The identifier for the TopMargin dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.BottomMarginProperty">
            <summary>
            Identifies the BottomMargin dependency property.
            </summary>
            <returns>The identifier for the BottomMargin dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.CellMarginProperty">
            <summary>
            Identifies the CellMargin dependency property.
            </summary>
            <returns>The identifier for the CellMargin dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.PreferredWidthProperty">
            <summary>
            Identifies the PreferredWidth dependency property.
            </summary>
            <returns> The idntifies for the PreferredWidth depenedency property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat" /> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.OnBordersChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when borders changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.OnCellWidthChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when cell width changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.OnColumnSpanChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when column span changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.OnRowSpanChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when row span changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.OnBackgroundChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when background changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.OnShadingChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when shading changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.OnVerticalAlignmentChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when vertical alignment changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.OnWidthTypeChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when width type changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.OnLeftMarginChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when left margin changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.OnRightMarginChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when right margin changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.OnTopMarginChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when top margin changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.OnBottomMarginChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Bottom margin changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.OnCellMarginChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the cell margin changed.
            </summary>
            <param name="d">The Dependency object</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.OnPreferredWidthChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the preferred width changed.
            </summary>
            <param name="d">The dependency object.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.Relayout">
            <summary>
            Relayout the row.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.ValidateMarginValue(System.Double)">
            <summary>
            Validate the margin value
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.ApplyPropertyValue(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo,Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Applies the property value.
            </summary>
            <param name="baseHistoryInfo">The history info.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.CopyFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat)">
            <summary>
            Copies the format.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.CloneFormat">
            <summary>
            Clones the cell format.
            </summary>
            <returns>The cloned cell format.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.HandleCellFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat)">
            <summary>
            Handles the table format.
            </summary>
            <param name="format"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.AssignCellMarginValue(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Assign the parameter values to properies 
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.ContainsMargins">
            <summary>
            Checks wheather any of the property holds value 
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders"/> class
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.Left">
             <summary>
             Gets or sets the left <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Border"/>.
             </summary>
             <value>
             The left  <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Border"/>..
             </value>
             <example>
             <para> The following code example demonstrates how to define the left border.</para>
             <code lang="XAML">
             &lt;!-- Defines the left border. --&gt; 
                     &lt;RichTextBoxAdv:Borders&gt;
                     &lt;RichTextBoxAdv:Borders.Left&gt;
                     &lt;RichTextBoxAdv:Border LineStyle="Single"/&gt;
                     &lt;/RichTextBoxAdv:Borders.Left&gt;
                     &lt;/RichTextBoxAdv:Borders&gt;
                 &lt;!-- Define the left border. --&gt; 
            </code>
             <code lang ="C#">
             // Defines the left border.
              Borders borders = new Borders();
              Border left = new Border();
              left.LineStyle = LineStyle.Single;
              borders.Left = left;
              // Defines the left border.
             </code>
             <code lang = "VB">
             ' Defines the left border.
              Dim borders As New Borders()
              Dim left As New Border()
              left.LineStyle = LineStyle.Single
              borders.Left = left
              'Defines the left border.
             </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.Right">
             <summary>
             Gets or sets the right <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Border"/>.
             </summary>
             <value>
             The right <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Border"/>.
             </value>
             <example>
             <para> The following code example demonstrates how to define the right border.</para>
             <code lang="XAML">
             &lt;!-- Defines the right border. --&gt; 
                     &lt;RichTextBoxAdv:Borders&gt;
                     &lt;RichTextBoxAdv:Borders.right&gt;
                     &lt;RichTextBoxAdv:Border LineStyle="Single"/&gt;
                     &lt;/RichTextBoxAdv:Borders.right&gt;
                     &lt;/RichTextBoxAdv:Borders&gt;
                 &lt;!-- Define the right borders. --&gt; 
            </code>
             <code lang ="C#">
             // Defines the right border.
              Borders borders = new Borders();
              Border right = new Border();
              right.LineStyle = LineStyle.Single;
              borders.Right = right;
              // Defines the right border.
             </code>
             <code lang = "VB">
             ' Defines the right border.
              Dim borders As New Borders()
              Dim right As New Border()
              right.LineStyle = LineStyle.Single
              borders.Right = right
              'Defines the right border .
             </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.Top">
             <summary>
             Gets or sets the top <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Border"/>.
             </summary>
             <value>
             The top <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Border"/>.
             </value>
             <example>
             <para> The following code example demonstrates how to define the top border.</para>
             <code lang="XAML">
             &lt;!-- Defines the top border. --&gt; 
                     &lt;RichTextBoxAdv:Borders&gt;
                     &lt;RichTextBoxAdv:Borders.top&gt;
                     &lt;RichTextBoxAdv:Border LineStyle="Single"/&gt;
                     &lt;/RichTextBoxAdv:Borders.top&gt;
                     &lt;/RichTextBoxAdv:Borders&gt;
                 &lt;!-- Define the top border. --&gt; 
            </code>
             <code lang ="C#">
             // Defines the top border.
              Borders borders = new Borders();
              Border top = new Border();
              top.LineStyle = LineStyle.Single;
              borders.Top = top;
              // Defines the top border.
             </code>
             <code lang = "VB">
             ' Defines the top border.
              Dim borders As New Borders()
              Dim top As New Border()
              top.LineStyle = LineStyle.Single
              borders.Top = top
              'Defines the top border.
             </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.Bottom">
             <summary>
             Gets or sets the bottom <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.Bottom"/>.
             </summary>
             <value>
             The bottom<see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Border"/>.
             </value>
             <example>
             <para> The following code example demonstrates how to define the bottom border.</para>
             <code lang="XAML">
             &lt;!-- Defines the bottom border. --&gt; 
                     &lt;RichTextBoxAdv:Borders&gt;
                     &lt;RichTextBoxAdv:Borders.bottom&gt;
                     &lt;RichTextBoxAdv:Border LineStyle="Single"/&gt;
                     &lt;/RichTextBoxAdv:Borders.bottom&gt;
                     &lt;/RichTextBoxAdv:Borders&gt;
                 &lt;!-- Define the bottom border. --&gt; 
            </code>
             <code lang ="C#">
             // Defines the bottom border.
              Borders borders = new Borders();
              Border bottom = new Border();
              bottom.LineStyle = LineStyle.Single;
              borders.Bottom = bottom;
              // Defines the bottom border.
             </code>
             <code lang = "VB">
             ' Defines the bottom border.
              Dim border As New Borders()
              Dim bottom As New Border()
              bottom.LineStyle = LineStyle.Single
              borders.Bottom = bottom
              'Defines the bottom border.
             </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.Horizontal">
             <summary>
             Gets or sets the horizontal <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Border"/>.
             </summary>
             <value>
             The horizontal <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Border"/>.
             </value>
             <example>
             <para> The following code example demonstrates how to define the horizontal border.</para>
             <code lang="XAML">
             &lt;!-- Defines the horizontal border. --&gt; 
                     &lt;RichTextBoxAdv:Borders&gt;
                     &lt;RichTextBoxAdv:Borders.horizontal&gt;
                     &lt;RichTextBoxAdv:Border LineStyle="Single"/&gt;
                     &lt;/RichTextBoxAdv:Borders.horizontal&gt;
                     &lt;/RichTextBoxAdv:Borders&gt;
                 &lt;!-- Define the horizontal border. --&gt; 
            </code>
             <code lang ="C#">
             // Defines the horizontal border.
              Borders borders = new Borders();
              Border horizontal = new Border();
              horizontal.LineStyle = LineStyle.Single;
              borders.Horizontal = horizontal;
              // Defines the horizontal border.
             </code>
             <code lang = "VB">
             ' Defines the horizontal border.
              Dim borders As New Borders()
              Dim horizontal As New Border()
              horizontal.LineStyle = LineStyle.Single
              borders.Horizontal = horizontal
              'Defines the horizontal border.
             </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.Vertical">
             <summary>
             Gets or sets the vertical <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Border"/>.
             </summary>
             <value>
             The vertical <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Border"/>.
             </value>
             <example>
             <para> The following code example demonstrates how to define the vertical border.</para>
             <code lang="XAML">
             &lt;!-- Defines the vertical border. --&gt; 
                     &lt;RichTextBoxAdv:Borders&gt;
                     &lt;RichTextBoxAdv:Borders.vertical&gt;
                     &lt;RichTextBoxAdv:Border LineStyle="Single"/&gt;
                     &lt;/RichTextBoxAdv:Borders.vertical&gt;
                     &lt;/RichTextBoxAdv:Borders&gt;
                 &lt;!-- Define the vertical border. --&gt; 
            </code>
             <code lang ="C#">
             // Defines the vertical border.
              Borders borders = new Borders();
              Border vertical = new Border();
              vertical.LineStyle = LineStyle.Single;
              borders.Vertical = vertical;
              // Defines the vertical border.
             </code>
             <code lang = "VB">
             ' Defines the vertical border.
              Dim borders As New Borders()
              Dim vertical As New Border()
              vertical.LineStyle = LineStyle.Single
              borders.Vertical = vertical
              'Defines the vertical border.
             </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.DiagonalUp">
             <summary>
             Gets or sets the diagonal up <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Border"/>.
             </summary>
             <value>
             The diagonal up <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Border"/>.
             </value>
             <example>
             <para> The following code example demonstrates how to define the diagonal up border.</para>
             <code lang="XAML">
             &lt;!-- Defines the diagonal up border. --&gt; 
                     &lt;RichTextBoxAdv:Borders&gt;
                     &lt;RichTextBoxAdv:Borders.diagonalUp&gt;
                     &lt;RichTextBoxAdv:Border LineStyle="Single"/&gt;
                     &lt;/RichTextBoxAdv:Borders.diagonalUp&gt;
                     &lt;/RichTextBoxAdv:Borders&gt;
                 &lt;!-- Define the diagonal up border. --&gt; 
            </code>
             <code lang ="C#">
             // Defines the diagonal up  border.
              Borders borders = new Borders();
              Border diagonalUp = new Border();
              diagonalUp.LineStyle = LineStyle.Single;
              borders.DiagonalUp = diagonalUp;
              // Defines the diagonal up border.
             </code>
             <code lang = "VB">
             ' Defines the diagonal up border.
              Dim borders As New Borders()
              Dim diagonalUp As New Border()
              diagonalUp.LineStyle = LineStyle.Single
              borders.DiagonalUp = diagonalUp
              'Defines the diagonal up  border.
             </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.DiagonalDown">
             <summary>
             Gets or sets the diagonal down <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Border"/>.
             </summary>
             <value>
             The diagonal down <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Border"/>.
             </value>
             <example>
             <para> The following code example demonstrates how to define the diagonal down  border.</para>
             <code lang="XAML">
             &lt;!-- Defines the diagonal down border. --&gt; 
                     &lt;RichTextBoxAdv:Borders&gt;
                     &lt;RichTextBoxAdv:Borders.diagonalDown&gt;
                     &lt;RichTextBoxAdv:Border LineStyle="Single"/&gt;
                     &lt;/RichTextBoxAdv:Borders.diagonalDown&gt;
                     &lt;/RichTextBoxAdv:Borders&gt;
                 &lt;!-- Define the diagonal down border. --&gt; 
            </code>
             <code lang ="C#">
             // Defines the diagonal down border.
              Borders borders = new Borders();
              Border diagonalDown = new Border();
              diagonalDown.LineStyle = LineStyle.Single;
              borders.DiagonalDown = diagonalDown;
              // Defines the diagonal down border.
             </code>
             <code lang = "VB">
             ' Defines the diagonal down border.
              Dim borders As New Borders()
              Dim diagonalDown As New Border()
              diagonalDown.LineStyle = LineStyle.Single
              borders.DiagonalDown = diagonalDown
              'Defines the diagonal down  border.
             </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.LineStyle">
            <summary>
            Sets the Line style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.LineWidth">
            <summary>
            Sets the line width.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.Color">
            <summary>
            Sets the color
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.OwnerCell">
            <summary>
            Gets the owner cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.OwnerRow">
            <summary>
            Gets th owner row.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.OwnerTable">
            <summary>
            Gets the owner table.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders" /> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders" /> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode"/>.
            </summary>
            <param name="baseNode">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders"/>. It can be an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat"/>, <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat"/> or <see cref="!:CellForamt"/>.
            </param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.LeftProperty">
            <summary>
            Identifies the Left dependency property.
            </summary>
            <returns>The identifier for the Left dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.RightProperty">
            <summary>
            Identifies the Right dependency property.
            </summary>
            <returns>The identifier for the Right dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.TopProperty">
            <summary>
            Identifies the Top dependency property.
            </summary>
            <returns>The identifier for the Top dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.BottomProperty">
            <summary>
            Identifies the Bottom dependency property.
            </summary>
            <returns>The identifier for the Bottom dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.HorizontalProperty">
            <summary>
            Identifies the Horizontal dependency property.
            </summary>
            <returns>The identifier for the Horizontal dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.VerticalProperty">
            <summary>
            Identifies the Vertical dependency property.
            </summary>
            <returns>The identifier for the Vertical dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.DiagonalUpProperty">
            <summary>
            Identifies the Diagonal up dependency property.
            </summary>
            <returns>The identifier for the Diagonal up dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.DiagonalDownProperty">
            <summary>
            Identifies the Diagonal down dependency property.
            </summary>
            <returns>The identifier for the Diagonal down dependency property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.OnLeftPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when left border changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.OnRightPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when right border changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.OnTopPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when top border changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.OnBottomPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when bottom border changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.OnHorizontalPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when horizontal border changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.OnVerticalPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when vertical border changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.OnDiagonalUpPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when diagonal up border changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.OnDialogalDownPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when diagonal down border changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.Relayout">
            <summary>
            Relayout the parent.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.CopyFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.Borders)">
            <summary>
            Copies the format.
            </summary>
            <param name="border"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.Clone">
            <summary>
            Clones the borders.
            </summary>
            <returns>The borders.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.GetLeftBorderToRender(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Gets the Left border to render for a cell.
            </summary>
            <param name="TableCell">The table cell.</param>
            <returns>The left border</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.GetLeftBorderToRenderByHierarchy(Syncfusion.UI.Xaml.RichTextBoxAdv.Border,Syncfusion.UI.Xaml.RichTextBoxAdv.Borders,Syncfusion.UI.Xaml.RichTextBoxAdv.Borders)">
            <summary>
            Gets the border based on hierarchy.
            </summary>
            <param name="leftBorder">The left border.</param>
            <param name="rowBorders">The row borders.</param>
            <param name="tableBorders">The table borders.</param>
            <returns>the border.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.GetLeftBorderToRender(Syncfusion.UI.Xaml.RichTextBoxAdv.Border,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Gets the left border to render.
            </summary>
            <param name="leftBorder">the left border.</param>
            <param name="prevCell">the previous cell.</param>
            <returns>the border.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.GetRightBorderToRender(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Gets the Right border to render for a cell.
            </summary>
            <param name="TableCell">The table cell.</param>
            <returns>The right border</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.GetRightBorderToRenderByHierarchy(Syncfusion.UI.Xaml.RichTextBoxAdv.Border,Syncfusion.UI.Xaml.RichTextBoxAdv.Borders,Syncfusion.UI.Xaml.RichTextBoxAdv.Borders)">
            <summary>
            Gets the border based on hierarchy.
            </summary>
            <param name="leftBorder">The right border.</param>
            <param name="rowBorders">The row borders.</param>
            <param name="tableBorders">The table borders.</param>
            <returns>The border.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.GetRightBorderToRender(Syncfusion.UI.Xaml.RichTextBoxAdv.Border,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Gets the right border to render.
            </summary>
            <param name="rightBorder">The right border.</param>
            <param name="nextCell">The next cell.</param>
            <returns>The border.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.GetTopBorderToRender(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Gets the Top border to render for a cell.
            </summary>
            <param name="TableCell">The table cell.</param>
            <returns>The top border</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.GetTopBorderToRenderByHierarchy(Syncfusion.UI.Xaml.RichTextBoxAdv.Border,Syncfusion.UI.Xaml.RichTextBoxAdv.Borders,Syncfusion.UI.Xaml.RichTextBoxAdv.Borders)">
            <summary>
            Gets the border based on hierarchy.
            </summary>
            <param name="leftBorder">The top border.</param>
            <param name="rowBorders">The row borders.</param>
            <param name="tableBorders">The table borders.</param>
            <returns>The border.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.GetTopBorderToRender(Syncfusion.UI.Xaml.RichTextBoxAdv.Border,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Gets the top border to render.
            </summary>
            <param name="topBorder">The top border.</param>
            <param name="prevTopCell">The previous top cell.</param>
            <returns>The border.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.GetBottomBorderToRender(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Gets the Bottom border to render for a cell.
            </summary>
            <param name="TableCell">The table cell.</param>
            <returns>The bottom border</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.GetBottomBorderToRenderByHierarchy(Syncfusion.UI.Xaml.RichTextBoxAdv.Border,Syncfusion.UI.Xaml.RichTextBoxAdv.Borders,Syncfusion.UI.Xaml.RichTextBoxAdv.Borders)">
            <summary>
            Gets the border based on hierarchy.
            </summary>
            <param name="leftBorder">The bottom border.</param>
            <param name="rowBorders">The row borders.</param>
            <param name="tableBorders">The table borders.</param>
            <returns>The border.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.GetBottomBorderToRender(Syncfusion.UI.Xaml.RichTextBoxAdv.Border,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Gets the bottom border to render.
            </summary>
            <param name="bottomBorder">The bottom border.</param>
            <param name="nextBottomCell">The next bottom cell.</param>
            <returns>the border.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.GetDiagonalUpBorderToRender(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Gets the Diagonal Up border to render for a cell.
            </summary>
            <param name="TableCell">The table cell.</param>
            <returns>The diagonal up border</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.GetDiagonalDownBorderToRender(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Gets the Diagonal Down border to render for a cell.
            </summary>
            <param name="TableCell">The table cell.</param>
            <returns>The diagonal down border</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.GetBorderBasedOnPriority(Syncfusion.UI.Xaml.RichTextBoxAdv.Border,Syncfusion.UI.Xaml.RichTextBoxAdv.Border)">
            <summary>
            Gets the border based on its priority.
            </summary>
            <param name="border">The border.</param>
            <param name="adjacentBorder">The adjacent border.</param>
            <returns>border.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.GetLeftBorderToRender">
            <summary>
            Gets the left border.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.GetRightBorderToRender">
            <summary>
            Gets the right border.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.GetTopBorderToRender">
            <summary>
            Gets the top border.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders.GetBottomBorderToRender">
            <summary>
            Gets the bottom border.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Border">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Border"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.Color">
             <summary>
             Gets or sets the Color
             </summary>
             <value>
             The color for the border.
             </value>
             <example>
             <para> The following code example demonstrates how to define the color for the border.</para>
             <code lang="XAML">
             &lt;!-- Defines the color of the border. --&gt; 
                     &lt;RichTextBoxAdv:Borders&gt;
                     &lt;RichTextBoxAdv:Borders.Left&gt;
                     &lt;RichTextBoxAdv:Border Color="#FF000000"/&gt;
                     &lt;/RichTextBoxAdv:Borders.Left&gt;
                     &lt;/RichTextBoxAdv:Borders&gt;
                 &lt;!-- Define the color for the border. --&gt; 
            </code>
             <code lang ="C#">
             // Defines the color for the border.
              Borders borders = new Borders();
              Border left = new Border();
              left.Color = Color.FromRgb(0xFF, 0x90, 0xEE);
              borders.Left = left;
              // Defines the color for the border.
             </code>
             <code lang = "VB">
             ' Defines the color for the border.
              Dim borders As New Borders()
              Dim left As New Border()
              left.Color = Color.FromRgb(0xFF, 0x90, 0xEE)
              borders.Left = left
              'Defines the color for the border.
             </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.LineStyle">
             <summary>
             Gets or sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.LineStyle"/>.
             </summary>
             <value>
             The line style for the border.
             </value>
             <example>
             <para> The following code example demonstrates how to define the line style for the border.</para>
             <code lang="XAML">
             &lt;!-- Defines the line style for the border. --&gt; 
                     &lt;RichTextBoxAdv:Borders&gt;
                     &lt;RichTextBoxAdv:Borders.Left&gt;
                     &lt;RichTextBoxAdv:Border LineStyle="Single"/&gt;
                     &lt;/RichTextBoxAdv:Borders.Left&gt;
                     &lt;/RichTextBoxAdv:Borders&gt;
                 &lt;!-- Define the line style for the border. --&gt; 
            </code>
             <code lang ="C#">
             // Defines the line style for the border.
              Borders borders = new Borders();
              Border left = new Border();
              left.LineStyle = LineStyle.Single;
              borders.Left = left;
              // Defines the line style for the border.
             </code>
             <code lang = "VB">
             ' Defines the line style for the border.
              Dim borders As New Borders()
              Dim left As New Border()
              left.LineStyle = LineStyle.Single
              borders.Left = left
              'Defines line style for the border.
             </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.LineWidth">
             <summary>
             Gets or sets the line width.
             </summary>
             <value>
             The line width for the border.
             </value>
             <example>
             <para> The following code example demonstrates how to define the line width for the border.</para>
             <code lang="XAML">
             &lt;!-- Defines the line width for the border. --&gt; 
                     &lt;RichTextBoxAdv:Borders&gt;
                     &lt;RichTextBoxAdv:Borders.Left&gt;
                     &lt;RichTextBoxAdv:Border LineWidth="0.5"/&gt;
                     &lt;/RichTextBoxAdv:Borders.Left&gt;
                     &lt;/RichTextBoxAdv:Borders&gt;
                 &lt;!-- Define the line width for the border. --&gt; 
            </code>
             <code lang ="C#">
             // Defines the line width for the border;
              Borders borders = new Borders();
              Border left = new Border();
              left.LineWidth = 0.5;
              borders.Left = left;
              // Defines the line  width for the border.
             </code>
             <code lang = "VB">
             ' Defines the line width for the border.
              Dim borders As New Borders()
              Dim left As New Border()
              left.LineWidth = 0.5
              borders.Left = left
              'Defines line width for the border.
             </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.Shadow">
            <summary>
            Gets or Sets the shadow.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.Space">
            <summary>
            Gets or Sets the space.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.HasNoneStyle">
            <summary>
            Gets or sets whether it has none style or not.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Border" /> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Border" /> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode"/>.
            </summary>
            <param name="baseNode">
            It can be an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Borders"/>.
            </param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.ColorProperty">
            <summary>
            Identifies the Color dependency property.
            </summary>
            <returns>The identifier for the Color dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.LineStyleProperty">
            <summary>
            Identifies the LineStyle dependency property.
            </summary>
            <returns>The identifier for the LineStyle dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.LineWidthProperty">
            <summary>
            Identifies the LineWidth dependency property.
            </summary>
            <returns>The identifier for the LineWidth dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.ShadowProperty">
            <summary>
            Identifies the Shadow dependency property.
            </summary>
            <returns>The identifier for the Shadow dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.SpaceProperty">
            <summary>
            Identifies the Space dependency property.
            </summary>
            <returns>The identifier for the Space dependency property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.OnColorChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when background changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.OnLineStyleChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when line style changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.OnLineWidthChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when line width changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.OnShadowChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when shadow changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.OnSpaceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when space changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.CopyFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.Border)">
            <summary>
            Copies the format.
            </summary>
            <param name="border"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.Clone">
            <summary>
            Clones the border.
            </summary>
            <returns>The border.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.GetBorderWeight">
            <summary>
            Gets the border weight.
            </summary>
            <returns>The border weight.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.GetBorderNumber">
            <summary>
            Gets the border number.
            </summary>
            <returns>The border number.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.GetNumberOfLines">
            <summary>
            Gets the number of lines.
            </summary>
            <returns>The number of lines.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.GetPrecedence">
            <summary>
            Gets the precedence.
            </summary>
            <returns>The precedence.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.GetLineWidth">
            <summary>
            Gets the line width.
            </summary>
            <returns>The width.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Border.GetBorderLineWidthArray(Syncfusion.UI.Xaml.RichTextBoxAdv.LineStyle,System.Double)">
            <summary>
            Gets the Borders width for multi line style.
            </summary>
            <param name="LineStyle"></param>
            <param name="lineWidth"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Shading">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Shading"/> class.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.UI.Xaml.RichTextBoxAdv.Shading.BackgroundColor" -->
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.UI.Xaml.RichTextBoxAdv.Shading.ForegroundColor" -->
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Shading.Texture">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextureStyle"/>.
            </summary>
            <value>The texture style</value>
            <example>
            <para>The following code example demonstrates how to define texture style.</para>
            <code lang="XAML">
            &lt;!-- Defines the texture style. --&gt; 
                    &lt;RichTextBoxAdv:Shading&gt;
                    &lt;RichTextBoxAdv:Shading Texture = "Texture15Percent" /&gt;
                    &lt;/RichTextBoxAdv:Shading &gt;
            &lt;!-- Define the texture style. --&gt; 
            </code>
            <code lang="C#">
            // Defines the texture style.
            Shading shading = new Shading();
            shading.Texture = TextureStyle.Texture15Percent;
            // Define the texture style.
            </code>
            <code lang="VB">
            ' Defines the texture style.
            Dim shading As New Shading()
            shading.Texture = TextureStyle.Texture15Percent
            ' Define the texture style.
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Shading.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Shading" /> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Shading.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Shading" /> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode"/>.
            </summary>
            <param name="baseNode">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Shading"/>. It can be an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat"/> or <see cref="!:CellForamt"/>.
            </param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Shading.BackgroundColorProperty">
            <summary>
            Identifies the Background dependency property.
            </summary>
            <returns>The identifier for the Background dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Shading.ForegroundColorProperty">
            <summary>
            Identifies the ForegroundColor dependency property.
            </summary>
            <returns>The identifier for the ForegroundColor dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Shading.TextureProperty">
            <summary>
            Identifies the Texture dependency property.
            </summary>
            <returns>The identifier for the Texture dependency property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Shading.OnBackgroundChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when background changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Shading.OnForegroundChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when foreground changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Shading.OnTextureChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when texture changed.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Shading.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Shading.CopyFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.Shading)">
            <summary>
            Copies the format.
            </summary>
            <param name="shading"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Shading.Clone">
            <summary>
            Clones the shading.
            </summary>
            <returns>The shading.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooters">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooters"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooters.Document">
            <summary>
            Gets the document.
            </summary>
            <value>
            The document.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooters.Section">
            <summary>
            Gets/sets the Section.
            </summary>
            <value>
            The section.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooters.Header">
             <summary>
             Gets or sets the odd page or default header.
             </summary>
             <value>
             The odd page or default header.
             </value>
             <example>
             <para>The following code example demonstrates how to add default header.</para>
             <code lang="XAML">
             &lt;!-- Defines the odd page or default header. --&gt;
             &lt;RichTextBoxAdv:HeaderFooters&gt;
                 &lt;RichTextBoxAdv:HeaderFooters.Header&gt;
                     &lt;RichTextBoxAdv:HeaderFooter&gt;
                         &lt;RichTextBoxAdv:ParagraphAdv&gt;
                             &lt;RichTextBoxAdv:SpanAdv&gt;29 March 2016&lt;/RichTextBoxAdv:SpanAdv&gt;
                         &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                     &lt;/RichTextBoxAdv:HeaderFooter&gt;
                 &lt;/RichTextBoxAdv:HeaderFooters.Header&gt;
             &lt;/RichTextBoxAdv:HeaderFooters&gt;
             </code>
             <code lang="C#">
             HeaderFooters headerFooters = new HeaderFooters();
            
             // Defines the odd page or default header.
             headerFooters.Header = new HeaderFooter();
             ParagraphAdv headerParagraph = new ParagraphAdv();
             SpanAdv headerSpan = new SpanAdv();
             headerSpan.Text = "29 March 2016";
             headerParagraph.Inlines.Add(headerSpan);
             headerFooters.Header.Blocks.Add(headerParagraph);
             </code>
             <code lang="VB">
             Dim headerFooters As New HeaderFooters()
            
             ' Defines the odd page or default header.
             headerFooters.Header = New HeaderFooter()
             Dim headerParagraph As New ParagraphAdv()
             Dim headerSpan As New SpanAdv()
             headerSpan.Text = "29 March 2016"
             headerParagraph.Inlines.Add(headerSpan)
             headerFooters.Header.Blocks.Add(headerParagraph)
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooters.Footer">
             <summary>
             Gets or sets the odd page or default footer.
             </summary>
             <value>
             The odd page or default footer.
             </value>
             <example>
             <para>The following code example demonstrates how to add default footer.</para>
             <code lang="XAML">
             &lt;!-- Defines the odd page or default footer. --&gt;
             &lt;RichTextBoxAdv:HeaderFooters&gt;
                 &lt;RichTextBoxAdv:HeaderFooters.Footer&gt;
                     &lt;RichTextBoxAdv:HeaderFooter&gt;
                         &lt;RichTextBoxAdv:ParagraphAdv&gt;
                             &lt;RichTextBoxAdv:SpanAdv&gt;29 March 2016&lt;/RichTextBoxAdv:SpanAdv&gt;
                         &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                     &lt;/RichTextBoxAdv:HeaderFooter&gt;
                 &lt;/RichTextBoxAdv:HeaderFooters.Footer&gt;
             &lt;/RichTextBoxAdv:HeaderFooters&gt;
             </code>
             <code lang="C#">
             HeaderFooters headerFooters = new HeaderFooters();
            
             // Defines the odd page or default footer.
             headerFooters.Footer = new HeaderFooter();
             ParagraphAdv footerParagraph = new ParagraphAdv();
             SpanAdv footerSpan = new SpanAdv();
             footerSpan.Text = "29 March 2016";
             footerParagraph.Inlines.Add(footerSpan);
             headerFooters.Footer.Blocks.Add(footerParagraph);
             </code>
             <code lang="VB">
             Dim headerFooters As New HeaderFooters()
            
             ' Defines the odd page or default footer.
             headerFooters.Footer = New HeaderFooter()
             Dim footerParagraph As New ParagraphAdv()
             Dim footerSpan As New SpanAdv()
             footerSpan.Text = "29 March 2016"
             footerParagraph.Inlines.Add(footerSpan)
             headerFooters.Footer.Blocks.Add(footerParagraph)
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooters.EvenHeader">
             <summary>
             Gets or sets the even page header.
             </summary>
             <value>
             The header for the even pages.
             </value>
             <example>
             <para>The following code example demonstrates how to add even page header.</para>
             <code lang="XAML">
             &lt;!-- Defines the even page header. --&gt;
             &lt;RichTextBoxAdv:HeaderFooters&gt;
                 &lt;RichTextBoxAdv:HeaderFooters.EvenHeader&gt;
                     &lt;RichTextBoxAdv:HeaderFooter&gt;
                         &lt;RichTextBoxAdv:ParagraphAdv&gt;
                             &lt;RichTextBoxAdv:SpanAdv&gt;29 March 2016&lt;/RichTextBoxAdv:SpanAdv&gt;
                         &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                     &lt;/RichTextBoxAdv:HeaderFooter&gt;
                 &lt;/RichTextBoxAdv:HeaderFooters.EvenHeader&gt;
             &lt;/RichTextBoxAdv:HeaderFooters&gt;
             </code>
             <code lang="C#">
             HeaderFooters headerFooters = new HeaderFooters();
            
             // Defines the even page header.
             headerFooters.EvenHeader = new HeaderFooter();
             ParagraphAdv headerParagraph = new ParagraphAdv();
             SpanAdv headerSpan = new SpanAdv();
             headerSpan.Text = "29 March 2016";
             headerParagraph.Inlines.Add(headerSpan);
             headerFooters.EvenHeader.Blocks.Add(headerParagraph);
             </code>
             <code lang="VB">
             Dim headerFooters As New HeaderFooters()
            
             ' Defines the even page header.
             headerFooters.EvenHeader = New HeaderFooter()
             Dim headerParagraph As New ParagraphAdv()
             Dim headerSpan As New SpanAdv()
             headerSpan.Text = "29 March 2016"
             headerParagraph.Inlines.Add(headerSpan)
             headerFooters.EvenHeader.Blocks.Add(headerParagraph)
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooters.EvenFooter">
             <summary>
             Gets or sets the even page footer.
             </summary>
             <value>
             The footer for the even pages.
             </value>
             <example>
             <para>The following code example demonstrates how to add even page footer.</para>
             <code lang="XAML">
             &lt;!-- Defines the even page footer. --&gt;
             &lt;RichTextBoxAdv:HeaderFooters&gt;
                 &lt;RichTextBoxAdv:HeaderFooters.EvenFooter&gt;
                     &lt;RichTextBoxAdv:HeaderFooter&gt;
                         &lt;RichTextBoxAdv:ParagraphAdv&gt;
                             &lt;RichTextBoxAdv:SpanAdv&gt;29 March 2016&lt;/RichTextBoxAdv:SpanAdv&gt;
                         &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                     &lt;/RichTextBoxAdv:HeaderFooter&gt;
                 &lt;/RichTextBoxAdv:HeaderFooters.EvenFooter&gt;
             &lt;/RichTextBoxAdv:HeaderFooters&gt;
             </code>
             <code lang="C#">
             HeaderFooters headerFooters = new HeaderFooters();
            
             // Defines the even page footer.
             headerFooters.EvenFooter = new HeaderFooter();
             ParagraphAdv footerParagraph = new ParagraphAdv();
             SpanAdv footerSpan = new SpanAdv();
             footerSpan.Text = "29 March 2016";
             footerParagraph.Inlines.Add(footerSpan);
             headerFooters.EvenFooter.Blocks.Add(footerParagraph);
             </code>
             <code lang="VB">
             Dim headerFooters As New HeaderFooters()
            
             ' Defines the even page footer.
             headerFooters.EvenFooter = New HeaderFooter()
             Dim footerParagraph As New ParagraphAdv()
             Dim footerSpan As New SpanAdv()
             footerSpan.Text = "29 March 2016"
             footerParagraph.Inlines.Add(footerSpan)
             headerFooters.EvenFooter.Blocks.Add(footerParagraph)
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooters.FirstPageHeader">
             <summary>
             Gets or sets the first page header.
             </summary>
             <value>
             The header for the first page.
             </value>
             <example>
             <para>The following code example demonstrates how to add first page header.</para>
             <code lang="XAML">
             &lt;!-- Defines the first page header. --&gt;
             &lt;RichTextBoxAdv:HeaderFooters&gt;
                 &lt;RichTextBoxAdv:HeaderFooters.FirstPageHeader&gt;
                     &lt;RichTextBoxAdv:HeaderFooter&gt;
                         &lt;RichTextBoxAdv:ParagraphAdv&gt;
                             &lt;RichTextBoxAdv:SpanAdv&gt;Page 1&lt;/RichTextBoxAdv:SpanAdv&gt;
                         &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                     &lt;/RichTextBoxAdv:HeaderFooter&gt;
                 &lt;/RichTextBoxAdv:HeaderFooters.FirstPageHeader&gt;
             &lt;/RichTextBoxAdv:HeaderFooters&gt;
             </code>
             <code lang="C#">
             HeaderFooters headerFooters = new HeaderFooters();
            
             // Defines the first page header.
             headerFooters.FirstPageHeader = new HeaderFooter();
             ParagraphAdv headerParagraph = new ParagraphAdv();
             SpanAdv headerSpan = new SpanAdv();
             headerSpan.Text = "Page 1";
             headerParagraph.Inlines.Add(headerSpan);
             headerFooters.FirstPageHeader.Blocks.Add(headerParagraph);
             </code>
             <code lang="VB">
             Dim headerFooters As New HeaderFooters()
            
             ' Defines first page header.
             headerFooters.FirstPageHeader = New HeaderFooter()
             Dim headerParagraph As New ParagraphAdv()
             Dim headerSpan As New SpanAdv()
             headerSpan.Text = "Page 1"
             headerParagraph.Inlines.Add(headerSpan)
             headerFooters.FirstPageHeader.Blocks.Add(headerParagraph)
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooters.FirstPageFooter">
             <summary>
             Gets or sets the first page footer.
             </summary>
             <value>
             The footer for the first page.
             </value>
             <example>
             <para>The following code example demonstrates how to add first page footer.</para>
             <code lang="XAML">
             &lt;!-- Defines the first page footer. --&gt;
             &lt;RichTextBoxAdv:HeaderFooters&gt;
                 &lt;RichTextBoxAdv:HeaderFooters.FirstPageFooter&gt;
                     &lt;RichTextBoxAdv:HeaderFooter&gt;
                         &lt;RichTextBoxAdv:ParagraphAdv&gt;
                             &lt;RichTextBoxAdv:SpanAdv&gt;First Page&lt;/RichTextBoxAdv:SpanAdv&gt;
                         &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                     &lt;/RichTextBoxAdv:HeaderFooter&gt;
                 &lt;/RichTextBoxAdv:HeaderFooters.FirstPageFooter&gt;
             &lt;/RichTextBoxAdv:HeaderFooters&gt;
             </code>
             <code lang="C#">
             HeaderFooters headerFooters = new HeaderFooters();
            
             // Defines the first page footer.
             headerFooters.FirstPageFooter = new HeaderFooter();
             ParagraphAdv footerParagraph = new ParagraphAdv();
             SpanAdv footerSpan = new SpanAdv();
             footerSpan.Text = "First Page";
             footerParagraph.Inlines.Add(footerSpan);
             headerFooters.FirstPageFooter.Blocks.Add(footerParagraph);
             </code>
             <code lang="VB">
             Dim headerFooters As New HeaderFooters()
            
             ' Defines the first page footer.
             headerFooters.FirstPageFooter = New HeaderFooter()
             Dim footerParagraph As New ParagraphAdv()
             Dim footerSpan As New SpanAdv()
             footerSpan.Text = "First Page"
             footerParagraph.Inlines.Add(footerSpan)
             headerFooters.FirstPageFooter.Blocks.Add(footerParagraph)
             </code>
             </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooters"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooters.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooters"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooters"/>.
            The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooters.CloneItemsTo(Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooters)">
            <summary>
            Clones the items of this instance to the headerfooters.
            </summary>
            <param name="headerfooter">The headerfooter.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooters.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooter">
            <summary>
            Represents the HeaderFooter class.
            </summary>
            <example>
            <para>The following code example demonstrates how to define a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooter"/>.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:HeaderFooter&gt;
                &lt;RichTextBoxAdv:ParagraphAdv&gt;
                    &lt;RichTextBoxAdv:SpanAdv&gt;29 March 2016&lt;/RichTextBoxAdv:SpanAdv&gt;
                &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                &lt;!-- Defines any number of tables and paragraphs. --&gt;
            &lt;/RichTextBoxAdv:HeaderFooter&gt;
            </code>
            <code lang="C#">
            HeaderFooter header = new HeaderFooter();
            ParagraphAdv headerParagraph = new ParagraphAdv();
            SpanAdv headerSpan = new SpanAdv();
            headerSpan.Text = "29 March 2016";
            headerParagraph.Inlines.Add(headerSpan);
            header.Blocks.Add(headerParagraph);
            </code>
            <code lang="VB">
            Dim header As New HeaderFooter()
            Dim headerParagraph As New ParagraphAdv()
            Dim headerSpan As New SpanAdv()
            headerSpan.Text = "29 March 2016"
            headerParagraph.Inlines.Add(headerSpan)
            header.Blocks.Add(headerParagraph)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooter.Document">
            <summary>
            Gets the document.
            </summary>
            <value>
            The document.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooter.Section">
            <summary>
            Gets/sets the Section
            </summary>
            <value>
            The section.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooter.Blocks">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooter"/>.
            </summary>
            <returns>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooter"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooter.Type">
            <summary>
            Gets or sets the Header Footer type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooter.HeaderFooterTypeProperty">
            <summary>
            The header footer type property
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooter.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooter"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooter"/>.
            The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooters"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooter.CloneItemsTo(Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooter)">
            <summary>
            Clones the items of this instance to the headerfooter.
            </summary>
            <param name="headerfooter">The headerfooter.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooter.LayoutItems(Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer)">
            <summary>
            Layouts the items.
            </summary>
            <param name="viewer">The viewer.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooter.ClearWidgets">
            <summary>
            Clears the widgets.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooter.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline">
            <summary>
            An abstract class that provides a base for all inline elements in a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/> object.
            </summary>.
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.Length">
            <summary>
            Gets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.CharacterFormat">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.CharacterFormat"/>.
            </summary>
            <value>
            The instance of <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.CharacterFormat"/>.
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.CharacterFormat"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.Elements">
            <summary>
            Gets the elements.
            </summary>
            <value>
            The elements.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.OwnerParagraph">
            <summary>
            Gets the owner paragraph.
            </summary>
            <value>
            The owner paragraph.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.CharacterFormatProperty">
            <summary>
            Identifies the CharacterFormat dependency property.
            </summary>
            <returns>The identifier for the CharacterFormat dependency property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.OnCharacterFormatChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when character format changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.InsertText(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,System.String,System.Int32)">
            <summary>
            Inserts the text.
            </summary>
            <param name="selection">The selection.</param>
            <param name="text">The text.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.AddElementBox(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Adds the element box.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.GetPreviousWordOffset(System.Int32,System.Byte,System.Boolean,System.Boolean@,System.Boolean@,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the previous word offset.
            </summary>
            <param name="indexInInline">The index in inline.</param>
            <param name="type">The type.</param>
            <param name="isInField">if set to <c>true</c> [is in field].</param>
            <param name="isStarted">if set to <c>true</c> [is started].</param>
            <param name="endSelection">if set to <c>true</c> [end selection].</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.GetNextWordOffset(System.Int32,System.Byte,System.Boolean,System.Boolean@,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,System.Boolean)">
            <summary>
            Gets the next word offset.
            </summary>
            <param name="indexInInline">The index in inline.</param>
            <param name="type">The type.</param>
            <param name="isInField">if set to <c>true</c> [is in field].</param>
            <param name="endSelection">if set to <c>true</c> [end selection].</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.GetPreviousWordOffsetToProof(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID,System.Boolean,System.String@,System.Int32@,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline@)">
            <summary>
            Gets the previous word offset to proof.
            </summary>
            <param name="indexInInline"></param>
            <param name="languageID"></param>
            <param name="ignoreHyperlink">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="text"></param>
            <param name="indexInStartInline"></param>
            <param name="startInline"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.GetNextWordOffsetToProof(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID,System.Boolean,System.String@,System.Int32@,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline@)">
            <summary>
            Gets the next word offset to proof.
            </summary>
            <param name="indexInInline"></param>
            <param name="languageID"></param>
            <param name="ignoreHyperlink">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="text"></param>
            <param name="indexInEndInline"></param>
            <param name="endInline"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.GetText(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline,System.Int32,System.Boolean)">
            <summary>
            Gets the text.
            </summary>
            <param name="endParagraph"></param>
            <param name="endInline"></param>
            <param name="endIndex"></param>
            <param name="includeObject">If set to <see langword="true"/>, then ; otherwise, .</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.ValidateSelection(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Validates the selection.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.GetPreviousElementBox">
            <summary>
            Gets the previous element box.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.IsLastRenderedInline(System.Int32)">
            <summary>
            Determines whether the specified index is last rendered inline.
            </summary>
            <param name="index">The index.</param>
            <returns>
              <c>true</c> if the specified index is last rendered inline; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.ValidateTextPosition(System.Int32@)">
            <summary>
            Validates the text position.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.GetPreviousRenderedInline">
            <summary>
            Gets the previous rendered inline.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.GetNextRenderedInline">
            <summary>
            Gets the next rendered inline.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.GetPreviousValidInline">
            <summary>
            Gets the previous valid inline.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.GetNextValidInline">
            <summary>
            Gets the next valid inline.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.GetNextRenderedInline(System.Int32)">
            <summary>
            Gets the next rendered inline.
            </summary>
            <param name="indexInInline">The index in inline.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.IsExistBefore(Syncfusion.UI.Xaml.RichTextBoxAdv.Inline)">
            <summary>
            Determines whether this instance is exist before the specified inline.
            </summary>
            <param name="inline">The inline.</param>
            <returns>
              <c>true</c> if this instance is exist before the specified inline; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.IsExistAfter(Syncfusion.UI.Xaml.RichTextBoxAdv.Inline)">
            <summary>
            Determines whether this instance is exist after the specified inline.
            </summary>
            <param name="inline">The inline.</param>
            <returns>
              <c>true</c> if this instance is exist after the specified inline; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.InsertInline(Syncfusion.UI.Xaml.RichTextBoxAdv.Inline,System.Int32)">
            <summary>
            Inserts the inline.
            </summary>
            <param name="inline">The inline.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.GetPreviousTextInline">
            <summary>
            Gets the previous text inline.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.GetNextTextInline">
            <summary>
            Gets the next text inline.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.OnTextChanged">
            <summary>
            Called when the text is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.ClearElements(System.Boolean)">
            <summary>
            Clears the elements.
            </summary>
            <param name="dispose">Specifies whether dispose the elements object to null or not.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.GetElementBox(System.Int32@)">
            <summary>
            Gets the element box.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.GetElementBox(System.Int32@,System.Boolean)">
            <summary>
            Gets the element box.
            </summary>
            <param name="index">The index.</param>
            <param name="moveToNextLine">if set to <c>true</c> [move to next line].</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.IsEqualInStyle(Syncfusion.UI.Xaml.RichTextBoxAdv.Inline)">
            <summary>
            Determines whether the two inlines are equal in style.
            </summary>
            <param name="inline">The inline.</param>
            <returns>
              <c>true</c> if the two inlines are equal in style; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.GetPhysicalPosition(System.Int32)">
            <summary>
            Gets the physical position.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.GetPhysicalPosition(System.Int32,System.Boolean)">
            <summary>
            Gets the physical position.
            </summary>
            <param name="index">The index.</param>
            <param name="moveNextLine">if set to <c>true</c> [move next line].</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.GetFieldCharacterPosition">
            <summary>
            Gets the field character position.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.GetCaretHeight(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat,System.Boolean,System.Double@,System.Boolean@)">
            <summary>
            Gets the height of the caret.
            </summary>
            <param name="index">The index.</param>
            <param name="format">The format.</param>
            <param name="isEmptySelection">if set to <c>true</c> [is empty selection].</param>
            <param name="topMargin">The top margin.</param>
            <param name="isItalic">if set to <c>true</c> [is italic].</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.GetFieldCharacterHeight(Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat,System.Boolean,System.Double@,System.Boolean@)">
            <summary>
            Gets the height of the field character.
            </summary>
            <param name="format">The format.</param>
            <param name="isEmptySelection">if set to <c>true</c> [is empty selection].</param>
            <param name="topMargin">The top margin.</param>
            <param name="isItalic">if set to <c>true</c> [is italic].</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.GetLineWidget(System.Int32)">
            <summary>
            Gets the line widget.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.GetLineWidget(System.Int32,System.Boolean)">
            <summary>
            Gets the line widget.
            </summary>
            <param name="index">The index.</param>
            <param name="moveToNextLine">if set to <c>true</c> [move to next line].</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.ApplyCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,System.Int32,System.Int32,Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Applies the character format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.FormatInline(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,System.Int32,System.Int32,Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Formats the inline.
            </summary>
            <param name="selection">The selection.</param>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.RelayoutItems(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Relayouts the items.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.LayoutFieldCharacters(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Layouts the field characters.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.LayoutItems(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Layouts the items.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.AddElementToline(Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox,Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Adds the element to line.
            </summary>
            <param name="element">The element.</param>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.SplitTextElementWordByWord(Syncfusion.UI.Xaml.RichTextBoxAdv.TextElementBox,Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Splits the text element word by word.
            </summary>
            <param name="textElement">The text element.</param>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.SplitElementForClientArea(Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox,Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Splits the element for client area.
            </summary>
            <param name="element">The element.</param>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.SplitTextForClientArea(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer,Syncfusion.UI.Xaml.RichTextBoxAdv.TextElementBox,System.String@,System.Double,Windows.UI.Xaml.Media.FontFamily,Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment,System.Boolean,System.Boolean,System.Double@)">
            <summary>
            Splits the text for client area.
            </summary>
            <param name="viewer">The viewer.</param>
            <param name="element">The element.</param>
            <param name="fontSize">Size of the font.</param>
            <param name="fontFamily">The font family.</param>
            <param name="baselineAlignment">The baseline alignment.</param>
            <param name="isBold">if set to <c>true</c> [is bold].</param>
            <param name="isItalic">if set to <c>true</c> [is italic].</param>
            <param name="width">The width.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.GetPreviousInline(Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox)">
            <summary>
            Gets the previous inline.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.CheckPreviousElement(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Checks the previous element.
            </summary>
            <param name="viewer">The viewer.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.SplitByWord(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer,Syncfusion.UI.Xaml.RichTextBoxAdv.TextElementBox,System.String@,System.Double,Windows.UI.Xaml.Media.FontFamily,Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment,System.Boolean,System.Boolean,System.Double@)">
            <summary>
            Splits the text by word.
            </summary>
            <param name="viewer">The viewer.</param>
            <param name="textElement">The text element.</param>
            <param name="text">The text.</param>
            <param name="fontSize">Size of the font.</param>
            <param name="fontFamily">The font family.</param>
            <param name="baselineAlignment">The baseline alignment.</param>
            <param name="isBold">if set to <c>true</c> [is bold].</param>
            <param name="isItalic">if set to <c>true</c> [is italic].</param>
            <param name="width">The width.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.SplitByCharacter(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer,Syncfusion.UI.Xaml.RichTextBoxAdv.TextElementBox,System.String@,System.Double,Windows.UI.Xaml.Media.FontFamily,Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment,System.Boolean,System.Boolean,System.Double@)">
            <summary>
            Splits the text by character.
            </summary>
            <param name="viewer">The viewer.</param>
            <param name="textElement">The text element.</param>
            <param name="text">The text.</param>
            <param name="fontSize">Size of the font.</param>
            <param name="fontFamily">The font family.</param>
            <param name="baselineAlignment">The baseline alignment.</param>
            <param name="isBold">if set to <c>true</c> [is bold].</param>
            <param name="isItalic">if set to <c>true</c> [is italic].</param>
            <param name="width">The width.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.IsParagraphFirstLine(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv)">
            <summary>
            Determines whether this instance is in first line of paragraph.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <returns>
              <c>true</c> if this instance is in first line of paragraph; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.IsParagraphLastLine(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer,Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv)">
            <summary>
            Determines whether this instance is in last line of paragraph.
            </summary>
            <param name="viewer">The viewer.</param>
            <param name="paragraph">The paragraph.</param>
            <returns>
              <c>true</c> if this instance is in last line of paragraph; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.MoveToNextLine(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Moves to next line.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.AlignLineElements(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer,Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox,System.Double@,System.Double@,System.Boolean@,System.Double,System.Double,Windows.UI.Xaml.TextAlignment,System.Int32,System.Boolean)">
            <summary>
            Aligns the text elements.
            </summary>
            <param name="viewer">The viewer.</param>
            <param name="element">The element.</param>
            <param name="topMargin">The top margin.</param>
            <param name="bottomMargin">The bottom margin.</param>
            <param name="addSubWidth">if set to <c>true</c> add sub width.</param>
            <param name="subWidth">Width of the sub.</param>
            <param name="maxDescent">The max descent.</param>
            <param name="textAlignment">The text alignment.</param>
            <param name="whiteSpaceCount">The white space count.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.GetSubWidth(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer,System.Boolean,System.Int32@,System.Double)">
            <summary>
            Gets the width of the sub.
            </summary>
            <param name="viewer">The viewer.</param>
            <param name="justify">if set to <c>true</c> [justify].</param>
            <param name="spaceCount">The space count.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.Find(System.Text.RegularExpressions.Regex,Syncfusion.UI.Xaml.RichTextBoxAdv.FindOptions,System.Int32,System.Boolean,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults)">
            <summary>
            Finds the specified pattern.
            </summary>
            <param name="pattern">The pattern.</param>
            <param name="option">The option.</param>
            <param name="endInline">The end inline.</param>
            <param name="indexInInline">The index in inline.</param>
            <param name="isFirstMatch">if set to <c>true</c> [is first match].</param>
            <param name="selectionEnd">The selection end.</param>
            <param name="results">The results.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.FindProofingErrors(System.Boolean,System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker)">
            <summary>
            Finds the proofing errors.
            </summary>
            <param name="wholeDocument">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="indexInInline"></param>
            <param name="SpellErrorPositions"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Inline.UpdateProofingErrors(Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker)">
            <summary>
            Updates the proofing error collection
            </summary>
            <param name="spellChecker">the spellchecker object</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv">
             <summary>
             Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv"/> class.
             </summary>
             <example>
             <para>The following code example demonstrates how to add a span.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:ParagraphAdv&gt;
                 &lt;!-- Add the span. --&gt; 
                 &lt;RichTextBoxAdv:SpanAdv&gt;Hello World.&lt;/RichTextBoxAdv:SpanAdv&gt;
                 &lt;!-- You can add any number of spans, images, comments and hyperlink fields here. --&gt; 
             &lt;/RichTextBoxAdv:ParagraphAdv&gt;
             </code>
             <code lang="C#">
             ParagraphAdv paragraph = new ParagraphAdv();
             
             // Add the span.
             SpanAdv span = new SpanAdv();
             span.Text = "Hello world.";
             paragraph.Inlines.Add(span);
             
             // You can add any number of spans, images, comments and hyperlink fields here.
             </code>
             <code lang="VB">
             Dim paragraph As New ParagraphAdv()
            
             ' Add the span.
             Dim span As New SpanAdv()
             span.Text = "Hello world."
             paragraph.Inlines.Add(span)
            
             ' You can add any number of spans, images, comments and hyperlink fields here.
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv.Text">
            <summary>
            Gets or sets the text of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv"/>.
            </summary>
            <value>
            The text of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv.Length">
            <summary>
            Gets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv.GetPreviousWordOffset(System.Int32,System.Byte,System.Boolean,System.Boolean@,System.Boolean@,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the previous word offset.
            </summary>
            <param name="indexInInline">The index in inline.</param>
            <param name="type">The type.</param>
            <param name="isInField">if set to <c>true</c> [is in field].</param>
            <param name="isStarted">if set to <c>true</c> [is started].</param>
            <param name="endSelection">if set to <c>true</c> [end selection].</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv.GetNextWordOffset(System.Int32,System.Byte,System.Boolean,System.Boolean@,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,System.Boolean)">
            <summary>
            Gets the next word offset.
            </summary>
            <param name="indexInInline">The index in inline.</param>
            <param name="type">The type.</param>
            <param name="isInField">if set to <c>true</c> [is in field].</param>
            <param name="endSelection">if set to <c>true</c> [end selection].</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv.GetPreviousWordOffsetToProof(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID,System.Boolean,System.String@,System.Int32@,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline@)">
            <summary>
            Gets the previous word offset to proof.
            </summary>
            <param name="indexInInline"></param>
            <param name="languageID"></param>
            <param name="ignoreHyperlink">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="text"></param>
            <param name="indexInStartInline"></param>
            <param name="startInline"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv.GetNextWordOffsetToProof(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID,System.Boolean,System.String@,System.Int32@,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline@)">
            <summary>
            Gets the next word offset to proof.
            </summary>
            <param name="indexInInline"></param>
            <param name="languageID"></param>
            <param name="ignoreHyperlink">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="text"></param>
            <param name="indexInEndInline"></param>
            <param name="endInline"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv.AddElementBox(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Adds the element box.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv.InsertText(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,System.String,System.Int32)">
            <summary>
            Inserts the text.
            </summary>
            <param name="selection">The selection.</param>
            <param name="text">The text.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv.SplitByTab(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Splits the by tab.
            </summary>
            <param name="viewer">TheLayout viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv.SplitByBreakCharacter(Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv,System.String,Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv)">
            <summary>
            Splits the by BreakCharacter.
            </summary>
            <param name="BreakCharacter">The BreakCharacter</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpanAdv.SplitByLineBreakCharacter(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Splits the by LineBreakCharacter.
            </summary>
            <param name="viewer">TheLayout viewer.</param>
            <param name="LineBreakCharacter">The LineBreakCharacter</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.UIContainerAdv">
            <summary>
            Represents the UIContainer class.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.UIContainerAdv.Length">
            <summary>
            Gets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.UIContainerAdv.UIElement">
            <summary>
            Gets or Sets the UIelement.
            </summary>
            <value>
            The UI element.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.UIContainerAdv.Width">
            <summary>
            Gets or Sets the width of the UIelement.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.UIContainerAdv.Height">
            <summary>
            Gets or Sets the height of the UIelement.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.UIContainerAdv.WidthProperty">
            <summary>
            Identifies the Width dependency property.
            </summary>
            <returns>The identifier for the Width dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.UIContainerAdv.HeightProperty">
            <summary>
            Identifies the Height dependency property.
            </summary>
            <returns>The identifier for the Height dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.UIContainerAdv.UIElementProperty">
            <summary>
            Identifies the UIElement dependency property.
            </summary>
            <returns>The identifier for the UIElement dependency property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UIContainerAdv.OnWidthChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when width changed.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UIContainerAdv.OnHeightChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when height of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv"/> is changed.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UIContainerAdv.OnUIElementChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when UI element changed.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UIContainerAdv.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.UIContainerAdv"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UIContainerAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.UIContainerAdv"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UIContainerAdv.OnUIElementChanged(Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:UIElementChanged" /> event.
            </summary>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UIContainerAdv.AddElementBox(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Adds the element box.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UIContainerAdv.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UIContainerAdv.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UIContainerAdv.InsertText(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,System.String,System.Int32)">
            <summary>
            Inserts the text.
            </summary>
            <param name="selection">The selection.</param>
            <param name="text">The text.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UIContainerAdv.GetPreviousWordOffset(System.Int32,System.Byte,System.Boolean,System.Boolean@,System.Boolean@,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the previous word offset.
            </summary>
            <param name="indexInInline">The index in inline.</param>
            <param name="type">The type.</param>
            <param name="isInField">if set to <c>true</c> [is in field].</param>
            <param name="isStarted">if set to <c>true</c> [is started].</param>
            <param name="endSelection">if set to <c>true</c> [end selection].</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UIContainerAdv.GetNextWordOffset(System.Int32,System.Byte,System.Boolean,System.Boolean@,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,System.Boolean)">
            <summary>
            Gets the next word offset.
            </summary>
            <param name="indexInInline">The index in inline.</param>
            <param name="type">if set to <c>true</c> [is navigation].</param>
            <param name="isInField">if set to <c>true</c> [is in field].</param>
            <param name="endSelection">if set to <c>true</c> [end selection].</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UIContainerAdv.GetPreviousWordOffsetToProof(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID,System.Boolean,System.String@,System.Int32@,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline@)">
            <summary>
            Gets the previous word offset to proof.
            </summary>
            <param name="indexInInline"></param>
            <param name="languageID"></param>
            <param name="ignoreHyperlink">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="text"></param>
            <param name="indexInStartInline"></param>
            <param name="startInline"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UIContainerAdv.GetNextWordOffsetToProof(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID,System.Boolean,System.String@,System.Int32@,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline@)">
            <summary>
            Gets the next word offset to proof.
            </summary>
            <param name="indexInInline"></param>
            <param name="languageID"></param>
            <param name="ignoreHyperlink">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="text"></param>
            <param name="indexInEndInline"></param>
            <param name="endInline"></param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldCharacterAdv">
            <summary>
            Represents the base class for FieldCharacterAdv.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldCharacterAdv.Length">
            <summary>
            Gets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldCharacterAdv.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldCharacterAdv"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldCharacterAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldCharacterAdv"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv"/>. The value can be null or an instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldCharacterAdv.AddElementBox(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Adds the element box.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldCharacterAdv.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldCharacterAdv.GetLayoutViewer">
            <summary>
            Gets the layout viewer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldCharacterAdv.RemoveAfterLinking">
            <summary>
            Removes the after linking.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldCharacterAdv.GetRenderedInline(System.Int32@)">
            <summary>
            Gets the rendered inline.
            </summary>
            <param name="inlineIndex">Index of the inline.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv">
             <summary>
             Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv"/> class.
             </summary>
             <example>
             <para>The following code example demonstrates how to add a field.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:ParagraphAdv&gt;
                 &lt;!-- Add any number of inlines. --&gt; 
                 &lt;RichTextBoxAdv:FieldBeginAdv /&gt;
                 &lt;!-- Define the field code --&gt; 
                 &lt;RichTextBoxAdv:SpanAdv Text=" HYPERLINK &amp;quot;http://www.google.com&amp;quot; " /&gt;
                 &lt;RichTextBoxAdv:FieldSeparatorAdv/&gt;
                 &lt;!-- Add inlines for the paragragraph. --&gt; 
                 &lt;!-- Define the field result. --&gt; 
                 &lt;RichTextBoxAdv:SpanAdv Text="Google" &gt;
                     &lt;RichTextBoxAdv:SpanAdv.CharacterFormat&gt;
                         &lt;RichTextBoxAdv:CharacterFormat Underline="Single" FontColor="#ff0563c1"/&gt;
                     &lt;/RichTextBoxAdv:SpanAdv.CharacterFormat&gt;
                 &lt;/RichTextBoxAdv:SpanAdv&gt;
                 &lt;RichTextBoxAdv:FieldEndAdv/&gt;
                 &lt;!-- Add any number of inlines. --&gt; 
             &lt;/RichTextBoxAdv:ParagraphAdv&gt;
             </code>
             <code lang="C#">
             ParagraphAdv paragraph = new ParagraphAdv();
             
             // Adds the field begin.
             FieldBeginAdv fieldBegin = new FieldBeginAdv();
             paragraph.Inlines.Add(fieldBegin);
             
             // Defines the field code
             SpanAdv fieldCode = new SpanAdv();
             fieldCode.Text = " HYPERLINK \"http://www.google.com\" ";
             paragraph.Inlines.Add(fieldCode);
             
             // Adds the field separator.
             FieldSeparatorAdv fieldSeparatorAdv = new FieldSeparatorAdv();
             paragraph.Inlines.Add(fieldSeparatorAdv);
             
             // Defines the field result.
             SpanAdv span = new SpanAdv();
             span.Text = "Google";
             span.CharacterFormat.Underline = Underline.Single;
             span.CharacterFormat.FontColor = Color.FromArgb(0xff, 0x05, 0x63, 0xc1);
             paragraph.Inlines.Add(span);
             
             // Adds the field end.
             FieldEndAdv fieldEndAdv = new FieldEndAdv();
             paragraph.Inlines.Add(fieldEndAdv);
             </code>
             <code lang="VB">
             Dim paragraph As New ParagraphAdv()
            
             ' Adds the field begin.
             Dim fieldBeginAdv As New FieldBeginAdv()
             paragraph.Inlines.Add(fieldBeginAdv)
            
             ' Adds the field code.
             Dim fieldCode As New SpanAdv()
             fieldCode.Text = " HYPERLINK \"http://www.google.com\" "
             paragraph.Inlines.Add(fieldCode)
            
             ' Adds the comment start.
             Dim fieldSeparatorAdv As New FieldSeparatorAdv()
             paragraph.Inlines.Add(fieldSeparatorAdv)
             
             ' Adds the comment.
             Dim span As New SpanAdv()
             span.Text = "Google"
             span.CharacterFormat.Underline = Underline.Single
             span.CharacterFormat.FontColor = Color.FromArgb(&amp;Hff, &amp;H5, &amp;H63, &amp;Hc1)
             paragraph.Inlines.Add(span)
             
             ' Defines the field end.
             Dim fieldEndAdv As New FieldEndAdv()
             paragraph.Inlines.Add(fieldEndAdv)
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv.FieldSeparator">
            <summary>
            Gets or sets the field separator.
            </summary>
            <value>
            The field separator.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv.FieldEnd">
            <summary>
            Gets or sets the field end.
            </summary>
            <value>
            The field end.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv"/>. The value can be null or an instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv.InsertText(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,System.String,System.Int32)">
            <summary>
            Inserts the text.
            </summary>
            <param name="selection">The selection.</param>
            <param name="text">The text.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv.IsUnlinkFieldCharacters(System.String)">
            <summary>
            Determines whether to unlink field characters.
            </summary>
            <param name="compositeNodeIndex">Index of the composite node.</param>
            <returns>
              <c>true</c> if unlink field characters; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv.UnlinkFieldCharacter(System.String,System.Boolean)">
            <summary>
            Unlinks the field character.
            </summary>
            <param name="compositeNodeIndex">Index of the composite node.</param>
            <param name="isAddToFieldCharacters">if set to <c>true</c> [is add to field characters].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv.CheckUnlinkFieldCharacter(System.String,System.Boolean)">
            <summary>
            Checks the unlink field character.
            </summary>
            <param name="compositeNodeIndex">Index of the composite node.</param>
            <param name="isCheckFieldCharacters">if set to <c>true</c> [is check field characters].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv.GetPreviousWordOffset(System.Int32,System.Byte,System.Boolean,System.Boolean@,System.Boolean@,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the previous word offset.
            </summary>
            <param name="indexInInline">The index in inline.</param>
            <param name="type">The type.</param>
            <param name="isInField">if set to <c>true</c> [is in field].</param>
            <param name="isStarted">if set to <c>true</c> [is started].</param>
            <param name="endSelection">if set to <c>true</c> [end selection].</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv.GetNextWordOffset(System.Int32,System.Byte,System.Boolean,System.Boolean@,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,System.Boolean)">
            <summary>
            Gets the next word offset.
            </summary>
            <param name="indexInInline">The index in inline.</param>
            <param name="type">if set to <c>true</c> [is navigation].</param>
            <param name="isInField">if set to <c>true</c> [is in field].</param>
            <param name="endSelection">if set to <c>true</c> [end selection].</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv.GetPreviousWordOffsetToProof(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID,System.Boolean,System.String@,System.Int32@,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline@)">
            <summary>
            Gets the previous word offset to proof.
            </summary>
            <param name="indexInInline"></param>
            <param name="languageID"></param>
            <param name="ignoreHyperlink">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="text"></param>
            <param name="indexInStartInline"></param>
            <param name="startInline"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv.GetNextWordOffsetToProof(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID,System.Boolean,System.String@,System.Int32@,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline@)">
            <summary>
            Gets the next word offset to proof.
            </summary>
            <param name="indexInInline"></param>
            <param name="languageID"></param>
            <param name="ignoreHyperlink">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="text"></param>
            <param name="indexInEndInline"></param>
            <param name="endInline"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv.GetRenderedField">
            <summary>
            Gets the rendered field.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv.AddToLinkedFields">
            <summary>
            Adds to linked fields.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv.GetFieldCode">
            <summary>
            Gets the field code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv.InlineIsInFieldResult(Syncfusion.UI.Xaml.RichTextBoxAdv.Inline)">
            <summary>
            Inlines the is in field result.
            </summary>
            <param name="inline">The inline.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv.ParagraphIsInFieldResult(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv)">
            <summary>
            Paragraphes the is in field result.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldSeparatorAdv">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldSeparatorAdv"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldSeparatorAdv.FieldBegin">
            <summary>
            Gets or sets the field begin.
            </summary>
            <value>
            The field begin.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldSeparatorAdv.FieldEnd">
            <summary>
            Gets or sets the field end.
            </summary>
            <value>
            The field end.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldSeparatorAdv.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldSeparatorAdv"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldSeparatorAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldSeparatorAdv"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv"/>. The value can be null or an instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldSeparatorAdv.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldSeparatorAdv.InsertText(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,System.String,System.Int32)">
            <summary>
            Inserts the text.
            </summary>
            <param name="selection">The selection.</param>
            <param name="text">The text.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldSeparatorAdv.IsLinkedFieldCharacter">
            <summary>
            Determines whether this instance is linked field character.
            </summary>
            <returns>
              <c>true</c> if this instance is linked field character; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldSeparatorAdv.UnlinkFieldCharacter(System.String,System.Boolean)">
            <summary>
            Unlinks the field character.
            </summary>
            <param name="compositeNodeIndex">Index of the composite node.</param>
            <param name="isAddToFieldCharacters">if set to <c>true</c> [is add to field characters].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldSeparatorAdv.CheckUnlinkFieldCharacter(System.String,System.Boolean)">
            <summary>
            Checks the unlink field character.
            </summary>
            <param name="compositeNodeIndex">Index of the composite node.</param>
            <param name="isCheckFieldCharacters">if set to <c>true</c> [is check field characters].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldSeparatorAdv.GetPreviousWordOffset(System.Int32,System.Byte,System.Boolean,System.Boolean@,System.Boolean@,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the previous word offset.
            </summary>
            <param name="indexInInline">The index in inline.</param>
            <param name="type">The type.</param>
            <param name="isInField">if set to <c>true</c> [is in field].</param>
            <param name="isStarted">if set to <c>true</c> [is started].</param>
            <param name="endSelection">if set to <c>true</c> [end selection].</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldSeparatorAdv.GetNextWordOffset(System.Int32,System.Byte,System.Boolean,System.Boolean@,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,System.Boolean)">
            <summary>
            Gets the next word offset.
            </summary>
            <param name="indexInInline">The index in inline.</param>
            <param name="type">if set to <c>true</c> [is navigation].</param>
            <param name="isInField">if set to <c>true</c> [is in field].</param>
            <param name="endSelection">if set to <c>true</c> [end selection].</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldSeparatorAdv.GetPreviousWordOffsetToProof(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID,System.Boolean,System.String@,System.Int32@,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline@)">
            <summary>
            Gets the previous word offset to proof.
            </summary>
            <param name="indexInInline"></param>
            <param name="languageID"></param>
            <param name="ignoreHyperlink">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="text"></param>
            <param name="indexInStartInline"></param>
            <param name="startInline"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldSeparatorAdv.GetNextWordOffsetToProof(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID,System.Boolean,System.String@,System.Int32@,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline@)">
            <summary>
            Gets the next word offset to proof.
            </summary>
            <param name="indexInInline"></param>
            <param name="languageID"></param>
            <param name="ignoreHyperlink">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="text"></param>
            <param name="indexInEndInline"></param>
            <param name="endInline"></param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldEndAdv">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldEndAdv"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldEndAdv.FieldBegin">
            <summary>
            Gets or sets the field begin.
            </summary>
            <value>
            The field begin.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldEndAdv.FieldSeparator">
            <summary>
            Gets or sets the field separator.
            </summary>
            <value>
            The field separator.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldEndAdv.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldEndAdv"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldEndAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldEndAdv"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv"/>. The value can be null or an instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldEndAdv.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldEndAdv.InsertText(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,System.String,System.Int32)">
            <summary>
            Inserts the text.
            </summary>
            <param name="selection">The selection.</param>
            <param name="text">The text.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldEndAdv.IsLinkedFieldCharacter">
            <summary>
            Determines whether this instance is linked field character.
            </summary>
            <returns>
              <c>true</c> if this instance is linked field character; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldEndAdv.UnlinkFieldCharacter(System.String,System.Boolean)">
            <summary>
            Unlinks the field character.
            </summary>
            <param name="compositeNodeIndex">Index of the composite node.</param>
            <param name="isAddToFieldCharacters">if set to <c>true</c> [is add to field characters].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldEndAdv.CheckUnlinkFieldCharacter(System.String,System.Boolean)">
            <summary>
            Checks the unlink field character.
            </summary>
            <param name="compositeNodeIndex">Index of the composite node.</param>
            <param name="isCheckFieldCharacters">if set to <c>true</c> [is check field characters].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldEndAdv.GetPreviousWordOffset(System.Int32,System.Byte,System.Boolean,System.Boolean@,System.Boolean@,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the previous word offset.
            </summary>
            <param name="indexInInline">The index in inline.</param>
            <param name="type">The type.</param>
            <param name="isInField">if set to <c>true</c> [is in field].</param>
            <param name="isStarted">if set to <c>true</c> [is started].</param>
            <param name="endSelection">if set to <c>true</c> [end selection].</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldEndAdv.GetNextWordOffset(System.Int32,System.Byte,System.Boolean,System.Boolean@,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,System.Boolean)">
            <summary>
            Gets the next word offset.
            </summary>
            <param name="indexInInline">The index in inline.</param>
            <param name="type">if set to <c>true</c> [is navigation].</param>
            <param name="isInField">if set to <c>true</c> [is in field].</param>
            <param name="endSelection">if set to <c>true</c> [end selection].</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldEndAdv.GetPreviousWordOffsetToProof(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID,System.Boolean,System.String@,System.Int32@,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline@)">
            <summary>
            Gets the previous word offset to proof.
            </summary>
            <param name="indexInInline"></param>
            <param name="languageID"></param>
            <param name="ignoreHyperlink">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="text"></param>
            <param name="indexInStartInline"></param>
            <param name="startInline"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldEndAdv.GetNextWordOffsetToProof(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID,System.Boolean,System.String@,System.Int32@,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline@)">
            <summary>
            Gets the next word offset to proof.
            </summary>
            <param name="indexInInline"></param>
            <param name="languageID"></param>
            <param name="ignoreHyperlink">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="text"></param>
            <param name="indexInEndInline"></param>
            <param name="endInline"></param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv">
             <summary>
             Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv"/> class.
             </summary>
             <example>
             <para>The following code example demonstrates how to add an image.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:ParagraphAdv&gt;
                 &lt;!-- Adds the image. --&gt; 
                 &lt;RichTextBoxAdv:ImageContainerAdv ImageString="/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAARAA0DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9LP8Agqv/AMFg7X/gmZ4k8HaXb/Dy/wDiNc6xaXOv+Ihaaslh/wAIroNtPbQT6k4MUhl/eXKKkQC7yr/MMV9k6ZqdvrWm295aTR3FrdxLNDLG25JUYAqwPcEEEV+XH7Vn/BJn9o/9v39uH4+eMD8VrP4EeBfEPhy3+GWj2tx4R0zxbL4r8PGEy3b5e5DWKvdyzEY2TH5SduxSfrn/AIJEeBPix8JP+CfngDwV8adJbSvHnga2k8PTOdQgvl1G0tpGis7lZIZHGHtxFwxDgg7lFGH96heekt/k3LTtpHk0+LmlO6tHQr6VUoax2fqkvn8XOrr3LKFneV5fStFFFAH/2Q=="
                     Width="100" Height="200" /&gt;
                 &lt;!-- You can add any number of spans, images, comments and hyperlink fields here. --&gt; 
             &lt;/RichTextBoxAdv:ParagraphAdv&gt;
             </code>
             <code lang="C#">
             ParagraphAdv paragraph = new ParagraphAdv();
             
             // Adds the image.
             ImageContainerAdv imageContainerAdv = new ImageContainerAdv();
             imageContainerAdv.ImageString = "/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAARAA0DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9LP8Agqv/AMFg7X/gmZ4k8HaXb/Dy/wDiNc6xaXOv+Ihaaslh/wAIroNtPbQT6k4MUhl/eXKKkQC7yr/MMV9k6ZqdvrWm295aTR3FrdxLNDLG25JUYAqwPcEEEV+XH7Vn/BJn9o/9v39uH4+eMD8VrP4EeBfEPhy3+GWj2tx4R0zxbL4r8PGEy3b5e5DWKvdyzEY2TH5SduxSfrn/AIJEeBPix8JP+CfngDwV8adJbSvHnga2k8PTOdQgvl1G0tpGis7lZIZHGHtxFwxDgg7lFGH96heekt/k3LTtpHk0+LmlO6tHQr6VUoax2fqkvn8XOrr3LKFneV5fStFFFAH/2Q==";
             imageContainerAdv.Width = 100;
             imageContainerAdv.Height = 200;
             paragraph.Inlines.Add(imageContainerAdv);
             // You can add any number of spans, images, comments and hyperlink fields here.
             </code>
             <code lang="VB">
             Dim paragraph As New ParagraphAdv()
            
             ' Adds the image.
             Dim imageContainerAdv As New ImageContainerAdv()
             imageContainerAdv.ImageString = "/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAARAA0DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9LP8Agqv/AMFg7X/gmZ4k8HaXb/Dy/wDiNc6xaXOv+Ihaaslh/wAIroNtPbQT6k4MUhl/eXKKkQC7yr/MMV9k6ZqdvrWm295aTR3FrdxLNDLG25JUYAqwPcEEEV+XH7Vn/BJn9o/9v39uH4+eMD8VrP4EeBfEPhy3+GWj2tx4R0zxbL4r8PGEy3b5e5DWKvdyzEY2TH5SduxSfrn/AIJEeBPix8JP+CfngDwV8adJbSvHnga2k8PTOdQgvl1G0tpGis7lZIZHGHtxFwxDgg7lFGH96heekt/k3LTtpHk0+LmlO6tHQr6VUoax2fqkvn8XOrr3LKFneV5fStFFFAH/2Q=="
             imageContainerAdv.Width = 100
             imageContainerAdv.Height = 200
             paragraph.Inlines.Add(imageContainerAdv)
             ' You can add any number of spans, images, comments and hyperlink fields here.
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.Length">
            <summary>
            Gets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.Width">
            <summary>
            Gets or Sets the width of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv"/>.
            </summary>
            <value>
            The width of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.Height">
            <summary>
            Gets or Sets the height of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv"/>.
            </summary>
            <value>
            The height of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.ImageBytes">
            <summary>
            Gets or sets the image bytes.
            </summary>
            <value>
            The image bytes.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.ImageSource">
            <summary>
            Gets or Sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.ImageSource"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.ImageSource"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.ImageString">
            <summary>
            Gets or sets the string of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv"/>.
            </summary>
            <value>
            The string of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv"/>.
            </value>
            <remarks>The value can be Base64 string of an image.</remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.ImageSourceProperty">
            <summary>
            Identifies the ImageSource dependency property.
            </summary>
            <returns>The identifier for the ImageSource dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.ImageStringProperty">
            <summary>
            Identifies the ImageString dependency property.
            </summary>
            <returns>The identifier for the ImageString dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.WidthProperty">
            <summary>
            Identifies the Width dependency property.
            </summary>
            <returns>The identifier for the Width dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.HeightProperty">
            <summary>
            Identifies the Height dependency property.
            </summary>
            <returns>The identifier for the Height dependency property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.OnImageStringChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when image string changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.OnImageSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when image source changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.OnWidthChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when width of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv"/> is changed.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.OnHeightChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when height changed.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.AddElementBox(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Adds the element box.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.InsertText(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,System.String,System.Int32)">
            <summary>
            Inserts the text.
            </summary>
            <param name="selection">The selection.</param>
            <param name="text">The text.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.GetPreviousWordOffset(System.Int32,System.Byte,System.Boolean,System.Boolean@,System.Boolean@,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the previous word offset.
            </summary>
            <param name="indexInInline">The index in inline.</param>
            <param name="type">The type.</param>
            <param name="isInField">if set to <c>true</c> [is in field].</param>
            <param name="isStarted">if set to <c>true</c> [is started].</param>
            <param name="endSelection">if set to <c>true</c> [end selection].</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.GetNextWordOffset(System.Int32,System.Byte,System.Boolean,System.Boolean@,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,System.Boolean)">
            <summary>
            Gets the next word offset.
            </summary>
            <param name="indexInInline">The index in inline.</param>
            <param name="type">if set to <c>true</c> [is navigation].</param>
            <param name="isInField">if set to <c>true</c> [is in field].</param>
            <param name="endSelection">if set to <c>true</c> [end selection].</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.GetPreviousWordOffsetToProof(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID,System.Boolean,System.String@,System.Int32@,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline@)">
            <summary>
            Gets the previous word offset to proof.
            </summary>
            <param name="indexInInline"></param>
            <param name="languageID"></param>
            <param name="ignoreHyperlink">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="text"></param>
            <param name="indexInStartInline"></param>
            <param name="startInline"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv.GetNextWordOffsetToProof(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID,System.Boolean,System.String@,System.Int32@,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline@)">
            <summary>
            Gets the next word offset to proof.
            </summary>
            <param name="indexInInline"></param>
            <param name="languageID"></param>
            <param name="ignoreHyperlink">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="text"></param>
            <param name="indexInEndInline"></param>
            <param name="endInline"></param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentCharacterAdv">
            <summary>
            Provides the base implementation for all the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentCharacterAdv"/> classes.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentCharacterAdv.CommentID">
            <summary>
            Gets or sets the identifier of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>.
            </summary>
            <value>
            The ID that uniquely identifies the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentCharacterAdv.Length">
            <summary>
            Gets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentCharacterAdv.CommentIDProperty">
            <summary>
            Identifies the CommentID dependency property.
            </summary>
            <returns>The identifier for the CommentID dependency property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentCharacterAdv.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentCharacterAdv"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentCharacterAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentCharacterAdv"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentCharacterAdv.InsertText(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,System.String,System.Int32)">
            <summary>
            Inserts the text.
            </summary>
            <param name="selection">The selection.</param>
            <param name="text">The text.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentCharacterAdv.AddElementBox(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Adds the element box.
            </summary>
            <param name="viewer"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentCharacterAdv.GetPreviousWordOffset(System.Int32,System.Byte,System.Boolean,System.Boolean@,System.Boolean@,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the previous word offset.
            </summary>
            <param name="indexInInline">The index in inline.</param>
            <param name="type">The type.</param>
            <param name="isInField">if set to <c>true</c> [is in field].</param>
            <param name="isStarted">if set to <c>true</c> [is started].</param>
            <param name="endSelection">if set to <c>true</c> [end selection].</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentCharacterAdv.GetNextWordOffset(System.Int32,System.Byte,System.Boolean,System.Boolean@,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,System.Boolean)">
            <summary>
            Gets the next word offset.
            </summary>
            <param name="indexInInline">The index in inline.</param>
            <param name="type">The type.</param>
            <param name="isInField">if set to <c>true</c> [is in field].</param>
            <param name="endSelection">if set to <c>true</c> [end selection].</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentCharacterAdv.GetPreviousWordOffsetToProof(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID,System.Boolean,System.String@,System.Int32@,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline@)">
            <summary>
            Gets the previous word offset to proof.
            </summary>
            <param name="indexInInline"></param>
            <param name="languageID"></param>
            <param name="ignoreHyperlink">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="text"></param>
            <param name="indexInStartInline"></param>
            <param name="startInline"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentCharacterAdv.GetNextWordOffsetToProof(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID,System.Boolean,System.String@,System.Int32@,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline@)">
            <summary>
            Gets the next word offset to proof.
            </summary>
            <param name="indexInInline"></param>
            <param name="languageID"></param>
            <param name="ignoreHyperlink">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="text"></param>
            <param name="indexInEndInline"></param>
            <param name="endInline"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentCharacterAdv.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentCharacterAdv.GetCommentVisualStyle">
            <summary>
            Gets the comment visual style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentCharacterAdv.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentStartAdv">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentStartAdv"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentStartAdv.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
            <value>
            The comment.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentStartAdv.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentStartAdv"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentStartAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentStartAdv"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentStartAdv"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentStartAdv.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentStartAdv.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentEndAdv">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentEndAdv"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentEndAdv.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
            <value>
            The comment.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentEndAdv.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentEndAdv"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentEndAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentEndAdv"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentEndAdv"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentEndAdv.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentEndAdv.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv">
             <summary>
             Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/> class.
             </summary>
             <example>
             <para>The following code example demonstrates how to add a comment.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:ParagraphAdv&gt;
                 &lt;!-- Add any number of inlines. --&gt; 
                 &lt;RichTextBoxAdv:CommentStartAdv CommentID="6" /&gt;
                 &lt;RichTextBoxAdv:SpanAdv&gt;Hello World.&lt;/RichTextBoxAdv:SpanAdv&gt;
                 &lt;!-- Add any number of inlines. --&gt; 
                 &lt;RichTextBoxAdv:CommentEndAdv CommentID="6"/&gt;
                 &lt;!-- Add inlines for the paragragraph. --&gt; 
                 &lt;!-- Adds the comment. --&gt; 
                 &lt;RichTextBoxAdv:CommentAdv CommentID="6" Author="Peter" Initial="F"&gt;
                     &lt;!-- Add the blocks of the comment. --&gt; 
                     &lt;RichTextBoxAdv:ParagraphAdv&gt;
                         &lt;RichTextBoxAdv:SpanAdv&gt;A comment.&lt;/RichTextBoxAdv:SpanAdv&gt;
                     &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                 &lt;/RichTextBoxAdv:CommentAdv&gt;
                 &lt;!-- Add any number of inlines. --&gt; 
             &lt;/RichTextBoxAdv:ParagraphAdv&gt;
             </code>
             <code lang="C#">
             ParagraphAdv paragraph = new ParagraphAdv();
             
             // Adds the comment start.
             CommentStartAdv commentStart = new CommentStartAdv();
             commentStart.CommentID = 6;
             paragraph.Inlines.Add(commentStart);
             
             // Adds the content to be commented.
             SpanAdv span = new SpanAdv();
             span.Text = "Hello world.";
             paragraph.Inlines.Add(span);
             
             // Adds the comment end.
             CommentEndAdv commentEnd = new CommentEndAdv();
             commentEnd.CommentID = 6;
             paragraph.Inlines.Add(commentEnd);
             
             // Adds the comment.
             CommentAdv comment = new CommentAdv();
             comment.CommentID = 6;
             comment.Author = "Peter";
             
             // Add the blocks of the comment.
             ParagraphAdv commentParagraph = new ParagraphAdv();
             SpanAdv commentSpan = new SpanAdv();
             commentSpan.Text = "A Comment";
             commentParagraph.Inlines.Add(commentSpan);
             comment.Blocks.Add(paragraph);
             
             paragraph.Inlines.Add(comment);
             </code>
             <code lang="VB">
             Dim paragraph As New ParagraphAdv()
            
             ' Adds the comment start.
             Dim commentStart As New CommentStartAdv()
             commentStart.CommentID = 6
             paragraph.Inlines.Add(commentStart)
            
             ' Adds the content to be commented.
             Dim span As New SpanAdv()
             span.Text = "Hello world."
             paragraph.Inlines.Add(span)
            
             ' Adds the comment end.
             Dim commentEnd As New CommentEndAdv()
             commentEnd.CommentID = 6
             paragraph.Inlines.Add(commentEnd)
             
             ' Adds the comment.
             Dim comment As New CommentAdv()
             comment.CommentID = 6
             comment.Author = "Peter"
             comment.Initial = "F"
             Dim commentParagraph As New ParagraphAdv()
             Dim commentSpan As New SpanAdv()
             commentSpan.Text = "Hello world."
             commentParagraph.Inlines.Add(commentSpan)
             comment.Blocks.Add(commentParagraph);
             
             paragraph.Inlines.Add(comment)
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.CmtID">
            <summary>
            Gets the comment identifier.
            </summary>
            <value>
            The comment identifier.
            </value>        
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.Author">
            <summary>
            Gets or sets the author of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>.
            </summary>
            <value>
            The author of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.Initial">
            <summary>
            Gets or sets the author's initial of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>.
            </summary>
            <value>
            The author's initial of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The length of the initial must be less than 10 symbols.
            </exception>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.Date">
            <summary>
            Gets the created <see cref="T:Windows.Foundation.DateTime"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>.
            </summary>
            <value>
            The created <see cref="T:Windows.Foundation.DateTime"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.Blocks">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.CommentStart">
            <summary>
            Gets or sets the comment start.
            </summary>
            <value>
            The comment start.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.CommentEnd">
            <summary>
            Gets or sets the comment end.
            </summary>
            <value>
            The comment end.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.LayoutedWidget">
            <summary>
            Gets or sets the layouted widget.
            </summary>
            <value>
            The layouted widget.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.CommentVisualStyle">
            <summary>
            Gets the comment visual style.
            </summary>
            <value>
            The comment visual style.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/> class with current <see cref="T:Windows.Foundation.DateTime"/> as created time.
            </summary>
            <seealso cref="!:DateTime.Now"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/> class with the specified <see cref="T:Windows.Foundation.DateTime"/> as created time.
            </summary>
            <param name="date">The <see cref="T:Windows.Foundation.DateTime"/> instance representing the created date and time of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>
            with current <see cref="T:Windows.Foundation.DateTime"/> as created time.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>.
            </param>
            <seealso cref="!:DateTime.Now"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>
            with the specified <see cref="T:Windows.Foundation.DateTime"/> as created time.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>.
            </param>
            <param name="date">The <see cref="T:Windows.Foundation.DateTime"/> instance representing the created date and time of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>.</param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.AuthorProperty">
            <summary>
            Identifies the Author dependency property.
            </summary>
            <returns>The identifier for the Author dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.InitialProperty">
            <summary>
            Identifies the Initial dependency property.
            </summary>
            <returns>The identifier for the Initial dependency property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.LayoutCommentItems(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Layouts the comment items.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.AddCommentWidget(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Adds the comment widget.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.GetHierarchialIndex(Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv)">
            <summary>
            Gets the index of the hierarchial.
            </summary>
            <param name="block">The block.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.GetFirstParagraph">
            <summary>
            Gets the first paragraph.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.GetNextParagraph(Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv)">
            <summary>
            Gets the next paragraph.
            </summary>
            <param name="block">The block.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.GetPreviousParagraph(Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv)">
            <summary>
            Gets the previous paragraph.
            </summary>
            <param name="block">The block.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.RenderRangeElements">
            <summary>
            Renders the range elements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.RemoveRangeElements">
            <summary>
            Removes the range elements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.UpdateCommentWidgetToPage">
            <summary>
            Updates the comment widget to page.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.Relayout">
            <summary>
            Relayouts this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv">
             <summary>
             Represents an abstract list that is used for defining bullets and numbering.
             </summary>
             <example>
             <para>The following code example demonstrates how to define an abstract list.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:AbstractListAdv AbstractListId="6"&gt;
                 &lt;RichTextBoxAdv:ListLevelAdv ListLevelPattern="Number" NumberFormat="(%1.)" StartAt="1" FollowCharacter="Tab"&gt;
                     &lt;RichTextBoxAdv:ListLevelAdv.ParagraphFormat&gt;
                         &lt;RichTextBoxAdv:ParagraphFormat LeftIndent="48" FirstLineIndent="-24" /&gt;
                     &lt;/RichTextBoxAdv:ListLevelAdv.ParagraphFormat&gt;
                 &lt;/RichTextBoxAdv:ListLevelAdv&gt;
                 &lt;!-- Upto nine list levels can be added.--&gt;
             &lt;/RichTextBoxAdv:AbstractListAdv&gt;
             </code>
             <code lang="C#">
             // Initializes an abstract list.
             AbstractListAdv abstractListAdv = new AbstractListAdv();
             // Defines the id for abstract list.
             abstractListAdv.AbstractListId = 6;
            
             // Initializes a list level.
             ListLevelAdv listLevel = new ListLevelAdv(abstractListAdv);
             listLevel.ListLevelPattern = ListLevelPattern.Number;
             listLevel.NumberFormat = "(%1.)";
             listLevel.StartAt = 1;
             listLevel.FollowCharacter = FollowCharacterType.Tab;
             listLevel.ParagraphFormat = new ParagraphFormat(listLevel);
             listLevel.ParagraphFormat.LeftIndent = 48;
             listLevel.ParagraphFormat.FirstLineIndent = -24;
            
             // Adds the list level to the abstract list. Upto nine list levels can be added.
             abstractListAdv.Levels.Add(listLevel);
             </code>
             <code lang="VB">
             ' Initializes an abstract list.
             Dim abstractListAdv As New AbstractListAdv()
             ' Defines the id for abstract list.
             abstractListAdv.AbstractListId = 6
            
             ' Initializes a list level.
             Dim listLevel As New ListLevelAdv(abstractListAdv)
             listLevel.ListLevelPattern = ListLevelPattern.Number
             listLevel.NumberFormat = "(%1.)"
             listLevel.StartAt = 1
             listLevel.FollowCharacter = FollowCharacterType.Tab
             listLevel.ParagraphFormat = New ParagraphFormat(listLevel)
             listLevel.ParagraphFormat.LeftIndent = 48
             listLevel.ParagraphFormat.FirstLineIndent = -24
            
             ' Adds the list level to the abstract list. Upto nine list levels can be added.
             abstractListAdv.Levels.Add(listLevel)
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv.OwnerDocument">
            <summary>
            Gets the owner document.
            </summary>
            <value>
            The owner document.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv.ListType">
            <summary>
            Gets or sets the type of the list.
            </summary>
            <value>
            The type of the list.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv.AbstractListId">
            <summary>
            Gets or sets the identifier of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/>.
            </summary>
            <value>The Id that uniquely identifies the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv.Levels">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdvCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/>.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdvCollection"/> for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/>.
            </value>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdvCollection"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
            </summary>
            <param name="documentAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/> to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/> is associated.</param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv.AbstractListIdProperty">
            <summary>
            Identifies the AbstractListId dependency property.
            </summary>
            <returns>The identifier for the AbstractListId dependency property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv.OnAbstractListIdChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
             Notifies when abstract list id changed.
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:System.Windows.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv.AddListLevel">
            <summary>
            Adds the list level.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/> instance.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv.OwnerDocument">
            <summary>
            Gets the owner document.
            </summary>
            <value>
            The owner document.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv.AbstractList">
            <summary>
            Gets or sets the abstract list for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/>.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/> associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/>.
            </value>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv.LevelOverrides">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/>.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/>.
            </value>
            <example>
            <para>The following sample code demonstrates how to define a list.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:ListAdv ListId="4" AbstractListId="6"&gt;
                &lt;RichTextBoxAdv:ListAdv.LevelOverrides&gt;
                    &lt;RichTextBoxAdv:LevelOverrideAdv LevelNumber="0" StartAt="3" /&gt;
                &lt;/RichTextBoxAdv:ListAdv.LevelOverrides&gt;
            &lt;/RichTextBoxAdv:ListAdv&gt;
            </code>
            <code lang="C#">
            ListAdv listAdv = new ListAdv();
            listAdv.ListId = 4;
            listAdv.AbstractListId = 6;
            
            LevelOverrideAdv levelOverrideAdv = new LevelOverrideAdv();
            levelOverrideAdv.LevelNumber = 0;
            levelOverrideAdv.StartAt = 3;
            </code>
            <code lang="VB">
            Dim listAdv As New ListAdv()
            listAdv.ListId = 4
            listAdv.AbstractListId = 6
            
            Dim levelOverrideAdv As New LevelOverrideAdv()
            levelOverrideAdv.LevelNumber = 0
            levelOverrideAdv.StartAt = 3
            </code>
            </example>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv"/>
            <seealse cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdvCollection"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv.OverrideName">
            <summary>
            Gets or sets the name of the override.
            </summary>
            <value>
            The name of the override.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv.ListId">
            <summary>
            Gets or sets the identifier of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/>.
            </summary>
            <value>The Id that uniquely identifies the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.</value>
            <example>
            <para>The following sample code demonstrates how to define a list.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:ListAdv ListId="4" AbstractListId="6" /&gt;
            </code>
            <code lang="C#">
            ListAdv listAdv = new ListAdv();
            listAdv.ListId = 4;
            listAdv.AbstractListId = 6;
            </code>
            <code lang="VB">
            Dim listAdv As New ListAdv()
            listAdv.ListId = 4
            listAdv.AbstractListId = 6
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv.AbstractListId">
            <summary>
            Gets or sets the identified of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/>.
            </summary>
            <value>The Id that uniquely identifies the associated <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.</value>
            <example>
            <para>The following sample code demonstrates how to define a list.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:ListAdv ListId="4" AbstractListId="6" /&gt;
            </code>
            <code lang="C#">
            ListAdv listAdv = new ListAdv();
            listAdv.ListId = 4;
            listAdv.AbstractListId = 6;
            </code>
            <code lang="VB">
            Dim listAdv As New ListAdv()
            listAdv.ListId = 4
            listAdv.AbstractListId = 6
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
            </summary>
            <param name="documentAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/> to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> is associated.</param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv.AbstractListProperty">
            <summary>
            Identifies the AbstractList dependency property.
            </summary>
            <returns>The identifier for the AbstractList dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv.ListIdProperty">
            <summary>
            Identifies the ListId dependency property.
            </summary>
            <returns>The identifier for the ListId dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv.AbstractListIdProperty">
            <summary>
            Identifies the AbstractListId dependency property.
            </summary>
            <returns>The identifier for the AbstractListId dependency property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv.OnAbstractListChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Notifies when abstract list changed.
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:System.Windows.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv.OnListIdChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
             Notifies when list id changed.
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:System.Windows.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv.OnAbstractListIdChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
             Notifies when abstract list id changed.
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:System.Windows.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv.GetListLevel(System.Int32)">
            <summary>
            Gets the list level.
            </summary>
            <param name="listLevelNumber">The list level number.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv.GetAbstractListLevel(System.Int32)">
            <summary>
            Gets the abstract list level.
            </summary>
            <param name="listLevelNumber">The list level number.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv.CreateOverrideLevel(System.Int32)">
            <summary>
            Creates the override level.
            </summary>
            <param name="levelNumber">The level number.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv.GetListStartValue(System.Int32)">
            <summary>
            Gets the list start value.
            </summary>
            <param name="listLevelNumber">The list level number.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv">
             <summary>
             Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> class.
             </summary>
             <example>
             <para>The following code example demonstrates how to define an abstract list.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:ListLevelAdv ListLevelPattern="Number" NumberFormat="(%1.)" StartAt="1" RestartLevel="0" FollowCharacter="Tab"&gt;
                 &lt;RichTextBoxAdv:ListLevelAdv.ParagraphFormat&gt;
                     &lt;RichTextBoxAdv:ParagraphFormat LeftIndent="48" FirstLineIndent="-24" /&gt;
                 &lt;/RichTextBoxAdv:ListLevelAdv.ParagraphFormat&gt;
                 &lt;RichTextBoxAdv:ListLevelAdv.CharacterFormat&gt;
                     &lt;RichTextBoxAdv:CharacterFormat Italic="True" /&gt;
                 &lt;/RichTextBoxAdv:ListLevelAdv.CharacterFormat&gt;
             &lt;/RichTextBoxAdv:ListLevelAdv&gt;
             </code>
             <code lang="C#">
             // Initializes an abstract list.
             AbstractListAdv abstractList = new AbstractListAdv();
             // Defines the id for abstract list.
             abstractList.AbstractListId = 6;
            
             // Initializes a list level.
             ListLevelAdv listLevel = new ListLevelAdv();
             listLevel.ListLevelPattern = ListLevelPattern.Number;
             listLevel.NumberFormat = "(%1.)";
             listLevel.StartAt = 1;
             listLevel.RestartLevel = 0;
             listLevel.FollowCharacter = FollowCharacterType.Tab;
             listLevel.ParagraphFormat = new ParagraphFormat(listLevel);
             listLevel.ParagraphFormat.LeftIndent = 48;
             listLevel.ParagraphFormat.FirstLineIndent = -24;
             listLevel.CharacterFormat = new CharacterFormat(listLevel);
             listLevel.CharacterFormat.Italic = true;
             </code>
             <code lang="VB">
             ' Initializes a list level.
             Dim listLevel As New ListLevelAdv()
             listLevel.ListLevelPattern = ListLevelPattern.Number
             listLevel.NumberFormat = "(%1.)"
             listLevel.StartAt = 1
             listLevel.RestartLevel = 0
             listLevel.FollowCharacter = FollowCharacterType.Tab
             listLevel.ParagraphFormat = New ParagraphFormat(listLevel)
             listLevel.ParagraphFormat.LeftIndent = 48
             listLevel.ParagraphFormat.FirstLineIndent = -24
             listLevel.CharacterFormat = New CharacterFormat(listLevel)
             listLevel.CharacterFormat.Italic = true
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.OwnerDocument">
            <summary>
            Gets the document.
            </summary>
            <value>
            The document.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.ParagraphFormat">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.ParagraphFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.ParagraphFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.ParagraphFormat"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.CharacterFormat">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.CharacterFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.CharacterFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.CharacterFormat"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.ListLevelPattern">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.ListLevelPattern"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.ListLevelPattern"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.ListLevelPattern"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.StartAt">
            <summary>
            Gets or sets the value from which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> should start at.
            </summary>
            <value>
            The value from which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> should start at.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.FollowCharacter">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FollowCharacterType"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FollowCharacterType"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </value>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FollowCharacterType"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.NumberFormat">
            <summary>
            Gets or sets the number format of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </summary>
            <value>
            The number format of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.RestartLevel">
            <summary>
            Gets or sets the level number after which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> should restart its value.
            </summary>
            <value>
            The level number after which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> should restart its value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.LevelNumber">
            <summary>
            Gets the level number of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </summary>
            <value>
            The level number of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.ListLevelPatternProperty">
            <summary>
            Identifies the ListLevelPattern dependency property.
            </summary>
            <returns>The identifier for the ListLevelPattern dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.StartAtProperty">
            <summary>
            Identifies the StartAt dependency property.
            </summary>
            <returns>The identifier for the StartAt dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.FollowCharacterProperty">
            <summary>
            Identifies the FollowCharacter dependency property.
            </summary>
            <returns>The identifier for the FollowCharacter dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.RestartLevelProperty">
            <summary>
            Identifies the RestartLevel dependency property.
            </summary>
            <returns>The identifier for the RestartLevel dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.NumberFormatProperty">
            <summary>
            Identifies the NumberFormat dependency property.
            </summary>
            <returns>The identifier for the NumberFormat dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.ParagraphFormatProperty">
            <summary>
            Identifies the ParagraphFormat dependency property.
            </summary>
            <returns>The identifier for the ParagraphFormat dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.CharacterFormatProperty">
            <summary>
            Identifies the CharacterFormat dependency property.
            </summary>
            <returns>The identifier for the CharacterFormat dependency property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.OnParagraphFormatChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when paragraph format changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.OnCharacterFormatChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when character format changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.OnFollowCharacterChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [follow character changed].
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.OnNumberFormatChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [number format changed].
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.OnRestartLevelChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [restart level changed].
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/>.
            </summary>
            <param name="abstractListAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.AbstractListAdv"/> to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv"/>.
            </summary>
            <param name="levelOverrideAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv"/> to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.CopyLevel(Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv)">
            <summary>
            Copies the level.
            </summary>
            <param name="listLevel">The list level.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.GetListText(System.Int32)">
            <summary>
            Gets the list text.
            </summary>
            <param name="listValue">The list value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.GetAsRoman(System.Int32)">
            <summary>
            Gets as roman.
            </summary>
            <param name="number">The number.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.GenerateNumber(System.Int32@,System.Int32,System.String)">
            <summary>
            Generates the number.
            </summary>
            <param name="value">The value.</param>
            <param name="magnitude">The magnitude.</param>
            <param name="letter">The letter.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv.GetAsLetter(System.Int32)">
            <summary>
            Gets as letter.
            </summary>
            <param name="number">The number.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv"/> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv.OwnerList">
            <summary>
            Gets the owner <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv"/>.
            </summary>
            <returns>
            The owner <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv.StartAt">
            <summary>
            Gets or sets the value from which the overriden <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> should start at.
            </summary>
            <value>
            The value from which the overriden <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> should start at.
            </value>
            <example>
            <para>The following sample code demonstrates how to define a start at level override for a list.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:LevelOverrideAdv LevelNumber="0" StartAt="3" /&gt;
            </code>
            <code lang="C#">
            LevelOverrideAdv levelOverrideAdv = new LevelOverrideAdv();
            levelOverrideAdv.LevelNumber = 0;
            levelOverrideAdv.StartAt = 3;
            </code>
            <code lang="VB">
            Dim levelOverrideAdv As New LevelOverrideAdv()
            levelOverrideAdv.LevelNumber = 0
            levelOverrideAdv.StartAt = 3
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv.OverrideListLevel">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> to override.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> to override.
            </value>
            <example>
            <para>The following sample code demonstrates how to define a start at level override for a list.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:LevelOverrideAdv LevelNumber="0" &gt;
                &lt;RichTextBoxAdv:LevelOverrideAdv.OverrideListLevel&gt;
                    &lt;RichTextBoxAdv:ListLevelAdv ListLevelPattern="LowRoman" NumberFormat="%1)" StartAt="2" FollowCharacter="Tab"&gt;
                        &lt;RichTextBoxAdv:ListLevelAdv.ParagraphFormat&gt;
                            &lt;RichTextBoxAdv:ParagraphFormat LeftIndent="48" FirstLineIndent="-24" /&gt;
                        &lt;/RichTextBoxAdv:ListLevelAdv.ParagraphFormat&gt;
                    &lt;/RichTextBoxAdv:ListLevelAdv&gt;
                &lt;/RichTextBoxAdv:LevelOverrideAdv.OverrideListLevel&gt;
            &lt;/RichTextBoxAdv:LevelOverrideAdv&gt;
            </code>
            <code lang="C#">
            LevelOverrideAdv levelOverrideAdv = new LevelOverrideAdv();
            levelOverrideAdv.LevelNumber = 0;
            levelOverrideAdv.StartAt = 3;
            </code>
            <code lang="VB">
            Dim levelOverrideAdv As New LevelOverrideAdv()
            levelOverrideAdv.LevelNumber = 0
            levelOverrideAdv.StartAt = 3
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv.LevelNumber">
            <summary>
            Gets or sets the level number of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> to override.
            </summary>
            <value>
            The level number of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv"/> to override.
            </value>
            <example>
            <para>The following sample code demonstrates how to define a start at level override for a list.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:LevelOverrideAdv LevelNumber="0" StartAt="3" /&gt;
            </code>
            <code lang="C#">
            LevelOverrideAdv levelOverrideAdv = new LevelOverrideAdv();
            levelOverrideAdv.LevelNumber = 0;
            levelOverrideAdv.StartAt = 3;
            </code>
            <code lang="VB">
            Dim levelOverrideAdv As New LevelOverrideAdv()
            levelOverrideAdv.LevelNumber = 0
            levelOverrideAdv.StartAt = 3
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv"/> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/>.
            </summary>
            <param name="listAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv"/>.</param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv.OverrideListLevelProperty">
            <summary>
            Identifies the OverrideListLevel dependency property.
            </summary>
            <returns>The identifier for the OverrideListLevel dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv.StartAtProperty">
            <summary>
            Identifies the StartAt dependency property.
            </summary>
            <returns>The identifier for the StartAt dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv.LevelNumberProperty">
            <summary>
            Identifies the LevelNumber dependency property.
            </summary>
            <returns>The identifier for the LevelNumber dependency property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv.OnOverrideListLevelChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [override list level changed].
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv.OnStartAtChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [start at changed].
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv.OnLevelNumberChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [level number changed].
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:System.Windows.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv.Clone">
            <summary>
            Clones the level override.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LevelOverrideAdv"/> instance.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.INode">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.INode"/> interface.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.INode.Owner">
            <summary>
            Gets the owner.
            </summary>
            <value>
            The owner.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ICompositeNode">
            <summary>
            Represents a node that can contain other nodes.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ICompositeNode.ChildNodes">
            <summary>
            Gets the collection of child nodes.
            </summary>
            <value>The collection of child nodes.</value>
            <returns>
            Returns the collection of child nodes as <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.NodeCollection"/> instance.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode">
            <summary>
            An abstract class that provides a base for all the elements and formats in a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode.OwnerBase">
            <summary>
            Gets the owner base.
            </summary>
            <value>
            The owner base.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode"/>. The value can be null.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode.SetOwner(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
            Sets the owner base.
            </summary>
            <param name="owner">The base node.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode.SetOwnerBase(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
            Sets the owner base.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode.UpdateListId">
            <summary>
            Updates the list id.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node">
            <summary>
            An abstract class that provides a base for all the elements in a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Node.Owner">
            <summary>
            Gets the owner.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/> instance that represents the owner.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Node.NextNode">
            <summary>
            Gets the next sibling of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/> instance that represents the next sibling.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Node.PreviousNode">
            <summary>
            Gets the previous sibling of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/> that represents the previous sibling.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Node.IsComposite">
            <summary>
            Gets a value indicating whether this instance is composite.
            </summary>
            <value>
            <c>true</c> if this instance is composite; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Node.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node" /> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>. The value can be null.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Node.SetOwner(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
            Sets the owner base.
            </summary>
            <param name="owner">The base node.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Node.GetIndexInOwnerCollection">
            <summary>
            Gets the index in owner collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Node.GetTopLevelOwner">
            <summary>
            Gets the top level owner.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Node.GetOwnerDocument">
            <summary>
            Gets the owner document.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Node.IsInComment">
            <summary>
            Determines whether [is in comment].
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Node.GetOwnerComment">
            <summary>
            Gets the owner comment.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode">
            <summary>
            An abstract class that provides a base for all the elements that contains child elements in a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.ChildNodes">
            <summary>
            Gets or sets the child nodes.
            </summary>
            <value>
            The child nodes.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode"/>. The value can be null.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.SetOwner(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
            Sets the owner base.
            </summary>
            <param name="owner">The base node.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.ClearUnlinkedFields">
            <summary>
            Clears the unlinked fields.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.GetFieldCode(Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv,System.Boolean@,System.Boolean@,Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Gets the field code.
            </summary>
            <param name="fieldBegin">The field begin.</param>
            <param name="isNestedFieldCode">if set to <c>true</c> [is nested field code].</param>
            <param name="isFieldCodeParsed">if set to <c>true</c> [is field code parsed].</param>
            <param name="previousNode">The previous node.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.LinkFieldTraversingForward(Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv,System.Int32@,Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Links the field traversing forward.
            </summary>
            <param name="fieldBegin">The field begin.</param>
            <param name="fieldNestingLevel">The field nesting level.</param>
            <param name="previousNode">The previous node.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.LinkFieldTraversingBackward(Syncfusion.UI.Xaml.RichTextBoxAdv.FieldEndAdv,System.Int32@,Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Links the field traversing backward.
            </summary>
            <param name="fieldEnd">The field end.</param>
            <param name="fieldNestingLevel">The field nesting level.</param>
            <param name="previousNode">The previous node.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.LinkFieldTraversingBackward(Syncfusion.UI.Xaml.RichTextBoxAdv.FieldSeparatorAdv,System.Int32@,Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Links the field traversing backward.
            </summary>
            <param name="fieldSeparator">The field separator.</param>
            <param name="fieldNestingLevel">The field nesting level.</param>
            <param name="previousNode">The previous node.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.LinkFieldCharacters(Syncfusion.UI.Xaml.RichTextBoxAdv.FieldCharacterAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Links the field characters.
            </summary>
            <param name="fieldCharacter">The field character.</param>
            <param name="previousNode">The previous node.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.AttachFieldCharacter(Syncfusion.UI.Xaml.RichTextBoxAdv.FieldCharacterAdv)">
            <summary>
            Attaches the field character.
            </summary>
            <param name="fieldCharacter">The field character.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.AttachFieldCharacter(Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode)">
            <summary>
            Attaches the field character.
            </summary>
            <param name="compositeNode">The composite node.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.AddFieldCharacter(Syncfusion.UI.Xaml.RichTextBoxAdv.FieldCharacterAdv)">
            <summary>
            Adds the field character.
            </summary>
            <param name="fieldCharacter">The fieldCharacter.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.AddFieldCharacter(Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode)">
            <summary>
            Adds the field character.
            </summary>
            <param name="compositeNode">The compositeNode.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.RemoveFieldCharacter(Syncfusion.UI.Xaml.RichTextBoxAdv.FieldCharacterAdv)">
            <summary>
            Removes the field character.
            </summary>
            <param name="fieldCharacter">The fieldCharacter.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.RemoveFieldCharacter(Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode)">
            <summary>
            Removes the field character.
            </summary>
            <param name="compositeNode">The compositeNode.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.AddField(Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv)">
            <summary>
            Adds the field.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.RemoveField(Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv)">
            <summary>
            Removes the field.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.AddField(Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode)">
            <summary>
            Adds the field.
            </summary>
            <param name="compositeNode">The composite node.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.RemoveField(Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode)">
            <summary>
            Removes the field.
            </summary>
            <param name="compositeNode">The composite node.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.GetHyperlinkField(Syncfusion.UI.Xaml.RichTextBoxAdv.Inline,System.Collections.Generic.List{Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv})">
            <summary>
            Gets the hyperlink field.
            </summary>
            <param name="inline">The inline.</param>
            <param name="CheckedFields">The checked fields.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.GetHyperlinkField(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,System.Collections.Generic.List{Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv})">
            <summary>
            Gets the hyperlink field.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <param name="CheckedFields">The checked fields.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.GetHierarchicalIndex(System.String)">
            <summary>
            Gets the hierarchical index of the composite node.
            </summary>
            <param name="hierarchicalIndex">The hierarchicalIndex.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.GetParagraph(System.String@)">
            <summary>
            Gets the paragraph.
            </summary>
            <param name="position">The position.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.GetBlock(System.String@)">
            <summary>
            Gets the paragraph.
            </summary>
            <param name="position">The position.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.AddCommentMark(Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode)">
            <summary>
            Adds the comment mark.
            </summary>
            <param name="compositeNode">The composite node.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.AddCommentMark(Syncfusion.UI.Xaml.RichTextBoxAdv.CommentCharacterAdv)">
            <summary>
            Adds the comment mark.
            </summary>
            <param name="commentMark">The comment mark.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.RemoveCommentMark(Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode)">
            <summary>
            Removes the comment mark.
            </summary>
            <param name="compositeNode">The composite node.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.RemoveCommentMark(Syncfusion.UI.Xaml.RichTextBoxAdv.CommentCharacterAdv)">
            <summary>
            Removes the comment mark.
            </summary>
            <param name="commentMark">The comment.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.AddComment(Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode)">
            <summary>
            Adds the comment.
            </summary>
            <param name="compositeNode">The composite node.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.AddComment(Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv)">
            <summary>
            Adds the comment.
            </summary>
            <param name="comment">The comment.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.CommentCollectionChanged">
            <summary>
            Comments the collection changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.RemoveComment(Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode)">
            <summary>
            Removes the comment.
            </summary>
            <param name="compositeNode">The composite node.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CompositeNode.RemoveComment(Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv)">
            <summary>
            Removes the comment.
            </summary>
            <param name="comment">The comment.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/> class.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.ParagraphFormat">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.ParagraphFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.ParagraphFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define paragraph format for a paragraph.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:ParagraphAdv&gt;
                &lt;RichTextBoxAdv:ParagraphAdv.ParagraphFormat&gt;
                    &lt;RichTextBoxAdv:ParagraphFormat TextAlignment="Center"/&gt;
                &lt;/RichTextBoxAdv:ParagraphAdv.ParagraphFormat&gt;
                &lt;RichTextBoxAdv:SpanAdv&gt;Hello World.&lt;/RichTextBoxAdv:SpanAdv&gt;
            &lt;/RichTextBoxAdv:ParagraphAdv&gt;
            </code>
            <code lang="C#">
            ParagraphAdv paragraphAdv = new ParagraphAdv();
            paragraphAdv.ParagraphFormat = new ParagraphFormat();
            paragraphAdv.ParagraphFormat.TextAlignment = TextAlignment.Center;
            
            SpanAdv spanAdv = new SpanAdv();
            spanAdv.Text = "Hello world.";
            paragraphAdv.Inlines.Add(spanAdv);
            </code>
            <code lang="VB">
            Dim paragraphAdv As New ParagraphAdv()
            paragraphAdv.ParagraphFormat = New ParagraphFormat()
            paragraphAdv.ParagraphFormat.TextAlignment = TextAlignment.Center
            
            Dim spanAdv As New SpanAdv()
            spanAdv.Text = "Hello world."
            paragraphAdv.Inlines.Add(spanAdv)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.CharacterFormat">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.CharacterFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.CharacterFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define character format for a paragraph.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:ParagraphAdv&gt;
                &lt;RichTextBoxAdv:ParagraphAdv.CharacterFormat&gt;
                    &lt;RichTextBoxAdv:CharacterFormat Bold="True"/&gt;
                &lt;/RichTextBoxAdv:ParagraphAdv.CharacterFormat&gt;
                &lt;RichTextBoxAdv:SpanAdv&gt;Hello World.&lt;/RichTextBoxAdv:SpanAdv&gt;
            &lt;/RichTextBoxAdv:ParagraphAdv&gt;
            </code>
            <code lang="C#">
            ParagraphAdv paragraphAdv = new ParagraphAdv();
            paragraphAdv.CharacterFormat = new CharacterFormat();
            paragraphAdv.CharacterFormat.Bold = true;
            
            SpanAdv spanAdv = new SpanAdv();
            spanAdv.Text = "Hello world.";
            paragraphAdv.Inlines.Add(spanAdv);
            </code>
            <code lang="VB">
            Dim paragraphAdv As New ParagraphAdv()
            paragraphAdv.CharacterFormat = New CharacterFormat()
            paragraphAdv.CharacterFormat.Bold = True
            
            Dim spanAdv As New SpanAdv()
            spanAdv.Text = "Hello world."
            paragraphAdv.Inlines.Add(spanAdv)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.Inlines">
            <summary>
            Gets or Sets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.InlineCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to add inlines for a paragraph.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:ParagraphAdv&gt;
                &lt;RichTextBoxAdv:SpanAdv&gt;Hello World.&lt;/RichTextBoxAdv:SpanAdv&gt;
                &lt;!-- Add any number of spans, images, fields and comments. --&gt;
            &lt;/RichTextBoxAdv:ParagraphAdv&gt;
            </code>
            <code lang="C#">
            ParagraphAdv paragraphAdv = new ParagraphAdv();
            SpanAdv spanAdv = new SpanAdv();
            spanAdv.Text = "Hello world.";
            paragraphAdv.Inlines.Add(spanAdv);
            // Add any number of spans, images, fields and comments.
            </code>
            <code lang="VB">
            Dim paragraphAdv As New ParagraphAdv()
            Dim spanAdv As New SpanAdv()
            spanAdv.Text = "Hello world."
            paragraphAdv.Inlines.Add(spanAdv)
            ' Add any number of spans, images, fields and comments.
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.ParagraphWidgets">
            <summary>
            Gets the paragraph widgets.
            </summary>
            <value>
            The paragraph widgets.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.ParagraphFormatProperty">
            <summary>
            Identifies the ParagraphFormat dependency property.
            </summary>
            <returns>The identifier for the ParagraphFormat dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.CharacterFormatProperty">
            <summary>
            Identifies the CharacterFormat dependency property.
            </summary>
            <returns>The identifier for the CharacterFormat dependency property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.OnParagraphFormatChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when paragraph format changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.OnCharacterFormatChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when character format changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>. 
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The BlockAdv.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.UpdateListParagraphs">
            <summary>
            Updates the list paragraphs.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.UpdateListItems(Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv)">
            <summary>
            Updates the list items.
            </summary>
            <param name="block">The block.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.UpdateRenderedListItems">
            <summary>
            Updates the rendered list items.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.LayoutItems(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Layouts the items.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.LayoutList(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Layouts the list.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.ClearWidgets">
            <summary>
            Clears the widgets.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetTabWidth(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Gets the width of the tab.
            </summary>
            <param name="viewer">The viewer.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.AddParagraphWidget(Windows.Foundation.Rect)">
            <summary>
            Adds the paragraph widget.
            </summary>
            <param name="area">The area.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.AddLineWidget">
            <summary>
            Adds the line widget.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.CombineParagraphWidgets(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget)">
            <summary>
            Combines the paragraph widgets.
            </summary>
            <param name="cellWidget">The cell widget.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.ShiftWidgets(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Shifts the widgets.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.Relayout(System.Int32)">
            <summary>
            Relayouts the specified start index.
            </summary>
            <param name="startIndex">The start index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.Relayout(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer,Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv)">
            <summary>
            Relayouts the specified viewer.
            </summary>
            <param name="viewer">The viewer.</param>
            <param name="section">The section.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.PreservePreviousElements(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Preserves the previous elements.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetLineWidgetToClear(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline,Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox@)">
            <summary>
            Gets the line widget to clear.
            </summary>
            <param name="viewer">The viewer.</param>
            <param name="inline">The inline.</param>
            <param name="prevElement">The prev element.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.ClearLineWidgets(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer,Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget,Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox)">
            <summary>
            Clears the line widgets.
            </summary>
            <param name="viewer">The viewer.</param>
            <param name="startLineWidget">The start line widget.</param>
            <param name="prevElement">The prev element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.LayoutEmptyLineWidget(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Layouts the empty line widget.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetParagraphMarkSize(System.Double@,System.Double@)">
            <summary>
            Gets the size of the paragraph mark.
            </summary>
            <param name="topMargin">The top margin.</param>
            <param name="bottomMargin">The bottom margin.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetBeforeSpacing">
            <summary>
            Gets the before spacing.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetLineSpacing(System.Double)">
            <summary>
            Gets the line spacing.
            </summary>
            <param name="maxHeight">Height of the max.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.MoveToNextPage(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Moves to next page.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.UpdateWidgetToPage(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Updates the widget to page.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetLength">
            <summary>
            Gets the length.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.IsEmpty">
            <summary>
            Determines whether this instance is empty.
            </summary>
            <returns>
              <c>true</c> if this instance is empty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetStartOffset">
            <summary>
            Gets the start offset.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetEndOffset">
            <summary>
            Gets the end offset.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.HasValidInline(Syncfusion.UI.Xaml.RichTextBoxAdv.Inline,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline)">
            <summary>
            Determines whether this instance has valid inline in the specified start and end.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <returns>
              <c>true</c> if this instance has valid inline in the specified start and end; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetPreviousValidOffset(System.Double)">
            <summary>
            Gets the previous valid offset.
            </summary>
            <param name="offset">The offset.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetNextValidOffset(System.Double)">
            <summary>
            Gets the next valid offset.
            </summary>
            <param name="offset">The offset.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetOffset(Syncfusion.UI.Xaml.RichTextBoxAdv.Inline,System.Int32)">
            <summary>
            Gets the offset.
            </summary>
            <param name="inline">The inline.</param>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetInline(System.Double,System.Int32@)">
            <summary>
            Gets the inline.
            </summary>
            <param name="offset">The offset.</param>
            <param name="indexInInline">The index in inline.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetNextStartInline(System.Double)">
            <summary>
            Gets the next start inline.
            </summary>
            <param name="offset">The offset.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetLineWidget(System.Double)">
            <summary>
            Gets the line widget.
            </summary>
            <param name="offset">The offset.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetLineWidget(System.Double,System.Boolean)">
            <summary>
            Gets the line widget.
            </summary>
            <param name="offset">The offset.</param>
            <param name="moveToNextLine">if set to <c>true</c> [move to next line].</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetPhysicalPosition(System.Double)">
            <summary>
            Gets the physical position.
            </summary>
            <param name="offset">The offset.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetPhysicalPosition(System.Double,System.Boolean)">
            <summary>
            Gets the physical position.
            </summary>
            <param name="offset">The offset.</param>
            <param name="moveNextLine">if set to <c>true</c> [move next line].</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetEndPosition">
            <summary>
            Gets the end position.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetHyperlinkDisplayText(Syncfusion.UI.Xaml.RichTextBoxAdv.Inline,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline,System.Boolean@,Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat@)">
            <summary>
            Gets the hyperlink display text.
            </summary>
            <param name="fieldSeparator">The field separator.</param>
            <param name="fieldEnd">The field end.</param>
            <param name="isNestedField">if set to <c>true</c> [is nested field].</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetClonedFieldResult(Syncfusion.UI.Xaml.RichTextBoxAdv.Inline)">
            <summary>
            Gets the cloned field result.
            </summary>
            <param name="fieldSeparator">The field separator.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetClonedFieldResult(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline)">
            <summary>
            Gets the cloned field result.
            </summary>
            <param name="selection">The selection.</param>
            <param name="fieldSeparator">The field separator.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.RemoveAtOffset(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo,System.Double)">
            <summary>
            Removes at offset.
            </summary>
            <param name="baseHistoryInfo">The history info.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.InsertParagraph(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,System.Double,System.Boolean)">
            <summary>
            Inserts the paragraph.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <param name="offset">The offset.</param>
            <param name="insertAfter">if set to <c>true</c> insert after.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.SplitParagraph(System.Double)">
            <summary>
            Splits the paragraph.
            </summary>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.SplitParagraph(System.Double,System.Double)">
            <summary>
            Splits the paragraph and adds the new paragraph before the splitted paragraph.
            </summary>
            <param name="startOffset">The start offset.</param>
            <param name="endOffset">The end offset.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.RemoveSelectedContent(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Removes the content of the selected.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.HighlightSelectedContent(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Highlights the content of the selected.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetStartLineWidget(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox@,System.Int32@)">
            <summary>
            Gets the start line widget.
            </summary>
            <param name="start">The start.</param>
            <param name="startElement">The start element.</param>
            <param name="selectionStartIndex">Start index of the selection.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetEndLineWidget(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox@,System.Int32@)">
            <summary>
            Gets the end line widget.
            </summary>
            <param name="end">The end.</param>
            <param name="endElement">The end element.</param>
            <param name="selectionEndIndex">End index of the selection.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.Highlight(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Highlights the specified selection.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.HighlightSearchResult(Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Highlights the search result.
            </summary>
            <param name="searchResult">The search result.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.DeleteSelectedContent(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,System.Byte)">
            <summary>
            Deletes the content of the selected.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="editAction">The edit action.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.IsCombineParagraph(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Determines whether to combine with next paragraph.
            </summary>
            <param name="end">The end.</param>
            <returns>
              <c>true</c> if combine with next paragraph; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.IsEndInAdjacentTable(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv)">
            <summary>
            Determines whether the specified end paragraph is in adjacent table of this instance.
            </summary>
            <param name="endParagraph">The end paragraph.</param>
            <returns>
              <c>true</c> if the specified end paragraph is in adjacent table of this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.Delete(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,System.Byte)">
            <summary>
            Deletes the specified selection.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="editAction">The edit action.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.DeleteParagraphMark(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,System.Byte)">
            <summary>
            Deletes the paragraph mark.
            </summary>
            <param name="selection">The selection.</param>
            <param name="editAction">The edit action.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.RemoveInlines(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,System.Double,System.Double,System.Byte)">
            <summary>
            Removes the inlines.
            </summary>
            <param name="selection">The selection.</param>
            <param name="startOffset">The start offset.</param>
            <param name="endOffset">The end offset.</param>
            <param name="editAction">The edit action.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.MoveInlines(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,System.Int32,System.Double,System.Double)">
            <summary>
            Moves the inlines.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <param name="insertIndex">Index of the insert.</param>
            <param name="startOffset">The start offset.</param>
            <param name="endOffset">The end offset.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.Copy(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,System.Double)">
            <summary>
            Copies the specified selection.
            </summary>
            <param name="selection">The selection.</param>
            <param name="startOffset">The start offset.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.Copy(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Copies the specified selection.
            </summary>
            <param name="selection">The selection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.ApplyCharacterFormatForSelection(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Applies the character format for selection.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.ApplyCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Applies the character format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetCurrentSelectionValue(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Windows.UI.Xaml.DependencyProperty,System.Object@)">
            <summary>
            Gets the last selected index character value
            </summary>
            <param name="start">The start.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.ApplyCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Applies the character format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.ApplyParagraphFormatForSelection(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Applies the paragraph format for selection.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.ApplyParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Applies the paragraph format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.ApplyParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Applies the paragraph format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetCharacterFormatForSelection(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the character format for selection.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the character format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Gets the character format.
            </summary>
            <param name="selection">The selection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the character format for Combining.
            </summary>
            <param name="selection">The selection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetNextValidCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.Inline)">
            <summary>
            Gets the next valid character format.
            </summary>
            <param name="inline">The inline.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetNextValidCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv)">
            <summary>
            Gets the next valid character format.
            </summary>
            <param name="fieldBegin">The field begin.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetParagraphFormatForSelection(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the paragraph format for selection.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the paragraph format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.GetParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Gets the paragraph format.
            </summary>
            <param name="selection">The selection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.StartSelectionRelayouting(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Starts relayouting the selection.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start text position.</param>
            <param name="end">The end text position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv.RelayoutSelection(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Relayouts the selection.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start text position.</param>
            <param name="end">The end position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PreservedCellsInfo.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.PreservedCellsInfo.RowIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.PreservedCellsInfo.ColumnIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.PreservedCellsInfo.Blocks">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.PreservedCellsInfo.IsColumnSpanChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.PreservedCellsInfo.TableCell">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.HeaderFooters">
             <summary>
             Gets or sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.HeaderFooters"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/>.
             </summary>
             <value>
             The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.HeaderFooters"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/>.
             </value>
             <example>
             <para>The following code example demonstrates how to add header and footer for the section.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SectionAdv&gt;
                 &lt;!-- Defines the header and footer for the section. --&gt;
                 &lt;RichTextBoxAdv:SectionAdv.HeaderFooters&gt;
                     &lt;RichTextBoxAdv:HeaderFooters&gt;
                         &lt;RichTextBoxAdv:HeaderFooters.Header&gt;
                             &lt;RichTextBoxAdv:HeaderFooter&gt;
                                 &lt;RichTextBoxAdv:ParagraphAdv&gt;
                                     &lt;RichTextBoxAdv:SpanAdv&gt;29 March 2016&lt;/RichTextBoxAdv:SpanAdv&gt;
                                 &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                             &lt;/RichTextBoxAdv:HeaderFooter&gt;
                         &lt;/RichTextBoxAdv:HeaderFooters.Header&gt;
                         &lt;RichTextBoxAdv:HeaderFooters.Footer&gt;
                             &lt;RichTextBoxAdv:HeaderFooter&gt;
                                 &lt;RichTextBoxAdv:ParagraphAdv&gt;
                                     &lt;RichTextBoxAdv:SpanAdv&gt;Tuesday&lt;/RichTextBoxAdv:SpanAdv&gt;
                                 &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                             &lt;/RichTextBoxAdv:HeaderFooter&gt;
                         &lt;/RichTextBoxAdv:HeaderFooters.Footer&gt;
                     &lt;/RichTextBoxAdv:HeaderFooters&gt;
                 &lt;/RichTextBoxAdv:SectionAdv.HeaderFooters&gt; 
                 &lt;RichTextBoxAdv:ParagraphAdv&gt;
                     &lt;RichTextBoxAdv:SpanAdv&gt;Hello World.&lt;/RichTextBoxAdv:SpanAdv&gt;
                 &lt;/RichTextBoxAdv:ParagraphAdv&gt;
             &lt;/RichTextBoxAdv:SectionAdv&gt;
             </code>
             <code lang="C#">
             SectionAdv sectionAdv = new SectionAdv();
             
             // Defines the header and footer.
             HeaderFooters headerFooters = new HeaderFooters();
            
             // Defines the header.
             headerFooters.Header = new HeaderFooter();
             ParagraphAdv headerParagraph = new ParagraphAdv();
             SpanAdv headerSpan = new SpanAdv();
             headerSpan.Text = "29 March 2016";
             headerParagraph.Inlines.Add(headerSpan);
             headerFooters.Header.Blocks.Add(headerParagraph);
            
             // Defines the footer.
             headerFooters.Footer = new HeaderFooter();
             ParagraphAdv footerParagraph = new ParagraphAdv();
             SpanAdv footerSpan = new SpanAdv();
             footerSpan.Text = "29 March 2016";
             footerParagraph.Inlines.Add(footerSpan);
             headerFooters.Footer.Blocks.Add(footerParagraph);
             
             sectionAdv.HeaderFooters = headerFooters;
             
             ParagraphAdv paragraphAdv = new ParagraphAdv();
             SpanAdv spanAdv = new SpanAdv();
             spanAdv.Text = "Hello world.";
             
             paragraphAdv.Inlines.Add(spanAdv);
             sectionAdv.Blocks.Add(paragraphAdv);
             // You can add any number of paragraphs and tables.
             </code>
             <code lang="VB">
             Dim sectionAdv As New SectionAdv()
             
             ' Defines the header and footer.
             Dim headerFooters As New HeaderFooters()
            
             ' Defines the header.
             headerFooters.Header = New HeaderFooter()
             Dim headerParagraph As New ParagraphAdv()
             Dim headerSpan As New SpanAdv()
             headerSpan.Text = "29 March 2016"
             headerParagraph.Inlines.Add(headerSpan)
             headerFooters.Header.Blocks.Add(headerParagraph)
            
             // Defines the footer.
             headerFooters.Footer = New HeaderFooter()
             Dim footerParagraph As New ParagraphAdv()
             Dim footerSpan As New SpanAdv()
             footerSpan.Text = "29 March 2016"
             footerParagraph.Inlines.Add(footerSpan)
             headerFooters.Footer.Blocks.Add(footerParagraph)
             
             sectionAdv.HeaderFooters = headerFooters
             
             Dim paragraphAdv As New ParagraphAdv()
             Dim spanAdv As New SpanAdv()
             spanAdv.Text = "Hello world."
            
             paragraphAdv.Inlines.Add(spanAdv)
             sectionAdv.Blocks.Add(paragraphAdv)
             ' You can add any number of paragraphs and tables.
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.SectionFormat">
             <summary>
             Gets or sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.SectionFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/>.
             </summary>
             <value>
             The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.SectionFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/>.
             </value>
             <example>
             <para>The following code example demonstrates how to define the section format for a section.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SectionAdv&gt;
                 &lt;!-- Defines the section format. --&gt;
                 &lt;RichTextBoxAdv:SectionAdv.SectionFormat&gt;
                     &lt;RichTextBoxAdv:SectionFormat PageSize="480 520"/&gt;
                 &lt;/RichTextBoxAdv:SectionAdv.SectionFormat&gt;
                 &lt;RichTextBoxAdv:ParagraphAdv&gt;
                     &lt;RichTextBoxAdv:SpanAdv&gt;Hello World.&lt;/RichTextBoxAdv:SpanAdv&gt;
                 &lt;/RichTextBoxAdv:ParagraphAdv&gt;
             &lt;/RichTextBoxAdv:SectionAdv&gt;
             </code>
             <code lang="C#">
             SectionAdv sectionAdv = new SectionAdv();
             // Defines the section format.
             SectionFormat sectionFormat = new SectionFormat();
             sectionFormat.PageSize = new Size(480, 520);
             sectionAdv.SectionFormat = sectionFormat;
             
             ParagraphAdv paragraphAdv = new ParagraphAdv();
             SpanAdv spanAdv = new SpanAdv();
             spanAdv.Text = "Hello world.";
             
             paragraphAdv.Inlines.Add(spanAdv);
             sectionAdv.Blocks.Add(paragraphAdv);
             // You can add any number of paragraphs and tables.
             </code>
             <code lang="VB">
             Dim sectionAdv As New SectionAdv()
             ' Defines the section format.
             Dim sectionFormat As New SectionFormat()
             sectionFormat.PageSize = New Size(480, 520)
             sectionAdv.SectionFormat = sectionFormat
             
             Dim paragraphAdv As New ParagraphAdv()
             Dim spanAdv As New SpanAdv()
             spanAdv.Text = "Hello world."
            
             paragraphAdv.Inlines.Add(spanAdv)
             sectionAdv.Blocks.Add(paragraphAdv)
             ' You can add any number of paragraphs and tables.
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.Blocks">
             <summary>
             Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/>.
             </summary>
             <returns>
             The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/>.
             </returns>
             <example>
             <para>The following code example demonstrates how to add blocks for the section.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SectionAdv&gt;
                 &lt;RichTextBoxAdv:ParagraphAdv&gt;
                     &lt;RichTextBoxAdv:SpanAdv&gt;Hello World.&lt;/RichTextBoxAdv:SpanAdv&gt;
                 &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                 &lt;!-- You can add any number of paragraphs and tables. --&gt;
             &lt;/RichTextBoxAdv:SectionAdv&gt;
             </code>
             <code lang="C#">
             SectionAdv sectionAdv = new SectionAdv();
             ParagraphAdv paragraphAdv = new ParagraphAdv();
             SpanAdv spanAdv = new SpanAdv();
             spanAdv.Text = "Hello world.";
             
             paragraphAdv.Inlines.Add(spanAdv);
             sectionAdv.Blocks.Add(paragraphAdv);
             // You can add any number of paragraphs and tables.
             </code>
             <code lang="VB">
             Dim sectionAdv As New SectionAdv()
             Dim paragraphAdv As New ParagraphAdv()
             Dim spanAdv As New SpanAdv()
             spanAdv.Text = "Hello world."
            
             paragraphAdv.Inlines.Add(spanAdv)
             sectionAdv.Blocks.Add(paragraphAdv)
             ' You can add any number of paragraphs and tables.
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.Document">
            <summary>
            Gets the document.
            </summary>
            <value>
            The document.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.BaseParent">
            <summary>
            Gets the base parent.
            </summary>
            <value>
            The base parent.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.BodyWidgets">
            <summary>
            Gets the body widgets.
            </summary>
            <value>
            The body widgets.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.HeaderFootersProperty">
            <summary>
            Identifies the HeaderFooters dependency property.
            </summary>
            <returns>The identifier for the HeaderFooters dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.SectionFormatProperty">
            <summary>
            Identifies the SectionFormat dependency property.
            </summary>
            <returns>The identifier for the SectionFormat dependency property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.OnHeaderFootersChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when header footers changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.OnSectionFormatChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when section format changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv" /> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/>. The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdvCollection"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.AddBodyWidget(Windows.Foundation.Rect)">
            <summary>
            Adds the body widget.
            </summary>
            <param name="area">The area.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.GetCurrentHeaderFooter(Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooterType)">
            <summary>
            Gets the current header footer.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.UpdateListItems(Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv)">
            <summary>
            Updates the list items.
            </summary>
            <param name="block">The block.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.UpdateListParagraphs">
            <summary>
            Updates the list paragraphs.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.LayoutItems">
            <summary>
            Layouts the items.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.Layout(System.Int32)">
            <summary>
            Layouts the specified block index.
            </summary>
            <param name="blockIndex">Index of the block.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.Layout(System.Int32,System.Boolean)">
            <summary>
            Layouts the specified block index.
            </summary>
            <param name="blockIndex">Index of the block.</param>
            <param name="ShiftNextWidget">The ShiftNextWidget.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.ClearWidgets">
            <summary>
            Clears the widgets.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.GetNextSelection(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Gets the next selection.
            </summary>
            <param name="selection">The selection.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.GetPreviousSelection(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Gets the previous selection.
            </summary>
            <param name="selection">The selection.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.GetNextParagraph">
            <summary>
            Gets the next paragraph.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.GetPreviousParagraph">
            <summary>
            Gets the previous paragraph.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.GetPreviousBlock">
            <summary>
            Gets the previous block.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.CombineSection(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv)">
            <summary>
            Combines the section.
            </summary>
            <param name="selection">The selection.</param>
            <param name="nextSection">The next section.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.SplitSection(Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv)">
            <summary>
            Splits the section.
            </summary>
            <param name="newSection">The new section.</param>
            <param name="splitBlock">The split block.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv.ClearProofedInlines">
            <summary>
            Clears the proofed inlines.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv">
             <summary>
             Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/> class.
             </summary>
             <example>
             <para>The following code example demonstrates how to define a table.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:TableAdv&gt;
                 &lt;RichTextBoxAdv:TableRowAdv&gt;
                     &lt;RichTextBoxAdv:TableCellAdv&gt;
                         &lt;RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                             &lt;RichTextBoxAdv:CellFormat CellWidth="200"/&gt;
                         &lt;/RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                         &lt;RichTextBoxAdv:ParagraphAdv&gt;
                             &lt;RichTextBoxAdv:SpanAdv&gt;Animal&lt;/RichTextBoxAdv:SpanAdv&gt;
                         &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                     &lt;/RichTextBoxAdv:TableCellAdv&gt;
                     &lt;RichTextBoxAdv:TableCellAdv&gt;
                         &lt;RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                             &lt;RichTextBoxAdv:CellFormat CellWidth="200"/&gt;
                         &lt;/RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                         &lt;RichTextBoxAdv:ParagraphAdv&gt;
                             &lt;RichTextBoxAdv:SpanAdv&gt;Type&lt;/RichTextBoxAdv:SpanAdv&gt;
                         &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                     &lt;/RichTextBoxAdv:TableCellAdv&gt;
                 &lt;/RichTextBoxAdv:TableRowAdv&gt;
                 &lt;RichTextBoxAdv:TableRowAdv&gt;
                     &lt;RichTextBoxAdv:TableCellAdv&gt;
                         &lt;RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                             &lt;RichTextBoxAdv:CellFormat CellWidth="200"/&gt;
                       &lt;/RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                         &lt;RichTextBoxAdv:ParagraphAdv&gt;
                             &lt;RichTextBoxAdv:SpanAdv&gt;Lion&lt;/RichTextBoxAdv:SpanAdv&gt;
                         &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                     &lt;/RichTextBoxAdv:TableCellAdv&gt;
                     &lt;RichTextBoxAdv:TableCellAdv&gt;
                         &lt;RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                             &lt;RichTextBoxAdv:CellFormat CellWidth="200"/&gt;
                         &lt;/RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                         &lt;RichTextBoxAdv:ParagraphAdv&gt;
                             &lt;RichTextBoxAdv:SpanAdv&gt;Carnivores&lt;/RichTextBoxAdv:SpanAdv&gt;
                         &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                     &lt;/RichTextBoxAdv:TableCellAdv&gt;
                 &lt;/RichTextBoxAdv:TableRowAdv&gt;
                 &lt;RichTextBoxAdv:TableRowAdv&gt;
                     &lt;RichTextBoxAdv:TableCellAdv&gt;
                         &lt;RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                             &lt;RichTextBoxAdv:CellFormat CellWidth="200"/&gt;
                         &lt;/RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                         &lt;RichTextBoxAdv:ParagraphAdv&gt;
                             &lt;RichTextBoxAdv:SpanAdv&gt;Deer&lt;/RichTextBoxAdv:SpanAdv&gt;
                         &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                     &lt;/RichTextBoxAdv:TableCellAdv&gt;
                     &lt;RichTextBoxAdv:TableCellAdv&gt;
                         &lt;RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                             &lt;RichTextBoxAdv:CellFormat CellWidth="200"/&gt;
                         &lt;/RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                         &lt;RichTextBoxAdv:ParagraphAdv&gt;
                             &lt;RichTextBoxAdv:SpanAdv&gt;Herbivores&lt;/RichTextBoxAdv:SpanAdv&gt;
                         &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                     &lt;/RichTextBoxAdv:TableCellAdv&gt;
                 &lt;/RichTextBoxAdv:TableRowAdv&gt;
             &lt;/RichTextBoxAdv:TableAdv&gt; 
             </code>
             <code lang="C#">
             // Initialize a table.
             TableAdv tableAdv = new TableAdv();
            
             // Initialize a row.
             TableRowAdv tableRowAdv = new TableRowAdv();
            
             // Initialize a table cell.
             TableCellAdv tableCellAdv = new TableCellAdv();
             tableCellAdv.CellFormat.CellWidth = 200;
            
             // Initializes a paragraph.
             ParagraphAdv paragraphAdv = new ParagraphAdv();
             SpanAdv spanAdv = new SpanAdv();
             spanAdv.Text = "First cell in first row.";
             paragraphAdv.Inlines.Add(spanAdv);
            
             tableCellAdv.Blocks.Add(paragraphAdv);
             // Add any number of blocks to the cell.
            
             tableRowAdv.Cells.Add(tableCellAdv);
             // Add any number of cells to the row.
            
             tableAdv.Rows.Add(tableRowAdv);
             // Add any number of rows to the table.
             </code>
             <code lang="XAML">
             ' Initialize a table.
             Dim tableAdv As New TableAdv()
            
             ' Initialize a row.
             Dim tableRowAdv As New TableRowAdv()
            
             ' Initialize a table cell.
             Dim tableCellAdv As New TableCellAdv()
             tableCellAdv.CellFormat.CellWidth = 200
            
             ' Initializes a paragraph.
             Dim paragraphAdv As New ParagraphAdv()
             Dim spanAdv As New SpanAdv()
             spanAdv.Text = "First cell in first row."
             paragraphAdv.Inlines.Add(spanAdv)
            
             tableCellAdv.Blocks.Add(paragraphAdv)
             ' Add any number of blocks to the cell.
            
             tableRowAdv.Cells.Add(tableCellAdv)
             ' Add any number of cells to the row.
            
             tableAdv.Rows.Add(tableRowAdv)
             ' Add any number of rows to the table.
             </code>
             </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.Rows">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </summary>
            <returns>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </returns>
            <example>
            <para>The following code example demonstrates how to add table rows.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:TableAdv&gt;
                &lt;RichTextBoxAdv:TableRowAdv&gt;
                    &lt;RichTextBoxAdv:TableCellAdv&gt;
                        &lt;RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                            &lt;RichTextBoxAdv:CellFormat CellWidth="200"/&gt;
                        &lt;/RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                        &lt;RichTextBoxAdv:ParagraphAdv&gt;
                            &lt;RichTextBoxAdv:SpanAdv&gt;First cell in first row.&lt;/RichTextBoxAdv:SpanAdv&gt;
                        &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                    &lt;/RichTextBoxAdv:TableCellAdv&gt;
                &lt;/RichTextBoxAdv:TableRowAdv&gt;
            &lt;!-- Add any number of table rows. --&gt; 
            &lt;/RichTextBoxAdv:TableAdv&gt; 
            </code>
            <code lang="C#">
            // Initialize a table.
            TableAdv tableAdv = new TableAdv();
            // Initialize a row.
            TableRowAdv tableRowAdv = new TableRowAdv();
            // Initialize a table cell.
            TableCellAdv tableCellAdv = new TableCellAdv();
            tableCellAdv.CellFormat.CellWidth = 200;
            // Initializes a paragraph.
            ParagraphAdv paragraphAdv = new ParagraphAdv();
            SpanAdv spanAdv = new SpanAdv();
            spanAdv.Text = "First cell in first row.";
            paragraphAdv.Inlines.Add(spanAdv);
            tableCellAdv.Blocks.Add(paragraphAdv);
            tableRowAdv.Cells.Add(tableCellAdv);
            tableAdv.Rows.Add(tableRowAdv);
            // Add any number of rows to the table.
            </code>
            <code lang="VB">
            ' Initialize a table.
            Dim tableAdv As New TableAdv()
            ' Initialize a row.
            Dim tableRowAdv As New TableRowAdv()
            ' Initialize a table cell.
            Dim tableCellAdv As New TableCellAdv()
            tableCellAdv.CellFormat.CellWidth = 200
            ' Initializes a paragraph.
            Dim paragraphAdv As New ParagraphAdv()
            Dim spanAdv As New SpanAdv()
            spanAdv.Text = "First cell in first row."
            paragraphAdv.Inlines.Add(spanAdv)
            tableCellAdv.Blocks.Add(paragraphAdv)
            tableRowAdv.Cells.Add(tableCellAdv)
            tableAdv.Rows.Add(tableRowAdv)
            ' Add any number of rows to the table.
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.NestedLevel">
            <summary>
            Gets the nested level.
            </summary>
            <value>
            The nested level.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.TableHolder">
            <summary>
            Table Holder to hold columns
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.TableWidth">
            <summary>
            Gets the width of the table.
            </summary>
            <value>
            The width of the table.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.TableWidgets">
            <summary>
            Gets the table widgets.
            </summary>
            <value>
            The table widgets.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.TableFormat">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.TableFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.TableFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to define the table format.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:TableAdv&gt;
                &lt;!-- Define the table format. --&gt; 
                &lt;RichTextBoxAdv:TableAdv.TableFormat&gt;
                    &lt;RichTextBoxAdv:TableFormat Background="#FFFF0000" LeftIndent="24"/&gt;
                &lt;/RichTextBoxAdv:TableAdv.TableFormat&gt; 
                &lt;RichTextBoxAdv:TableRowAdv&gt;
                    &lt;RichTextBoxAdv:TableCellAdv&gt;
                        &lt;RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                            &lt;RichTextBoxAdv:CellFormat CellWidth="200"/&gt;
                        &lt;/RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                        &lt;RichTextBoxAdv:ParagraphAdv&gt;
                            &lt;RichTextBoxAdv:SpanAdv&gt;First cell in first row.&lt;/RichTextBoxAdv:SpanAdv&gt;
                        &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                    &lt;/RichTextBoxAdv:TableCellAdv&gt;
                &lt;/RichTextBoxAdv:TableRowAdv&gt;
            &lt;/RichTextBoxAdv:TableAdv&gt; 
            </code>
            <code lang="C#">
            // Initialize a table.
            TableAdv tableAdv = new TableAdv();
            
            // Define the table format.
            TableFormat tableFormat = new TableFormat();
            tableFormat.Background = Color.FromArgb(0xFF, 0xFF, 0x00, 0x00);
            tableFormat.LeftIndent = 24;
            tableAdv.TableFormat = tableFormat;
            
            // Initialize a row.
            TableRowAdv tableRowAdv = new TableRowAdv();
            // Initialize a table cell.
            TableCellAdv tableCellAdv = new TableCellAdv();
            tableCellAdv.CellFormat.CellWidth = 200;
            // Initializes a paragraph.
            ParagraphAdv paragraphAdv = new ParagraphAdv();
            SpanAdv spanAdv = new SpanAdv();
            spanAdv.Text = "First cell in first row.";
            paragraphAdv.Inlines.Add(spanAdv);
            tableCellAdv.Blocks.Add(paragraphAdv);
            tableRowAdv.Cells.Add(tableCellAdv);
            tableAdv.Rows.Add(tableRowAdv);
            </code>
            <code lang="VB">
            ' Initialize a table.
            Dim tableAdv As New TableAdv()
            
            ' Define the table format.
            Dim tableFormat As New TableFormat()
            tableFormat.Background = Color.FromArgb(&amp;HFF, &amp;HFF, &amp;H0, &amp;H0)
            tableFormat.LeftIndent = 24
            tableAdv.TableFormat = tableFormat
            
            ' Initialize a row.
            Dim tableRowAdv As New TableRowAdv()
            ' Initialize a table cell.
            Dim tableCellAdv As New TableCellAdv()
            tableCellAdv.CellFormat.CellWidth = 200
            ' Initializes a paragraph.
            Dim paragraphAdv As New ParagraphAdv()
            Dim spanAdv As New SpanAdv()
            spanAdv.Text = "First cell in first row."
            paragraphAdv.Inlines.Add(spanAdv)
            tableCellAdv.Blocks.Add(paragraphAdv)
            tableRowAdv.Cells.Add(tableCellAdv)
            tableAdv.Rows.Add(tableRowAdv)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.Header">
            <summary>
            Gets or Sets the header for the table.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.ContinueHeader">
            <summary>
            Gets or sets the continue header.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.HeaderHeight">
            <summary>
            Gets or sets the header height.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.Title">
            <summary>
            Gets or Sets the title of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.Description">
            <summary>
            Gets or Sets the description of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.IsTableGridUpdated">
            <summary>
            Gets or sets whether the table grid is updated or not.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.TableFormatProperty">
            <summary>
            Identifies the TableFormat dependency property.
            </summary>
            <returns>The identifier for the TableFormat dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.TitleProperty">
            <summary>
            Identifies the Title dependency property.
            </summary>
            <returns>The identifier for the Title dependency property.</returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.DescriptionProperty">
            <summary>
            Identifies the Description dependency property.
            </summary>
            <returns>The identifier for the Description dependency property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.OnTableFormatChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when table format changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv" /> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv" /> class with the specified 
            <paramref name="rowCount"/> and <paramref name="columnCount"/>.
            </summary>
            <param name="rowCount">The row count.</param>
            <param name="columnCount">The column count.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv" /> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.UpdateListParagraphs">
            <summary>
            Updates the list paragraphs.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.UpdateListItems(Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv)">
            <summary>
            Updates the list items.
            </summary>
            <param name="block">The block.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.UpdateRenderedListItems">
            <summary>
            Updates the rendered list items.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.LayoutItems(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Layouts the items.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.ClearWidgets">
            <summary>
            Clears the widgets.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.CombineTableWidgets(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget)">
            <summary>
            Combines the table widgets.
            </summary>
            <param name="cellWidget">The cell widget.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.ShiftWidgets(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Shifts the widgets.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.UpdateVerticalPositionToTop(System.Boolean)">
            <summary>
            Update the content vertical position of the cell
            </summary>
            <param name="isUpdateTop">When Updating to Top this parameter has to be true else false.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.GetTableWidth">
            <summary>
            Gets the width of the table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.FitCellsToClientArea(System.Double)">
            <summary>
            Fits the cells to client area.
            </summary>
            <param name="clientWidth">Width of the client.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.FitCellsToTableWidth">
            <summary>
            Fits the cells to table width.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.AddTableWidget(Windows.Foundation.Rect)">
            <summary>
            Adds the table widget.
            </summary>
            <param name="area">The area.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.UpdateWidgetToPage(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Updates the widget to page.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.CheckTableGrid">
            <summary>
            Checks the table grid.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.BuildTableGridColumns">
            <summary>
            Builds the table grid columns.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.SetDesiredWidthToCells">
            <summary>
            Sets the desired width to cells.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.GetLastBlockInLastCell">
            <summary>
            Gets the last block in last cell.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.GetLastParagraphInFirstRow">
            <summary>
            Gets the last paragraph in first row.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.GetLastParagraphInLastCell">
            <summary>
            Gets the last paragraph in last cell.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.GetFirstParagraphInLastRow">
            <summary>
            Gets the first paragraph in last row.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.GetFirstParagraphInFirstCell">
            <summary>
            Gets the first paragraph in first cell.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.GetFirstBlockInFirstCell">
            <summary>
            Gets the first block in first cell.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.Contains(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Determines whether table contains the specified table cell.
            </summary>
            <param name="tableCell">The table cell.</param>
            <returns>
              <c>true</c> if table contains the specified table cell; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.GetCellInTable(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Gets the cell in table.
            </summary>
            <param name="tableCell">The table cell.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.InsertTable(Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv,System.Boolean)">
            <summary>
            Inserts the table.
            </summary>
            <param name="table">The table.</param>
            <param name="moveRows">if set to <c>true</c> move rows to inserted table.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.GetParentTable">
            <summary>
            Gets the parent table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.FitChildsToClientArea">
            <summary>
            Fits the childs to client area.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.GetHeader">
            <summary>
            Gets the header.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.Highlight(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Highlights the specified selection.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.HighlightCells(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Highlights the cells.
            </summary>
            <param name="selection">The selection.</param>
            <param name="startCell">The start cell.</param>
            <param name="endCell">The end cell.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.Delete(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,System.Byte)">
            <summary>
            Deletes the specified selection.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="editAction">The edit action.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.Delete(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,System.Byte)">
            <summary>
            Deletes the specified selection.
            </summary>
            <param name="selection">The selection.</param>
            <param name="editAction">The edit action.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.SplitTable(Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv)">
            <summary>
            Splits the table.
            </summary>
            <param name="splitEndRow">The split end row.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.DeleteCells(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv,System.Byte)">
            <summary>
            Deletes the cells.
            </summary>
            <param name="selection">The selection.</param>
            <param name="startCell">The start cell.</param>
            <param name="endCell">The end cell.</param>
            <param name="editAction">The edit action.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.CloneTableToHistoryInfo(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo)">
            <summary>
            Clones the table to history info.
            </summary>
            <param name="baseHistoryInfo">The history info.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.CanMergeSelectedCells(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Determines whether the selected cells in this table can be merged.
            </summary>
            <param name="selection">The selection.</param>
            <param name="startCell">The start cell.</param>
            <param name="endCell">The end cell.</param>
            <returns>
              <c>true</c> if the selected cells in this table can be merged; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.MergeSelectedCells(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Merges the selected cells.
            </summary>
            <param name="selection">The selection.</param>
            <param name="startCell">The start cell.</param>
            <param name="endCell">The end cell.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.MergeBorders(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Merger the borders.
            </summary>
            <param name="mergedCell">the merge cell.</param>
            <param name="tableCellAdv">The table cell.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.ApplyCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Applies the character format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.ApplyCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Applies the character format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.ApplyCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv,Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Applies the character format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="startCell">The start cell.</param>
            <param name="endCell">The end cell.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.ApplyParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Applies the paragraph format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.ApplyParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Applies the paragraph format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.ApplyParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv,Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Applies the paragraph format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="startCell">The start cell.</param>
            <param name="endCell">The end cell.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.GetCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the character format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.GetCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the character format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="startCell">The start cell.</param>
            <param name="endCell">The end cell.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.GetParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the paragraph format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.GetParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Gets the paragraph format.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="selection">The selection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.GetParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Gets the paragraph format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="startCell">The start cell.</param>
            <param name="endCell">The end cell.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.GetCellFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the cell format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.GetRowFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the cell format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.CalculateGridOnly">
            <summary>
            Calculates the Grid Only.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.UpdateColumnSpans(System.Collections.Generic.List{System.Double})">
            <summary>
            Updates the ColumnSpan for all the cells.
            </summary>
            <param name="tempGrid"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.GetColumnCells(System.Int32,System.Boolean)">
            <summary>
            Gets the column cells.
            </summary>
            <param name="ColumnIndex"></param>
            <param name="isLeftSideCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.UpdateWidth(System.Double)">
            <summary>
            Updates the Width of this table.
            </summary>
            <param name="dragValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.GetMaxRowWidth(System.Boolean)">
            <summary>
            Gets the maximum row width.
            </summary>
            <param name="toUpdateGridAfter"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.UpdateRowsGridAfterWidth">
            <summary>
            Updates the GridAfterWidth for all the rows.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.IsColumnSelected(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Checks whether the column selected.
            </summary>
            <param name="columnIndex"></param>
            <param name="selection"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.GetLeastGridBefore(Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv)">
            <summary>
            Gets the least grid before. 
            </summary>
            <param name="ignoreRow">The row is not included to get the least grid before.</param>
            <returns>Th least grid before.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.GetColumnCellsForSelection(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Gets the column cells for selection.
            </summary>
            <param name="startCell"></param>
            <param name="endCell"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.RelayoutSelection(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Relayouts the selection.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start text position.</param>
            <param name="end">The end text position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.ConvertPixelToPercent(System.Double)">
            <summary>
            Converts the pixel value to percent.
            </summary>
            <param name="tablePreferredWidth"> the table preferred width.</param>
            <returns>The converted percent value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.ConvertPercentToPixel(System.Double)">
            <summary>
            Converts the percent values to pixel.
            </summary>
            <param name="tablePreferredWidth"> the tabke preferred width.</param>
            <returns>the converted pixel value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.GetOwnerWidth">
            <summary>
            Gets the owner width.
            </summary>
            <returns>The width.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv.GetTableClientWidth(System.Double)">
            <summary>
            Gets the table client width.
            </summary>
            <param name="clientWidth">The Clinet width.</param>
            <returns>The table client width.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> class.
            </summary>
            <example>
            <para>The following code example demonstrates how to define a table cell.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:TableCellAdv&gt;
                &lt;RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                   &lt;RichTextBoxAdv:CellFormat CellWidth="200"/&gt;
                &lt;/RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                &lt;RichTextBoxAdv:ParagraphAdv&gt;
                    &lt;RichTextBoxAdv:SpanAdv&gt;First cell in first row.&lt;/RichTextBoxAdv:SpanAdv&gt;
                &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                &lt;!-- Add any number of blocks to the table cell. --&gt; 
            &lt;/RichTextBoxAdv:TableCellAdv&gt;
            </code>
            <code lang="C#">
            // Initialize a table cell.
            TableCellAdv tableCellAdv = new TableCellAdv();
            tableCellAdv.CellFormat.CellWidth = 200;
            // Initializes a paragraph.
            ParagraphAdv paragraphAdv = new ParagraphAdv();
            SpanAdv spanAdv = new SpanAdv();
            spanAdv.Text = "First cell in first row.";
            paragraphAdv.Inlines.Add(spanAdv);
            tableCellAdv.Blocks.Add(paragraphAdv);
            // Add any number of blocks to the table cell.
            </code>
            <code lang="VB">
            ' Initialize a table cell.
            Dim tableCellAdv As New TableCellAdv()
            tableCellAdv.CellFormat.CellWidth = 200
            ' Initializes a paragraph.
            Dim paragraphAdv As New ParagraphAdv()
            Dim spanAdv As New SpanAdv()
            spanAdv.Text = "First cell in first row."
            paragraphAdv.Inlines.Add(spanAdv)
            tableCellAdv.Blocks.Add(paragraphAdv)
            ' Add any number of blocks to the table cell.
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.Section">
            <summary>
            Gets the section.
            </summary>
            <value>
            The section.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.IsInHeaderFooter">
            <summary>
            Gets a value indicating whether this instance is in header footer.
            </summary>
            <value>
            <c>true</c> if this instance is in header footer; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.OwnerRow">
            <summary>
            Gets the owner row.
            </summary>
            <value>
            The owner row.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.OwnerTable">
            <summary>
            Gets the owner table.
            </summary>
            <value>
            The owner table.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.Blocks">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>.
            </summary>
            <returns>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.CellIndex">
            <summary>
            Gets the index of the cell.
            </summary>
            <value>
            The index of the cell.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.IsLastCell">
            <summary>
            Gets a value indicating whether this instance is last cell.
            </summary>
            <value>
            <c>true</c> if this instance is last cell; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.ColumnIndex">
            <summary>
            Gets or sets the index of the column.
            </summary>
            <value>
            The index of the column.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.CellFormat">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.CellFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.CellFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.OwnerColumn">
            <summary>
            Gets the owner column.
            </summary>
            <value>
            The owner column.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.TableCellWidgets">
            <summary>
            Gets the table cell widgets.
            </summary>
            <value>
            The table cell widgets.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.LeftMargin">
            <summary>
            Gets the Left margin.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.RightMargin">
            <summary>
            Gets the Right margin.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.TopMargin">
            <summary>
            Gets the Top margin.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.BottomMargin">
            <summary>
            Gets the Bottom margin.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.CellFormatProperty">
            <summary>
            Identifies the CellFormat dependency property.
            </summary>
            <returns>The identifier for the CellFormat dependency property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.OnCellFormatChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when cell format changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv"/>.
            The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection"/>.
            </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.CombineTableCellWidgets(Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget)">
            <summary>
            Combines the table cell widgets.
            </summary>
            <param name="rowWidget">The row widget.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.ClearWidgets">
            <summary>
            Clears the widgets.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.UpdateCellVerticalPosition(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Update the cell vertical position based on vertical alignment
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.ApplyCellFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Applies the cell format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.GetNextCell">
            <summary>
            Gets the Next Cell.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.UpdateListItems(Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv)">
            <summary>
            Updates the list items.
            </summary>
            <param name="paragraph">The block.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.UpdateRenderedListItems">
            <summary>
            Updates the rendered list items.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.LayoutItems(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Layouts the items.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.LayoutItems(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer,System.Double,System.Double)">
            <summary>
            Layouts the items.
            </summary>
            <param name="viewer">The viewer.</param>
            <param name="maxCellMarginTop">The maxCellMarginTop.</param>
            <param name="maxCellMarginBottom">The maxCellMarginBottom.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.AddTableCellWidget(Windows.Foundation.Rect,System.Double,System.Double)">
            <summary>
            Adds the table cell widget.
            </summary>
            <param name="area">The area.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.UpdateWidgetToRow(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Updates the widget to row.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.GetBlankCell">
            <summary>
            Gets the blank cell.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.Contains(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Determines whether this cell contains the specified nested cell.
            </summary>
            <param name="cell">The cell.</param>
            <returns>
              <c>true</c> if this cell contains the specified nested cell; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.GetContainerCell">
            <summary>
            Gets the container cell.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.GetContainerCell(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Gets the container cell.
            </summary>
            <param name="tableCell">The table cell.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.GetSelectedCell(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Gets the selected cell.
            </summary>
            <param name="containerCell">The container cell.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.IsCellSelected(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Determines whether this cell is selected.
            </summary>
            <param name="startPosition">The start position.</param>
            <param name="endPosition">The end position.</param>
            <returns>
              <c>true</c> if this cell is selected; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.UpdateEditPosition(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Updates the edit position.
            </summary>
            <param name="selection">The selection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.GetNextSelection(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Gets the next selection.
            </summary>
            <param name="selection">The selection.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.GetPreviousSelection(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Gets the previous selection.
            </summary>
            <param name="selection">The selection.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.GetNextParagraph">
            <summary>
            Gets the next paragraph.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.GetPreviousParagraph">
            <summary>
            Gets the previous paragraph.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.GetFirstParagraph">
            <summary>
            Gets the first paragraph.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.GetFirstBlock">
            <summary>
            Gets the first block.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.GetLastParagraph">
            <summary>
            Gets the last paragraph.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.Highlight(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Highlights the specified selection.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.HighlightContainer(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Highlights the container.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.Highlight(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange)">
            <summary>
            Highlights the specified selection.
            </summary>
            <param name="selection">The selection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.Delete(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,System.Byte)">
            <summary>
            Deletes the specified selection.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="editAction">The edit action.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.DeleteContainer(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,System.Byte)">
            <summary>
            Deletes the container.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="editAction">The edit action.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.Delete(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,System.Byte,System.Boolean)">
            <summary>
            Deletes the specified selection.
            </summary>
            <param name="selection">The selection.</param>
            <param name="editAction">The edit action.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.ApplyCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Applies the character format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.ApplyCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Applies the character format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.GetCharacterFormatValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Gets the character format value.
            </summary>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.ApplyParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Applies the paragraph format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.ApplyParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Applies the paragraph format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.GetParagraphFormatValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Gets the paragraph format value.
            </summary>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.GetCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the character format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.GetCharacterFormatForSelection(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the character format for selection.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.GetParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the paragraph format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.GetParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Gets the paragraph format.
            </summary>
            <param name="selection">The selection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.IncreaseWidth(System.Double)">
            <summary>
            Increase width.
            </summary>
            <param name="dragValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.DecreaseWidth(System.Double)">
            <summary>
            Decrease the width.
            </summary>
            <param name="dragValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.GetWidth(System.Boolean)">
            <summary>
            Gets the Width of cell.
            </summary>
            <param name="isIncludeMargins"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.ConvertPixelToPercent(System.Double)">
            <summary>
            Converts the pixel value to percent.
            </summary>
            <param name="cellPreferredWidth"> the table preferred width.</param>
            <returns>The converted percent value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.ConvertPercentToPixel(System.Double)">
            <summary>
            Converts the percent values to pixel.
            </summary>
            <param name="cellPreferredWidth"> the tabke preferred width.</param>
            <returns>the converted pixel value.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.GetLeftBorderWidth">
            <summary>
            Gets the rendred left border width for the cell.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv.GetRightBorderWidth">
            <summary>
            Gets the rendred right border width for the cell.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableColumnAdv.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableColumnAdv.PreferredWidth">
            <summary>
            It gets /sets the Preferred width of the Column.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableColumnAdv.MinWidth">
            <summary>
            It gets / sets the MinWidth of the Column.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableColumnAdv.MaxWidth">
            <summary>
            It gets/sets the MaxWidth of the Column.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableHolder.Columns">
            <summary>
            Gets or sets the columns.
            </summary>
            <value>
            The columns.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableHolder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableHolder"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableHolder.GetPreviousSpannedCellWidth(System.Int32,System.Int32)">
            <summary>
            Gets the width of the previous spanned cell.
            </summary>
            <param name="prevColumnIndex">Index of the prev column.</param>
            <param name="curColumnIndex">Index of the cur column.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableHolder.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableLayoutCalculator.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableLayoutCalculator.MeasureParagraphBreadths(Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv)">
            <summary>
            Measures the Breadths of the Paragraph
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableLayoutCalculator.MeasureTableOnAutoMode(Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv,System.Double)">
            <summary>
            Arranges the Table layout
            </summary>
            <param name="table"></param>
            <param name="width"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableLayoutCalculator.SumOfPreferredWidths(Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv)">
            <summary>
            Adds the preferred width of the columns
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableLayoutCalculator.MeasureTableBreadths(Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv,System.Double)">
            <summary>
            It measures the Breadths of the Table
            </summary>
            <param name="table"></param>
            <param name="width"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableLayoutCalculator.MeasureTableCellBreadths(Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv,System.Double)">
            <summary>
            It measures the TableCell's breadths
            </summary>
            <param name="table"></param>
            <param name="cell"></param>
            <param name="available"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableLayoutCalculator.MeasureCellBlockBreadths(Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv,System.Double)">
            <summary>
            It measures the Block's breadths inside the TableCell
            </summary>
            <param name="maintable"></param>
            <param name="cellblock"></param>
            <param name="available"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableLayoutCalculator.UpdateColumnBreadths(Syncfusion.UI.Xaml.RichTextBoxAdv.BreadthsInfo,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv,System.Int32)">
            <summary>
            It updates the Column's Breadths
            </summary>
            <param name="cellbreadths"></param>
            <param name="cell"></param>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableLayoutCalculator.SpreadWidthToRemainingRows(Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv,System.Double)">
            <summary>
            It spreads the Column width to remaining rows
            </summary>
            <param name="table"></param>
            <param name="width"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableLayoutCalculator.EnlargeTableWidth(Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv,System.Double)">
            <summary>
            It enlarges the TableWidth
            </summary>
            <param name="table"></param>
            <param name="width"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.GridBeforeWidth">
            <summary>
            Gets or sets the width of the grid before.
            </summary>
            <value>
            The width of the grid before.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.GridBefore">
            <summary>
            Gets or sets the grid before.
            </summary>
            <value>
            The grid before.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.GridAfter">
            <summary>
            Gets or sets the grid after.
            </summary>
            <value>
            The grid after.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.GridAfterWidth">
            <summary>
            Gets or sets the width of the grid after.
            </summary>
            <value>
            The width of the grid after.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.Cells">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/>.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdvCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/>.
            </value>
            <example>
            <para>The following code example demonstrates how to add table cells.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:TableRowAdv&gt;
                &lt;RichTextBoxAdv:TableCellAdv&gt;
                    &lt;RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                        &lt;RichTextBoxAdv:CellFormat CellWidth="200"/&gt;
                    &lt;/RichTextBoxAdv:TableCellAdv.CellFormat&gt;
                    &lt;RichTextBoxAdv:ParagraphAdv&gt;
                        &lt;RichTextBoxAdv:SpanAdv&gt;First cell in first row.&lt;/RichTextBoxAdv:SpanAdv&gt;
                    &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                &lt;/RichTextBoxAdv:TableCellAdv&gt;
                &lt;!-- Add any number of table cells. --&gt; 
            &lt;/RichTextBoxAdv:TableRowAdv&gt;
            </code>
            <code lang="C#">
            // Initialize a row.
            TableRowAdv tableRowAdv = new TableRowAdv();
            // Initialize a table cell.
            TableCellAdv tableCellAdv = new TableCellAdv();
            tableCellAdv.CellFormat.CellWidth = 200;
            // Initializes a paragraph.
            ParagraphAdv paragraphAdv = new ParagraphAdv();
            SpanAdv spanAdv = new SpanAdv();
            spanAdv.Text = "First cell in first row.";
            paragraphAdv.Inlines.Add(spanAdv);
            tableCellAdv.Blocks.Add(paragraphAdv);
            tableRowAdv.Cells.Add(tableCellAdv);
            // Add any number of cells to the row.
            </code>
            <code lang="VB">
            ' Initialize a row.
            Dim tableRowAdv As New TableRowAdv()
            ' Initialize a table cell.
            Dim tableCellAdv As New TableCellAdv()
            tableCellAdv.CellFormat.CellWidth = 200
            ' Initializes a paragraph.
            Dim paragraphAdv As New ParagraphAdv()
            Dim spanAdv As New SpanAdv()
            spanAdv.Text = "First cell in first row."
            paragraphAdv.Inlines.Add(spanAdv)
            tableCellAdv.Blocks.Add(paragraphAdv)
            tableRowAdv.Cells.Add(tableCellAdv)
            ' Add any number of cells to the row.
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.OwnerTable">
            <summary>
            Gets the owner <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/>.
            </summary>
            <returns>
            The owner <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.RowFormat">
            <summary>
            Gets or Sets the row format.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.TableRowWidgets">
            <summary>
            Gets the table row widgets.
            </summary>
            <value>
            The table row widgets.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.RowIndex">
            <summary>
            Gets the index of the row.
            </summary>
            <value>
            The index of the row.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Node"/>.
            </summary>
            <param name="owner">
            The owner of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv"/>.
            The value can be null or an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdvCollection"/>.
            </param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.RowFormatProperty">
            <summary>
            Identifies the RowFormat dependency property.
            </summary>
            <returns>The identifier for the RowFormat dependency property.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.OnRowFormatChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when row format changed.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.ApplyRowFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Applies the Row format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.CombineTableRowWidgets(Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget)">
            <summary>
            Combines the table row widgets.
            </summary>
            <param name="tableWidget">The table widget.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.ClearWidgets">
            <summary>
            Clears the widgets.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.UpdateListItems(Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv)">
            <summary>
            Updates the list items.
            </summary>
            <param name="block">The block.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.UpdateRenderedListItems">
            <summary>
            Updates the rendered list items.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.LayoutItems(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Layouts the items.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.GetMaxTopOrBottomCellMargin(System.Byte)">
            <summary>
            Get the maximum value of top and bottom margin value form the row.
            </summary>
            <param name="topOrBottom">The topOrBottom.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.IsVerticalMergedCellContinue">
            <summary>
            Determines whether any vertical merged cell continued in the row.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.Layout(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Layouts the specified viewer.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.Layout(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer,System.Boolean)">
            <summary>
            Layouts the specified viewer.
            </summary>
            <param name="viewer">The viewer.</param>
            <param name="ShiftNextWidget">The ShiftNextWidget.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.LayoutNextItems(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Layouts the next items.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.AddTableRowWidget(Windows.Foundation.Rect)">
            <summary>
            Adds the table row widget.
            </summary>
            <param name="area">The area.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.AddWidgetToTable(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer,Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget)">
            <summary>
            Adds the widget to table.
            </summary>
            <param name="viewer">The viewer.</param>
            <param name="tableRowWidget">The table row widget.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.UpdateRowHeightByCellSpacing(Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget,Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Update the row height when cell spacing is greater than 0.
            </summary>
            <param name="rowWidget">The rowWidget.</param>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.UpdateRowHeightBySpannedCell(Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget,Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget,System.Int32)">
            <summary>
            Updates the row height by spanned cell.
            </summary>
            <param name="tableWidget">The table widget.</param>
            <param name="rowWidget">The row widget.</param>
            <param name="insertIndex">Index of the insert.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.UpdateRowHeight(Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget,Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget)">
            <summary>
            Updates the height of the row.
            </summary>
            <param name="prevRowWidget">The previous row widget.</param>
            <param name="rowWidget">The row widget.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.IsRowSpanEnd(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Determines whether row span ends with this row.
            </summary>
            <param name="viewer">The viewer.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.UpdateWidgetToTable(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Updates the widget to table.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.SplitWidget(Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget,Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer,Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget@)">
            <summary>
            Splits the widget.
            </summary>
            <param name="tableRowWidget">The row widget.</param>
            <param name="viewer">The viewer.</param>
            <param name="splittedWidget">The Splitted widget.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.GetRowHeight">
            <summary>
            Gets the visual height of the row.
            </summary>
            <returns>The height of row.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.GetHeaderHeight(Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv)">
            <summary>
            Gets the header row height.
            </summary>
            <param name="OwnerTable"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.GetBlankRow">
            <summary>
            Gets the blank row.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.GetNextSelection(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Gets the next selection.
            </summary>
            <param name="selection">The selection.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.GetNextParagraph(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Gets the next paragraph.
            </summary>
            <param name="selection">The selection.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.GetPreviousSelection(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Gets the previous selection.
            </summary>
            <param name="selection">The selection.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.GetPreviousParagraph(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Gets the previous paragraph.
            </summary>
            <param name="selection">The selection.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.GetNextParagraph">
            <summary>
            Gets the next paragraph.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.GetPreviousParagraph">
            <summary>
            Gets the previous paragraph.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.Contains(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Determines whether this row contains the specified table cell.
            </summary>
            <param name="tableCell">The table cell.</param>
            <returns>
              <c>true</c> if this row contains the specified table cell; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.GetFirstCellInRegion(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv,System.Double,System.Boolean)">
            <summary>
            Gets the first cell in region.
            </summary>
            <param name="startCell">The start cell.</param>
            <param name="selectionLength">Length of the selection.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.GetLastCellInRegion(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv,System.Double,System.Boolean)">
            <summary>
            Gets the last cell in region.
            </summary>
            <param name="startCell">The start cell.</param>
            <param name="selectionLength">Length of the selection.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.GetCellLeft(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Gets the cell left.
            </summary>
            <param name="cell">The cell.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.Highlight(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Highlights the specified selection.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.Highlight(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange,System.Double,System.Double)">
            <summary>
            Highlights the specified selection.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.ApplyCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Applies the character format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.ApplyParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Applies the paragraph format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.GetCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the character format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.GetParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the paragraph format.
            </summary>
            <param name="selection">The selection.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.GetGridCount(System.Collections.Generic.List{System.Double},System.Int32)">
            <summary>
            Gets the Grid count value.
            </summary>
            <param name="tableGrid"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.GetOffsetIndex(System.Collections.Generic.List{System.Double},System.Double)">
            <summary>
            Gets the offset index.
            </summary>
            <param name="tableGrid"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.GetCellOffset(System.Int32)">
            <summary>
            Gets the cells offset.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.UpdateGridAfter">
            <summary>
            Update sthe Grid After value.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.UpdateGridBefore(System.Double)">
            <summary>
            Updates the Grid Before value.
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.GetRowWidth(System.Boolean)">
            <summary>
            Gets the row width.
            </summary>
            <param name="toUpdateGridAfter"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv.UpdateHeight(System.Double)">
            <summary>
            Updated the height of row.
            </summary>
            <param name="dragValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DrawingExtensions.FillRectangle(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,Windows.UI.Color)">
            <summary>
            Draws a filled rectangle.
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DrawingExtensions.FillRectangle(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a filled rectangle.
            x2 has to be greater than x1 and y2 has to be greater than y1.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the bounding rectangle's left side.</param>
            <param name="y1">The y-coordinate of the bounding rectangle's top side.</param>
            <param name="x2">The x-coordinate of the bounding rectangle's right side.</param>
            <param name="y2">The y-coordinate of the bounding rectangle's bottom side.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DrawingExtensions.DrawLine(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,Windows.UI.Color)">
            <summary>
            Draws a colored line by connecting two points using an optimized DDA.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DrawingExtensions.DrawLine(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a colored line by connecting two points using an optimized DDA.
            </summary>
            <param name="bmp">The WriteableBitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DrawingExtensions.DrawLine(System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a colored line by connecting two points using an optimized DDA. 
            Uses the pixels array and the width directly for best performance.
            </summary>
            <param name="pixels">An array containing the pixels as int RGBA value.</param>
            <param name="pixelWidth">The width of one scanline in the pixels array.</param>
            <param name="pixelHeight">The height of the bitmap.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <param name="color">The color for the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DrawingExtensions.GetBitmapContext(Windows.UI.Xaml.Media.Imaging.WriteableBitmap)">
            <summary>
            Gets a BitmapContext within which to perform nested IO operations on the bitmap
            </summary>
            <remarks>For WPF the BitmapContext will lock the bitmap. Call Dispose on the context to unlock</remarks>
            <param name="bmp"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ReadWriteMode">
            <summary>
            Read Write Mode for the BitmapContext.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ReadWriteMode.ReadOnly">
            <summary>
            On Dispose of a BitmapContext, do not Invalidate
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.ReadWriteMode.ReadWrite">
            <summary>
            On Dispose of a BitmapContext, invalidate the bitmap
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BitmapContext.WriteableBitmap">
            <summary>
            The Bitmap
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BitmapContext.Width">
            <summary>
            Width of the bitmap
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BitmapContext.Height">
            <summary>
            Height of the bitmap
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BitmapContext.#ctor(Windows.UI.Xaml.Media.Imaging.WriteableBitmap)">
            <summary>
            Creates an instance of a BitmapContext, with default mode = ReadWrite
            </summary>
            <param name="writeableBitmap"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BitmapContext.#ctor(Windows.UI.Xaml.Media.Imaging.WriteableBitmap,Syncfusion.UI.Xaml.RichTextBoxAdv.ReadWriteMode)">
            <summary>
            Creates an instance of a BitmapContext, with specified ReadWriteMode
            </summary>
            <param name="writeableBitmap"></param>
            <param name="mode"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BitmapContext.Pixels">
            <summary>
            Gets the Pixels array 
            </summary>        
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BitmapContext.Length">
            <summary>
            Gets the length of the Pixels array 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BitmapContext.Clear">
            <summary>
            Clears the BitmapContext, filling the underlying bitmap with zeros
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BitmapContext.Dispose">
            <summary>
            Disposes this instance if the underlying platform needs that.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Widget.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Widget"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Widget.GetLineWidget(Windows.Foundation.Point)">
            <summary>
            Gets the line widget.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Widget.GetTableCellWidget(Windows.Foundation.Point,System.Boolean)">
            <summary>
            Gets the table cell widget.
            </summary>
            <param name="point"></param>
            <param name="pageLayout"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Widget.RemoveWidget(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Removes the widget.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Widget.GetPage">
            <summary>
            Gets the page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Widget.GetCellWidget">
            <summary>
            Gets the cell widget.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Widget.UpdateWidgetLocation(Windows.Foundation.Rect)">
            <summary>
            Updates the widget location.
            </summary>
            <param name="area">The area.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Widget.UpdateWidgetLocation(Syncfusion.UI.Xaml.RichTextBoxAdv.Widget)">
            <summary>
            Updates the widget location.
            </summary>
            <param name="widget">The widget.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Widget.ClearChildSelectionHighlight(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Clears the child selection highlight.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Widget.UpdateContainerWidget(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget)">
            <summary>
            Updates the container widget.
            </summary>
            <param name="cellWidget">The cell widget.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Widget.UpdateContainerWidget(Syncfusion.UI.Xaml.RichTextBoxAdv.BodyWidget,System.Int32)">
            <summary>
            Updates the container widget.
            </summary>
            <param name="bodyWidget">The body widget.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget"/> class.
            </summary>
            <param name="paragraphAdv">The paragraph adv.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget.ShiftChildsToWidget(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget)">
            <summary>
            Shifts the childs to widget.
            </summary>
            <param name="destinationWidget">The destination widget.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget.IsFitInClientArea(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Determines whether this widget fit in client area.
            </summary>
            <param name="viewer">The viewer.</param>
            <returns>
              <c>true</c> if this widget fit in client area; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget.ShiftToPreviousWidget(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer,Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget)">
            <summary>
            Shifts to previous widget.
            </summary>
            <param name="viewer">The viewer.</param>
            <param name="prevWidget">The prev widget.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget.SplitWidget(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer,Syncfusion.UI.Xaml.RichTextBoxAdv.BodyWidget,System.Int32)">
            <summary>
            Splits the widget.
            </summary>
            <param name="viewer">The viewer.</param>
            <param name="prevBodyWidget">The prev body widget.</param>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget.Highlight(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange,System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget,Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox,System.Int32)">
            <summary>
            Highlights the specified selection.
            </summary>
            <param name="selection">The selection.</param>
            <param name="startIndex">The start index.</param>
            <param name="endLine">The end line.</param>
            <param name="endElement">The end element.</param>
            <param name="endIndex">The end index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget.HighlightSearchResult(Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult,System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget,Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox,System.Int32)">
            <summary>
            Highlights the search result.
            </summary>
            <param name="searchResult">The search result.</param>
            <param name="startIndex">The start index.</param>
            <param name="endLine">The end line.</param>
            <param name="endElement">The end element.</param>
            <param name="endIndex">The end index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget.GetLineWidget(Windows.Foundation.Point)">
            <summary>
            Gets the line widget.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget.GetTableCellWidget(Windows.Foundation.Point,System.Boolean)">
            <summary>
            Gets the table cell widgets.
            </summary>
            <param name="point"></param>
            <param name="pageLayout"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget.RemoveWidget(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Removes the widget.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="clipHeight">The Clip height.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget.RenderProofingErrors(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            renders the proofing for specified page.
            </summary>
            <param name="viewer"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget.RenderProofingErrors(Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer)">
            <summary>
            renders the proofing for specified page.
            </summary>
            <param name="viewer"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget.IsFirstLineFit(System.Double)">
            <summary>
            Determines whether the first line fit in the specified bottom.
            </summary>
            <param name="bottom">The bottom.</param>
            <returns>
              <c>true</c> if the first line fit in the specified bottom; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget.GetSplittedWidget(System.Double)">
            <summary>
            Gets the splitted widget.
            </summary>
            <param name="bottom">The bottom.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooterWidget.HeaderFooter">
            <summary>
            Gets the header footer.
            </summary>
            <value>
            The header footer.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooterWidget.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooter)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HeaderFooterWidget"/> class.
            </summary>
            <param name="ownerHeaderFooter">The owner header footer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BodyWidget.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.BodyWidget"/> class.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BodyWidget.CreateOrGetNextBodyWiget(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Creates the or get next body wiget.
            </summary>
            <param name="viewer">The viewer.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BodyWidget.GetLineWidget(Windows.Foundation.Point)">
            <summary>
            Gets the line widget.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BodyWidget.GetTableCellWidget(Windows.Foundation.Point,System.Boolean)">
            <summary>
            Gets the Table cell widget.
            </summary>
            <param name="point"></param>
            <param name="pageLayout"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BodyWidget.GetTableWidget(Windows.Foundation.Point,System.Boolean)">
            <summary>
            Gets the table  widget.
            </summary>
            <param name="point"></param>
            <param name="pageLayout"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BodyWidget.RemoveWidget(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Removes the widget.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BodyWidget.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BodyWidget.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BodyWidget.UpdateHorizontalWidth(System.Collections.Generic.List{Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget},Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Updates the horizontal width
            </summary>
            <param name="viewer">The viewer.</param>
            <param name="parawidgets">The parawidgets.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BodyWidget.RenderProofingErrors(Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer)">
            <summary>
            renders the proofing for specified page.
            </summary>
            <param name="viewer"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BodyWidget.RenderProofingErrors(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            Renders the proofing specified page.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BodyWidget.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv)">
            <summary>
            Renders the specified text box container.
            </summary>
            <param name="textBox"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BodyWidget.RenderProofingErrors(Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv)">
            <summary>
            Renders the specified text box container.
            </summary>
            <param name="textBox"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BodyWidget.ShiftChildLocation(System.Double)">
            <summary>
            Shifts the child location.
            </summary>
            <param name="shiftTop">The shift top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BodyWidget.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget"/> class.
            </summary>
            <param name="tableAdv">The table adv.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget.GetLineWidget(Windows.Foundation.Point)">
            <summary>
            Gets the line widget.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget.GetTableCellWidget(Windows.Foundation.Point,System.Boolean)">
            <summary>
            Gets the table cell widget.
            </summary>
            <param name="point"></param>
            <param name="pageLayout"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget.RemoveWidget(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Removes the widget.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget.UpdateHeight(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Updates the height.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget.RenderHeader(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv)">
            <summary>
            Renders the repeader header specified page.
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget.RenderProofingErrors(Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer)">
            <summary>
            Renders the proofing specified page.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget.RenderProofingErrors(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            Renders the proofing for specified page.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget.GetSplittedWidget(System.Double)">
            <summary>
            Gets the splitted widget.
            </summary>
            <param name="bottom">The bottom.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget.UpdateChildLocation(System.Double)">
            <summary>
            Updates the child location.
            </summary>
            <param name="top">The top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget.ShiftChildLocation(System.Double)">
            <summary>
            Shifts the child location.
            </summary>
            <param name="shiftTop">The shift top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget.IsFirstLineFit(System.Double)">
            <summary>
            Determines whether the first line fit in the specified bottom.
            </summary>
            <param name="bottom">The bottom.</param>
            <returns>
              <c>true</c> if the first line fit in the specified bottom; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget.RenderTableOutline(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Render the Table Outline for current page
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget.RenderTableOutline(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            Sets the height and width of the rectange and position the table rectangle
            </summary>
            <param name="Page">The Page</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget.RenderTableOutline(Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv)">
            <summary>
            Renders the table outline.
            </summary>
            <param name="textBox">The page.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget.RenderTableOutlineForCanvas(Windows.UI.Xaml.Controls.Canvas)">
            <summary>
            Renders the table outline.
            </summary>
            <param name="canvas">The canvas.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget"/> class.
            </summary>
            <param name="tableRowAdv">The table row adv.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget.UpdateTableWidget(Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget,System.Int32)">
            <summary>
            Updates the table widget.
            </summary>
            <param name="tableWidget">The table widget.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget.GetLineWidget(Windows.Foundation.Point)">
            <summary>
            Gets the line widget.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget.GetTableCellWidget(Windows.Foundation.Point,System.Boolean)">
            <summary>
            Gets the table cell widget.
            </summary>
            <param name="point"></param>
            <param name="pageLayout"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget.RemoveWidget(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Removes the widget.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget.InsertSplittedCellWidgets(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Inserts the splitted cell widgets.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget.InsertRowSpannedWidget(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer,System.Double,System.Int32)">
            <summary>
            Inserts the row spanned widget.
            </summary>
            <param name="viewer">The viewer.</param>
            <param name="left">The left.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget.InsertEmptySplittedCellWidget(System.Double,System.Int32)">
            <summary>
            Inserts the empty splitted cell widget.
            </summary>
            <param name="left">The left.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget.UpdateHeight(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer,System.Boolean)">
            <summary>
            Updates the height.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget.SplitSpannedCellWidget(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget,Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Splits the spanned cell widget.
            </summary>
            <param name="cellWidget">The cell widget.</param>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget.UpdateChildLocation(System.Double)">
            <summary>
            Updates the child location.
            </summary>
            <param name="top">The top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget.ShiftChildLocation(System.Double)">
            <summary>
            Shifts the child location.
            </summary>
            <param name="shiftTop">The shift top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget.IsFirstLineFit(System.Double)">
            <summary>
            Determines whether the first line fit in the specified bottom.
            </summary>
            <param name="bottom">The bottom.</param>
            <returns>
              <c>true</c> if the first line fit in the specified bottom; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget.GetSplittedWidget(System.Double)">
            <summary>
            Gets the splitted widget.
            </summary>
            <param name="bottom">The bottom.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget.GetActualWidth">
            <summary>
            Gets the rendered width of Row widget.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget"/> class.
            </summary>
            <param name="tableCellAdv">The table cell adv.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.UpdateWidgetHeight">
            <summary>
            Updates the height of the widget.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.UpdateTableRowWidget(Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowWidget,System.Int32)">
            <summary>
            Updates the table row widget.
            </summary>
            <param name="rowWidget">The row widget.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.Highlight(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange)">
            <summary>
            Highlights the specified selection.
            </summary>
            <param name="selection">The selection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.GetFirstLineWidget">
            <summary>
            Gets the first line widget.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.GetLastLineWidget">
            <summary>
            Gets the last line widget.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.GetLineWidget(Windows.Foundation.Point)">
            <summary>
            Gets the line widget.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.GetTableCellWidget(Windows.Foundation.Point,System.Boolean)">
            <summary>
            Gets the table cell widgets
            </summary>
            <param name="point"></param>
            <param name="pageLayout"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.RemoveWidget(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Removes the widget.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.UpdateHeight(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Updates the height.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.RenderProofingErrors(Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer)">
            <summary>
            Renders the Proofing specified page.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="clipHeight">The Clip Height.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.RenderTableCellOutline(Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv)">
            <summary>
            Renders the table cell outline.
            </summary>
            <param name="textBox">The page.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.RenderCellBorders(Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv,System.Collections.Generic.List{Windows.UI.Xaml.FrameworkElement})">
            <summary>
            Renders the cell borders for textboxcontainer.
            </summary>
            <param name="textBox">the textbox.</param>
            <param name="renderedElements">the rendred elements.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.RenderSingleBorder(Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.Border,Windows.Foundation.Point,Windows.Foundation.Point,System.Double,System.Collections.Generic.List{Windows.UI.Xaml.FrameworkElement})">
            <summary>
            Renders the single border for textbox.
            </summary>
            <param name="textBox">The textbox.</param>
            <param name="border">the border.</param>
            <param name="startPoint">The starting point.</param>
            <param name="endPoint">The end point.</param>
            <param name="lineWidth">The line width.</param>
            <param name="renderedElements">the rendered elements.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv)">
            <summary>
            Renders the specified text box.
            </summary>
            <param name="textBox">The text box.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.RenderProofingErrors(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            Renders the proofing specified page.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.RenderProofingErrors(Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv)">
            <summary>
            Renders the specified text box.
            </summary>
            <param name="textBox">The text box.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.RenderTableCellOutline(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            Renders the table cell outline.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.RenderCellBorders(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Collections.Generic.List{Windows.UI.Xaml.FrameworkElement})">
            <summary>
            Renders the Cell borders for page.
            </summary>
            <param name="page">The page.</param>
            <param name="renderedElements">The rendered elements.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.RenderSingleBorder(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.Border,Windows.Foundation.Point,Windows.Foundation.Point,System.Double,System.Collections.Generic.List{Windows.UI.Xaml.FrameworkElement})">
            <summary>
            Renders the border for page.
            </summary>
            <param name="page">The page.</param>
            <param name="border">The border.</param>
            <param name="startPoint">The starting point.</param>
            <param name="endPoint">The ending point.</param>
            <param name="lineWidth">The line width.</param>
            <param name="renderedElements">the rendered elements.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.ShiftChildLocation(System.Double)">
            <summary>
            Shifts the child location.
            </summary>
            <param name="shiftTop">The shift top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.UpdateChildLocation(System.Double)">
            <summary>
            Updates the child location.
            </summary>
            <param name="top">The top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.IsFirstLineFit(System.Double)">
            <summary>
            Determines whether the first line fit in the specified bottom.
            </summary>
            <param name="bottom">The bottom.</param>
            <returns>
              <c>true</c> if the first line fit in the specified bottom; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.GetSplittedWidget(System.Double,System.Boolean)">
            <summary>
            Gets the splitted widget.
            </summary>
            <param name="bottom">The bottom.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.CreateCellWidget">
            <summary>
            Creates the cell widget.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.ClearSelectionHighlight(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Clears the selection highlight.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.UpdateCellVerticalPosition(System.Boolean,System.Boolean)" -->
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.GetDisplacement(System.Boolean)">
            <summary>
            Calculate the displacement and return the displacement values
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.GetCellContentHeight">
            <summary>
            Gets the Height of Cell widget and return the height
            </summary>
            <param name="TableCellWidget">The cell widget.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.UpdateCellContentVerticalPosition(System.Double,System.Boolean)">
            <summary>
            Update the Location of the cell contents
            </summary>
            <param name="TableCellWidget">The cell widget.</param>
            <param name="double">displacement.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.UpdateTableWidgetLocation(Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget,System.Double,System.Boolean)">
            <summary>
            Update the loacation of table with in cell
            </summary>
            <param name="TableCellWidget">The cell widget.</param>
            <param name="double">displacement.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget"/> class.
            </summary>
            <param name="paragraphWidget">The paragraph widget.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.UpdateParagraphWidget(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphWidget,System.Int32)">
            <summary>
            Updates the paragraph widget.
            </summary>
            <param name="newParagraphWidget">The new paragraph widget.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.GetMaxElementHeight">
            <summary>
            Gets the height of the max element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.UpdateSubWidth(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Updates the sub width
            </summary>
            <param name="viewer">The viewer.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.GetUnderlineYPosition">
            <summary>
            Gets the underline Y position.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.GetTop">
            <summary>
            Gets the top.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.GetLineStartLeft">
            <summary>
            Gets the current line start left.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.GetLeft">
            <summary>
            Gets the left of text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.GetLeft(Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox,System.Int32)">
            <summary>
            Gets the left.
            </summary>
            <param name="elementBox">The element box.</param>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.GetWidth(System.Boolean)">
            <summary>
            Gets the width.
            </summary>
            <param name="includeParagraphMark">if set to <c>true</c> [include paragraph mark].</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.GetFirstElement">
            <summary>
            Gets the first element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.GetFirstElement(System.Double@)">
            <summary>
            Gets the first element.
            </summary>
            <param name="left">The left.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.GetHyperlinkField(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv,Windows.Foundation.Point)">
            <summary>
            Gets the hyperlink field.
            </summary>
            <param name="rte">The rte.</param>
            <param name="cursorPosition">The cursor position.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.UpdateTextPosition(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline@,System.Int32@,Windows.Foundation.Point@,System.Boolean)">
            <summary>
            Updates the text position.
            </summary>
            <param name="rte">The rte.</param>
            <param name="inline">The inline.</param>
            <param name="index">The index.</param>
            <param name="caretPosition">The caret position.</param>
            <param name="includeParagraphMark">if set to <c>true</c> [include paragraph mark].</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.UpdateTextPosition(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv,Windows.Foundation.Point,System.Boolean)">
            <summary>
            Updates the text position.
            </summary>
            <param name="rte">The rte.</param>
            <param name="point">The point.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.UpdateTextPosition(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv,Windows.Foundation.Point,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,System.Boolean)">
            <summary>
            Updates the text position.
            </summary>
            <param name="rte">The rte.</param>
            <param name="point">The point.</param>
            <param name="textPosition">The text position.</param>
            <param name="includeParagraphMark">if set to <c>true</c> [include paragraph mark].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.GetTextLength(Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox)">
            <summary>
            Gets the length of the text.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.ClearSelectionHighlight(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Clears the selection highlight.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.ClearSearchHighlight(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Clears the search highlight.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double,System.Double)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double,System.Double,System.Double)">
            <summary>
            Renders the Specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="clipHeight">The clip height.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.RenderProofingErrors(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double,System.Double)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.RemoveWidget(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Removes the widget.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv,System.Double,System.Double)">
            <summary>
            Renders the specified text box adv.
            </summary>
            <param name="textBoxAdv">The text box adv.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.RenderProofingErrors(Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv,System.Double,System.Double)">
            <summary>
            Renders the specified text box adv.
            </summary>
            <param name="textBoxAdv">The text box adv.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.Dispose(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.ClearChildWidgets(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer,Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox)">
            <summary>
            Clears the child widgets.
            </summary>
            <param name="viewer">The viewer.</param>
            <param name="prevElement">The prev element.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.PreservePreviousElements(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Preserves the previous elements.
            </summary>
            <param name="viewer">The viewer.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.IsParagraphFirstLine">
            <summary>
            Determines whether [is paragraph first line].
            </summary>
            <returns>
              <c>true</c> if [is paragraph first line]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox.Inline">
            <summary>
            Gets the inline.
            </summary>
            <value>
            The inline.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox" /> class.
            </summary>
            <param name="baseNode">The base node.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double,System.Double,System.Double)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="underlineY">The underlineY.</param>
            <param name="clipHeight">The clip height.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv,System.Double,System.Double,System.Double)">
            <summary>
            Renders the specified text box.
            </summary>
            <param name="textBox">The text box.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox.Dispose(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox.GetIndexInInline">
            <summary>
            Gets the index in inline.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox.RenderHighlightElement(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double,System.Double,Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat,System.Collections.Generic.List{Windows.UI.Xaml.FrameworkElement})">
            <summary>
            Renders the highlight element.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="format">The format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox.RenderHighlightElement(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double,System.Double,Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat,System.Collections.Generic.List{Windows.UI.Xaml.FrameworkElement},System.Double)">
            <summary>
            Renders the highlight element.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="format">The format.</param>
            <param name="clipHeight">The clip height.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox.RenderStrikeThrough(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double,System.Double,Syncfusion.UI.Xaml.RichTextBoxAdv.StrikeThrough,Windows.UI.Color,Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment,System.Collections.Generic.List{Windows.UI.Xaml.FrameworkElement})">
            <summary>
            Renders the strike through.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="strikeThrough">The strike through.</param>
            <param name="fontColor">The font color.</param>
            <param name="baselineAlignment">The baseline alignment.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox.RenderStrikeThrough(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double,System.Double,Syncfusion.UI.Xaml.RichTextBoxAdv.StrikeThrough,Windows.UI.Color,Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment,System.Collections.Generic.List{Windows.UI.Xaml.FrameworkElement},System.Double)">
            <summary>
            Renders the strike through.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="strikeThrough">The strike through.</param>
            <param name="fontColor">The font color.</param>
            <param name="baselineAlignment">The baseline alignment.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox.RenderUnderline(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.RichTextBoxAdv.Underline,Windows.UI.Color,Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment,System.Collections.Generic.List{Windows.UI.Xaml.FrameworkElement})">
            <summary>
            Renders the underline.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="underline">The underline.</param>
            <param name="fontColor">The font color.</param>
            <param name="baselineAlignment">The baseline alignment.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ElementBox.RenderUnderline(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.RichTextBoxAdv.Underline,Windows.UI.Color,Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment,System.Collections.Generic.List{Windows.UI.Xaml.FrameworkElement},System.Double)">
            <summary>
            Renders the underline.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="underline">The underline.</param>
            <param name="fontColor">The font color.</param>
            <param name="baselineAlignment">The baseline alignment.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TextElementBox.Text">
            <summary>
            Gets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextElementBox.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Inline)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextElementBox" /> class.
            </summary>
            <param name="inline">The inline.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextElementBox.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double,System.Double,System.Double)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextElementBox.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="underlineY">The underlineY.</param>
            <param name="clipHeight">The clip height.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextElementBox.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv,System.Double,System.Double,System.Double)">
            <summary>
            Renders the specified text box adv.
            </summary>
            <param name="textBoxAdv">The text box adv.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextElementBox.RenderProofingErrors(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment,System.Collections.Generic.List{Windows.UI.Xaml.FrameworkElement},Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Renders the proofing error
            </summary>
            <param name="page">the page</param>
            <param name="left">the left</param>
            <param name="top">the top</param>
            <param name="underlineY"> maximum element height</param>
            <param name="baselineAlignment">the baseline allignment</param>
            <param name="renderedElements">rendres element list</param>
            <param name="spellCheck">the Spell checker object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextElementBox.RenderProofingErrors(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment,System.Collections.Generic.List{Windows.UI.Xaml.FrameworkElement},Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv,System.Double)">
            <summary>
            Renders the proofing error
            </summary>
            <param name="page">the page</param>
            <param name="left">the left</param>
            <param name="top">the top</param>
            <param name="underlineY"> maximum element height</param>
            <param name="baselineAlignment">the baseline allignment</param>
            <param name="renderedElements">rendres element list</param>
            <param name="spellCheck">the Spell checker object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextElementBox.RenderProofingErrors(Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv,System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment,System.Collections.Generic.List{Windows.UI.Xaml.FrameworkElement},Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Renders the proofing error
            </summary>
            <param name="textBoxAdv">text box adv</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="underlineY">the maximun element height</param>
            <param name="baselineAlignment">the base line allignment</param>
            <param name="renderedElements">rendered elements</param>
            <param name="spellCheck">the Spell checker object</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextElementBox.DrawErrorUnderline(System.Double,System.Double,System.Double,Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment,Syncfusion.UI.Xaml.RichTextBoxAdv.SpellingErrorRange)">
            <summary>
            
            </summary>
            <param name="textBoxAdv">text box adv</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="underlineY">the maximun element height</param>
            <param name="baselineAlignment">the base line allignment</param>
            <param name="spellingerrorRange">the spelling error range</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextElementBox.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextElementBox.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextElementBox.Dispose(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageElementBox.ImageContainer">
            <summary>
            Gets the image container.
            </summary>
            <value>
            The image container.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageElementBox.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Inline)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageElementBox" /> class.
            </summary>
            <param name="inline">The inline.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageElementBox.SaveImageFile">
            <summary>
            Saves the image file.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageElementBox.DeleteImageFile">
            <summary>
            Deletes the image file.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageElementBox.FitImageInViewer(Windows.UI.Xaml.Controls.Image,Windows.UI.Xaml.Media.Imaging.BitmapImage)">
            <summary>
            Fits the image in viewer.
            </summary>
            <param name="image">The image.</param>
            <param name="bmp">The BMP.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageElementBox.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double,System.Double,System.Double)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageElementBox.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="underlineY">The underlineY.</param>
            <param name="clipHeight">The clip height.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageElementBox.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv,System.Double,System.Double,System.Double)">
            <summary>
            Renders the specified text box adv.
            </summary>
            <param name="textBoxAdv">The text box adv.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageElementBox.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageElementBox.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageElementBox.Dispose(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.UIElementBox.UIContainer">
            <summary>
            Gets the UI container.
            </summary>
            <value>
            The UI container.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UIElementBox.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Inline)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageElementBox" /> class.
            </summary>
            <param name="inline">The inline.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UIElementBox.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double,System.Double,System.Double)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UIElementBox.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="underlineY">The underlineY.</param>
            <param name="clipHeight">The clip height.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UIElementBox.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv,System.Double,System.Double,System.Double)">
            <summary>
            Renders the specified text box adv.
            </summary>
            <param name="textBoxAdv">The text box adv.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UIElementBox.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UIElementBox.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UIElementBox.Dispose(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListTextElementBox.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ListTextElementBox.Paragraph">
            <summary>
            Gets the paragraph.
            </summary>
            <value>
            The paragraph.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListTextElementBox.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListTextElementBox" /> class.
            </summary>
            <param name="paragraphAdv">The paragraph adv.</param>
            <param name="listLevel">The list level.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListTextElementBox.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double,System.Double,System.Double)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListTextElementBox.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="underlineY">The underlineY.</param>
            <param name="clipHeight">The clip height.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListTextElementBox.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv,System.Double,System.Double,System.Double)">
            <summary>
            Renders the specified text box adv.
            </summary>
            <param name="textBoxAdv">The text box adv.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListTextElementBox.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListTextElementBox.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ListTextElementBox.Dispose(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentElementBox.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Inline)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentElementBox"/> class.
            </summary>
            <param name="inline">The inline.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentElementBox.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double,System.Double,System.Double)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentElementBox.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Renders the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="underlineY">The underlineY.</param>
            <param name="clipHeight">The clip height.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentElementBox.Render(Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv,System.Double,System.Double,System.Double)">
            <summary>
            Renders the specified text box.
            </summary>
            <param name="textBox">The text box.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentElementBox.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentElementBox.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentElementBox.Dispose(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentWidget.VisibleHeight">
            <summary>
            Gets or sets the height of the visible.
            </summary>
            <value>
            The height of the visible.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentWidget.Comment">
            <summary>
            Gets the comment.
            </summary>
            <value>
            The comment.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentWidget.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentWidget"/> class.
            </summary>
            <param name="commentAdv">The comment adv.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentWidget.Render">
            <summary>
            Renders this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentWidget.RenderProofingErrors">
            <summary>
            Renders this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentWidget.RemoveWidget(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Removes the widget.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RenderedElements.Item(System.Object)">
            <summary>
            Gets the List{FrameworkElement} with the specified element box.
            </summary>
            <value>
            The List{FrameworkElement}.
            </value>
            <param name="elementBox">The element box.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RenderedElements.#ctor">
            <summary>
            Initializes a new instance of the RenderedElements class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RenderedElements.Add(System.Object,System.Collections.Generic.List{Windows.UI.Xaml.FrameworkElement})">
            <summary>
            Adds the specified element box.
            </summary>
            <param name="elementBox">The element box.</param>
            <param name="elements">The elements.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RenderedElements.Remove(System.Object)">
            <summary>
            Removes the specified element box.
            </summary>
            <param name="elementBox">The element box.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RenderedElements.RemoveRenderedElements">
            <summary>
            Removes the rendered elements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RenderedElements.RemoveRenderedElements(System.Object)">
            <summary>
            Removes the rendered elements.
            </summary>
            <param name="elementBox">The element box.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RenderedElements.DisposeRenderedImage(Windows.UI.Xaml.Controls.Image)">
            <summary>
            Disposes the rendered image.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RenderedElements.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentRangeWidget.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.IWidget)">
            <summary>
            Initializes a new instance of the CommentRangeWidget class.
            </summary>
            <param name="widget">The widget.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentRangeWidget.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FileLoadingFailedEventArgs">
            <summary>
            Provides data for the <c>FileLoadingFailed</c> event.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.FileLoadingFailedEventArgs.Exception">
            <summary>
            Gets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.FileLoadingFailedEventArgs.Exception"/> occured at file loading operation.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.FileLoadingFailedEventArgs.Exception"/> occured at file loading operation.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FileLoadingFailedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FileLoadingFailedEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FileLoadingFailedEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FileLoadingFailedEventArgs"/> class.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FileSavingEventArgs">
            <summary>
            Provides data for the <c>FileSaving</c> event.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.FileSavingEventArgs.DoucmentStream">
            <summary>
            Gets or sets the document stream.
            </summary>
            <value>The document stream.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.FileSavingEventArgs.FormatType">
            <summary>
            Gets or sets the format type.
            </summary>
            <value>The format type.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.FileSavingEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether this is handled.
            </summary>
            <returns>
            Returns True, if handled. Otherwise returns False.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FileSavingEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FileSavingEventArgs">FileSavingEventArgs</see> class. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RequestNavigateEventArgs">
            <summary>
            Provides data for the <c>RequestNavigate</c> event.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RequestNavigateEventArgs.Hyperlink">
            <summary>
            Gets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RequestNavigateEventArgs.Hyperlink"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RequestNavigateEventArgs.Hyperlink"/> instance.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RequestNavigateEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RequestNavigateEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RequestNavigateEventArgs.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.Hyperlink)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RequestNavigateEventArgs"/> class.
            </summary>
            <param name="hyperlink">The hyperlink.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Hyperlink">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Hyperlink"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Hyperlink.NavigationLink">
            <summary>
            Gets the navigation link of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Hyperlink"/>.
            </summary>
            <value>
            The navigation link of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Hyperlink"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.Hyperlink.LinkType">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HyperlinkType"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Hyperlink"/>.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HyperlinkType"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Hyperlink"/>.
            </value>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HyperlinkType"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Hyperlink.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.Hyperlink"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv"/>.
            </summary>
            <param name="fieldBeginAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv"/> instance.</param>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Hyperlink.ParseFieldValue(System.String@,System.Int32,System.String)">
            <summary>
            Parses the field value.
            </summary>
            <param name="value">The value.</param>
            <param name="switchLevel">The switch level.</param>
            <param name="endChar">The end char.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Hyperlink.ParseFieldValue(System.String)">
            <summary>
            Parses the field value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionChangedEventArgs">
            <summary>
            Provides data for the <c>SelectionChanged</c> event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionChangedEventArgs"/> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionChangedEventArgs.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionChangedEventArgs"/> class. 
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance associated with this.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ContentChangedEventArgs">
            <summary>
            Provides data for the <c>ContentChanged</c> event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ContentChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ContentChangedEventArgs"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentChangedEventArgs">
            <summary>
            Provides data for the <c>DocumentChanged</c> event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentChangedEventArgs"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAddingEventArgs">
            <summary>
            Provides data for the <c>CommentAdding</c> event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAddingEventArgs.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAddingEventArgs"/> class for the specified see cref="CommentAdv"/>.
            </summary>
            <param name="commentAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAddingEventArgs"/>.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAddingEventArgs.VisualStyle">
            <summary>
            Gets the visual style of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>.
            </summary>
            <value>
            The visual style of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>.
            </value>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentVisualStyle"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAddingEventArgs.Comment">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/> instance.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/> instance.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentVisualStyleInternal">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentVisualStyleInternal"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentVisualStyleInternal.BackgroundBrush">
            <summary>
            Gets or sets the background brush.
            </summary>
            <value>The background brush.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentVisualStyleInternal.BorderBrush">
            <summary>
            Gets or sets the border brush.
            </summary>
            <value>The border brush.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentVisualStyleInternal.HighlightColorBrush">
            <summary>
            Gets or sets the highlight color brush.
            </summary>
            <value>The highlight color brush.</value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentVisualStyleInternal.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentVisualStyleInternal">CommentVisualStyleInternal</see> class. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="E:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentVisualStyleInternal.PropertyChanged">
            <summary>
            Occurs when a property value changes. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentVisualStyleInternal.NotifyPropertyChanged(System.String)">
            <summary>
            Notifies whenever the property is changed.
            </summary>
            <param name="propertyName"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentVisualStyleInternal.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentVisualStyleInternal">CommentVisualStyleInternal</see>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentVisualStyle">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentVisualStyle"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentVisualStyle.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentVisualStyle"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>.
            </summary>
            <param name="commentAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/> instance for which the visual style is to be defined.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentVisualStyle.BackgroundBrush">
            <summary>
            Gets or sets a brush that provides the background of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>.
            </summary>
            <value>
            The brush that provides the background of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentVisualStyle.BorderBrush">
            <summary>
            Gets or sets a brush that provides the background of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>.
            </summary>
            <value>
            The brush that provides the border of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentVisualStyle.HighlightColor">
            <summary>
            Gets or sets the highlight color of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>.
            </summary>
            <value>
            The highlight color of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/>.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult.Start">
            <summary>
            Gets the start <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult"/>.
            </summary>
            <value>
            The start <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult.End">
            <summary>
            Gets the end <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult"/>.
            </summary>
            <value>
            The end <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult.Text">
            <summary>
            Gets the text of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult"/>.
            </summary>
            <value>
            The text of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult.OwnerControl">
            <summary>
            Gets the owner control.
            </summary>
            <value>
            The owner control.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult"/> class.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult"/>
            is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult.Replace(System.String)">
            <summary>
            Replaces the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult"/> with the specified <see cref="T:System.String"/>.
            </summary>
            <param name="replaceText">The text to replace with.</param>
            <returns>
            Returns one, if the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult"/> is replaced successfully with the specified <see cref="T:System.String"/>.
            Otherwise returns zero.
            </returns>
            <remarks>
            The replace operation cannot be performed in read only mode.
            </remarks>
            <example>
            <para>The following code example demonstrates how to replace an existing text using text search in <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
            </code>
            <code lang="C#">
            public void ReplaceText()
            {
                // Performs case sensitive search for the text "colour" that also matches whole word in the document.
                TextSearchResult textSearchResult = richTextBoxAdv.Find("colour", FindOptions.CaseSensitiveWholeWord);
            
                // If any text search result found, replaces it with the text "color".
                if (textSearchResult != null)
                    textSearchResult.Replace("color");
            }
            </code>
            <code lang="VB">
            Public Sub ReplaceText()
            
                ' Performs case sensitive search for the text "colour" that also matches whole word in the document.
                Dim textSearchResult As TextSearchResult = richTextBoxAdv.Find("colour", FindOptions.CaseSensitiveWholeWord)
            
                ' If any text search result found, replace it with the text "color".
                If textSearchResult IsNot Nothing Then
                    textSearchResult.Replace("color")
                End If
             
             End Sub
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult.Navigate">
            <summary>
            Navigates this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult.Highlight">
            <summary>
            Highlights the find result.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult.CreateHighlightBorder(Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget,System.Double,System.Double,System.Double)">
            <summary>
            Creates the highlight border.
            </summary>
            <param name="lineWidget">The line widget.</param>
            <param name="width">The width.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult.AddFindResultView">
            <summary>
            Adds the find result view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult.Dispose">
            <summary>
            Releases all the resources used by this <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult"/> instance.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults.OwnerControl">
            <summary>
            Gets the owner control.
            </summary>
            <value>
            The owner control.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults.Count">
            <summary>
            Gets the count of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults"/>.
            </summary>
            <value>
            The count of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult"/> instance at the specified <paramref name="index"/>.
            </summary>
            <value>
            The instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult"/> at the specified <paramref name="index"/>.
            </value>
            <param name="index">The zero-based index of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult"/> instance to get.</param>
            <returns>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult"/> instance at the specified <paramref name="index"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Index was out of range. Must be non-negative and less than the size of the collection.
            </exception>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults.CurrentSearchResult">
            <summary>
            Gets the current search result.
            </summary>
            <value>
            The current search result.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults.AddResult">
            <summary>
            Adds the result.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults.IndexOf(Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult)">
            <summary>
            Indexes the of.
            </summary>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults.RemoveAt(System.Int32)">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults.Remove(Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult)">
            <summary>
            Replaces the current text with the specified text.
            </summary>
            <param name="replaceText">The replace text.</param>
            <returns>Returns 1, if text is replaced successfully. Otherwise returns 0.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults.ClearResults">
            <summary>
            Clears the results.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults.Replace(System.String)">
            <summary>
            Replaces the first occurrence of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults"/> with the specified <see cref="T:System.String"/>.
            </summary>
            <param name="replaceText">The text to replace with.</param>
            <returns>
            Returns one, if the first occurrence of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults"/> is replaced successfully with the specified <see cref="T:System.String"/>.
            Otherwise returns zero.
            </returns>
            <remarks>
            The replace operation cannot be performed in read only mode.
            </remarks>
            <example>
            <para>The following code example demonstrates how to replace the first occurence of an existing text in <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
            </code>
            <code lang="C#">
            public void ReplaceFirstOccurrenceOfText()
            {
                // Performs case sensitive search for the text "colour" that also matches whole word in the document.
                TextSearchResults textSearchResults = richTextBoxAdv.FindAll("colour", FindOptions.CaseSensitiveWholeWord);
            
                // If any text search results found, replaces the first occurrence with the text "color".
                if (textSearchResults != null)
                    textSearchResults.Replace("color");
            }
            </code>
            <code lang="VB">
            Public Sub ReplaceFirstOccurrenceOfText()
            
                ' Performs case sensitive search for the text "colour" that also matches whole word in the document.
                Dim textSearchResults As TextSearchResults = richTextBoxAdv.FindAll("colour", FindOptions.CaseSensitiveWholeWord)
            
                ' If any text search results found, replaces the first occurrence with the text "color".
                If textSearchResults IsNot Nothing Then
                    textSearchResults.Replace("color")
                End If
            
            End Sub
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults.ReplaceAll(System.String)">
            <summary>
            Replaces all the occurrences of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults"/> with the specified <see cref="T:System.String"/>.
            </summary>
            <param name="replaceText">The text to replace with.</param>
            <returns>
            Returns the number of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult"/> replaced successfully.
            If no <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult"/> is replaced, then returns zero.
            </returns>
            <remarks>
            The replace operation cannot be performed in read only mode.
            </remarks>
            <example>
            <para>The following code example demonstrates how to replace all the occurrences of an existing text in <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
            </code>
            <code lang="C#">
            public void ReplaceAllOccurrencesOfText()
            {
                // Performs case sensitive search for the text "colour" that also matches whole word in the document.
                TextSearchResults textSearchResults = richTextBoxAdv.FindAll("colour", FindOptions.CaseSensitiveWholeWord);
            
                // If any text search results found, replaces all the occurrences with the text "color".
                if (textSearchResults != null)
                    textSearchResults.ReplaceAll("color");
            }
            </code>
            <code lang="VB">
            Public Sub ReplaceAllOccurrencesOfText()
            
                ' Performs case sensitive search for the text "colour" that also matches whole word in the document.
                Dim textSearchResults As TextSearchResults = richTextBoxAdv.FindAll("colour", FindOptions.CaseSensitiveWholeWord)
            
                ' If any text search results found, replaces all the occurrences with the text "color".
                If textSearchResults IsNot Nothing Then
                    textSearchResults.ReplaceAll("color")
                End If
            
            End Sub
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults.Highlight">
            <summary>
            Highlights the find results.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults.AddFindResultView">
            <summary>
            Adds the find result view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults.ClearHighlight">
            <summary>
            Clears the find results highlight.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults.Dispose">
            <summary>
            Releases all the resources used by this <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResults"/> instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HelperMethods.StringToRegex(System.String,Syncfusion.UI.Xaml.RichTextBoxAdv.FindOptions)">
            <summary>
            Strings to regex.
            </summary>
            <param name="textToFind">The text to find.</param>
            <param name="option">The option.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HelperMethods.IsPatternEmpty(System.Text.RegularExpressions.Regex)">
            <summary>
            Determines whether [is pattern empty] [the specified pattern].
            </summary>
            <param name="pattern">The pattern.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HelperMethods.GetRadialMenuIconPath(System.String)">
            <summary>
            Gets the radial menu icon path.
            </summary>
            <param name="iconName">Name of the icon.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HelperMethods.InsertHyperlink(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv,System.Object)">
            <summary>
            Inserting Hyperlink
            </summary>
            <param name="SfRichTextBoxAdv">SfRichTextBoxAdv</param>
            /// <param name="object">object</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HelperMethods.IsVeryDark(Windows.UI.Color)">
            <summary>
            Gets a value indicating whether the color is very dark.
            </summary>
            <param name="color">The color</param>
            <returns>True if the color is very dark; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HelperMethods.GetDefaultImageBytes">
            <summary>
            Gets the default image bytes.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HelperMethods.IsIntersecting(Windows.Foundation.Rect,Windows.Foundation.Rect)">
            <summary>
            Finds whether the two rectangle intersects each other
            </summary>
            <param name="rect1"></param>
            <param name="rect2"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HelperMethods.GetBytes(System.IO.Stream)">
            <summary>
            Gets the bytes.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HelperMethods.GetBytes(Windows.UI.Xaml.Media.Imaging.BitmapSource)">
            <summary>
            Gets the bytes.
            </summary>
            <param name="bitmap">The bitmap.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HelperMethods.IsMetaFile(System.Byte[])">
            <summary>
            Determines whether the image specified by the bytes is meta file or not.
            </summary>
            <param name="imageBytes"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HelperMethods.ToMemoryStream(System.IO.Stream)">
            <summary>
            To the memory stream.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HelperMethods.SetSource(Windows.UI.Xaml.Media.Imaging.BitmapImage,System.Byte[])">
            <summary>
            Sets the source.
            </summary>
            <param name="bitmapImage">The bitmap image.</param>
            <param name="imageBytes">The image bytes.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HelperMethods.CopyTo(System.IO.Stream,System.IO.Stream)">
            <summary>
            Copies the data to output stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="output">The output.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HelperMethods.Clear(System.Text.StringBuilder)">
            <summary>
            Clears the specified builder.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HelperMethods.ReplaceInvalidSurrogateCharecters(System.String)">
            <summary>
            Replace the invalid surrogate charecters.
            </summary>
            <param name="text"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HelperMethods.GetText(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HelperMethods.GetText(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,System.Boolean)">
            <summary>
            Gets the text position.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="includeObject">If set to <see langword="true"/>, then ; otherwise, .</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HelperMethods.GetText(Syncfusion.UI.Xaml.RichTextBoxAdv.Inline,System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline,System.Int32)">
            <summary>
            Gets the text.
            </summary>
            <param name="startInline"></param>
            <param name="startIndex"></param>
            <param name="endInline"></param>
            <param name="endIndex"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HelperMethods.IsInternetOrFileAddress(Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv)">
            <summary>
            Determines whether hyperlink field result is internet or file address.
            </summary>
            <param name="fieldBegin"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HelperMethods.GetHyperlinkFieldResult(Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv)">
            <summary>
            Gets the hyperlink field result.
            </summary>
            <param name="fieldBegin"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HelperMethods.IsInternetOrFileAddress(System.String)">
            <summary>
            Checkes whether the string is web or file location.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HelperMethods.IsControlPressed(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Determines whether the control key is pressed.
            </summary>
            <param name="richTextBoxAdv"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HelperMethods.ParseCellContentAlignmentValues(System.String[],Syncfusion.UI.Xaml.RichTextBoxAdv.CellVerticalAlignment@,Windows.UI.Xaml.TextAlignment@)">
            <summary>
            Parse the cell content alignment.
            </summary>
            <param name="collection">The string collection</param>
            <param name="verticalAlignment">The vertical alignment.</param>
            <param name="textAlignment">The text alignment.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UIDispatcher.GetCoreDispatcher">
            <summary>
            Gets the core dispatcher.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.UIDispatcher.Execute(System.Action)">
            <summary>
            Executes the action using UIElement.
            </summary>
            <param name="action">An Action.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.VisualTreeHelperExtensions">
            <summary>
            Visual tree helper cass for retriving scroll bar from List box
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.VisualTreeHelperExtensions.GetFirstDescendantOfType``1(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the first descendant that is of the given type.
            </summary>
            <remarks>
            Returns null if not found.
            </remarks>
            <typeparam name="T">Type of descendant to look for.</typeparam>
            <param name="start">The start object.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.VisualTreeHelperExtensions.GetDescendantsOfType``1(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the descendants of the given type.
            </summary>
            <typeparam name="T">Type of descendants to return.</typeparam>
            <param name="start">The start.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.VisualTreeHelperExtensions.GetDescendants(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets Descendants from the tree viewer
            </summary>
            <param name="start"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.History.OwnerControl">
            <summary>
            Gets or sets the owner control
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.History.UndoStack">
            <summary>
            Gets the undo stack
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.History.RedoStack">
            <summary>
            Gets the Redo stack
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.History.CanUndo">
            <summary>
            Determines whether undo operation can be done.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.History.CanRedo">
            <summary>
            Determines whether redo operation can be done.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.History.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.History"/> class.
            </summary>
            <param name="richTextBoxAdv">The rich text box adv.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.History.ClearHistory">
            <summary>
            Clears the history
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.History.ClearUndoStack">
            <summary>
            Clears the undo stack.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.History.ClearRedoStack">
            <summary>
            Clears the redo stack.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.History.RecordChanges(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo)">
            <summary>
            Records the changes.
            </summary>
            <param name="baseHistoryInfo">The history info.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.History.Undo">
            <summary>
            Undoes this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.History.Redo">
            <summary>
            Redoes this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.History.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HistoryInfo.HasAction">
            <summary>
            Gets a value indicating whether the history info has action involved.
            </summary>
            <value><see langword="true"/> if ; otherwise, <see langword="false"/>.</value>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HistoryInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Tools.RichTextBoxAdv.HistoryInfo">HistoryInfo</see> class. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HistoryInfo.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Tools.RichTextBoxAdv.HistoryInfo">HistoryInfo</see> class. 
            </summary>
            <param name="richTextBoxAdv"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HistoryInfo.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Tools.RichTextBoxAdv.HistoryInfo">HistoryInfo</see> class. 
            </summary>
            <param name="richTextBoxAdv"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HistoryInfo.AddModifiedAction(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo)">
            <summary>
            Adds the modified action.
            </summary>
            <param name="baseHistoryInfo"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HistoryInfo.Revert">
            <summary>
            Reverts this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HistoryInfo.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.OwnerControl">
            <summary>
            Gets or sets the owner control
            </summary>
            <value>
            The owner control.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.Action">
            <summary>
            Gets or Sets the action
            </summary>
            <value>
            The action.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.RemovedNodes">
            <summary>
            Gets or sets the modified nodes
            </summary>
            <value>
            The modified nodes.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.ModifiedProperties">
            <summary>
            Gets or sets the modified properties.
            </summary>
            <value>
            The modified properties.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.SelectionStart">
            <summary>
            Gets or sets the selection start.
            </summary>
            <value>
            The selection start.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.SelectionEnd">
            <summary>
            Gets or sets the selection end.
            </summary>
            <value>
            The selection end.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.InsertPosition">
            <summary>
            Gets or sets the insert position.
            </summary>
            <value>
            The insert position.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.EndPosition">
            <summary>
            Gets or sets the end position.
            </summary>
            <value>
            The end position.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HistoryInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HistoryInfo" /> class.
            </summary>
            <param name="richTextBoxAdv">The rich text box adv.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.UpdateSelection(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Updates the selection.
            </summary>
            <param name="selection">The selection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.UpdateSelection(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange)">
            <summary>
            Updates the selection start and end
            </summary>
            <param name="selection">The SelectionRange.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.AddModifiedProperties(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat,Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Adds the modified properties.
            </summary>
            <param name="format">The format.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.AddModifiedProperties(Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat,Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Adds the modified properties.
            </summary>
            <param name="format">The format.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.AddModifiedProperties(Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat,Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Adds the modified properties.
            </summary>
            <param name="format">The format.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.AddModifiedProperties(Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat,Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Adds the modified properties.
            </summary>
            <param name="format">The format.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.AddModifiedProperties(Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv)">
            <summary>
            Adds the modified properties.
            </summary>
            <param name="listLevel">The list level.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.AddModifiedProperties(Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat,Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Adds the modified properties.
            </summary>
            <param name="format">The format.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.AddModifiedProperties(Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat,Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Adds the modified properties.
            </summary>
            <param name="format">The format.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.GetTextPosition(System.String)">
            <summary>
            Gets the text position.
            </summary>
            <param name="hierarchicalIndex">Index of the hierarchical.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.Revert">
            <summary>
            Reverts this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.RevertResizing">
            <summary>
            Revert the resizing.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.GetStartingPoint(System.Double,System.Double)">
            <summary>
            Gets the point based on the widget locations.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.RevertProofing">
            <summary>
            Reverts the proofing.
            </summary>
            <param name="text">the text</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.RevertModifiedNodes(System.Collections.Generic.List{Syncfusion.UI.Xaml.RichTextBoxAdv.Node},System.Boolean,System.String,System.Boolean)">
            <summary>
            Reverts the modified nodes.
            </summary>
            <param name="deletedNodes">The deleted nodes.</param>
            <param name="isRedoAction">if set to <c>true</c> is redo action.</param>
            <param name="start">The start.</param>
            <param name="isEmptySelection">if set to <c>true</c> [is empty selection].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.InsertRemovedNodes(System.Collections.Generic.List{Syncfusion.UI.Xaml.RichTextBoxAdv.Node},Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv)">
            <summary>
            Inserts the removed nodes.
            </summary>
            <param name="deletedNodes">The deleted nodes.</param>
            <param name="block">The block.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.InsertClonedFieldResult(Syncfusion.UI.Xaml.RichTextBoxAdv.FieldSeparatorAdv)">
            <summary>
            Inserts the cloned field result.
            </summary>
            <param name="fieldSeparator">The field separator.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.RedoAction">
            <summary>
            Redoes the action.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.RevertProperties(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange)">
            <summary>
            Reverts the properties.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.GetDependencyProperty">
            <summary>
            Gets the dependency property.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageFormat.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageFormat.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageFormat.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageFormat"/> class.
            </summary>
            <param name="imageContainer">The image container.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RowHistroyFormat.StartingPoint">
            <summary>
            Resizer starting Point. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RowHistroyFormat.RowFormat">
            <summary>
            Row format.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RowHistroyFormat.RowHeightType">
            <summary>
            Row height type.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RowHistroyFormat.Displacement">
            <summary>
            Displacement value.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RowHistroyFormat.#ctor(Windows.Foundation.Point,Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat)">
            <summary>
            Constructor.
            </summary>
            <param name="startingPoint"></param>
            <param name="rowFormat"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RowHistroyFormat.RevertChanges(System.Boolean)">
            <summary>
            Revert the changes.
            </summary>
            <param name="isRedo"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CellHistroyFormat.StartIndex">
            <summary>
            StartIndex refers start column on selected cell resizing.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CellHistroyFormat.EndIndex">
            <summary>
            EndIndex refers end column on selected cell resizing.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CellHistroyFormat.TableHierarchicalIndex">
            <summary>
            Current resized table hierarchical index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CellHistroyFormat.startX">
            <summary>
            Start offset for x coordinate.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CellHistroyFormat.startY">
            <summary>
            Start offset for y coordinate.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CellHistroyFormat.displacment">
            <summary>
            Displacement value.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CellHistroyFormat.#ctor(Windows.Foundation.Point)">
            <summary>
            Constructor.
            </summary>
            <param name="point"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlAsciiCodesInfo.HtmlAsciiCodeTable">
            <summary>
            Gets or sets the Html AsciiCode table.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlAsciiCodesInfo.HtmlNameTable">
            <summary>
            Gets or sets the Html Name table.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlAsciiCodesInfo.#cctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Controls.RichTextBoxAdv.HtmlAsciiCodesInfo">HtmlAsciiCodesInfo</see> class. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlAsciiCodesInfo.AddHtmlAsciiSymbols">
            <summary>
            Adds the Html Ascii symbols
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlAsciiCodesInfo.AddHtmlNames">
            <summary>
            Adds the Html names.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange.Start">
            <summary>
            Gets the start <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/>.
            </summary>
            <value>
            The end <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange.End">
            <summary>
            Gets the end <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/>.
            </summary>
            <value>
            The end <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange.IsEmpty">
            <summary>
            Gets a value indicating whether the <c>Start</c> and <c>End</c> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/> denotes the same <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/>.
            </summary>
            <value>
            Returns True, if the <c>Start</c> and <c>End</c> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/> denotes the same <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/>.
            Otherwise returns False.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange.IsForward">
            <summary>
            Gets a value indicating whether this selection is forward.
            </summary>
            <value>
            <c>true</c> if this selection is forward; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange.OwnerControl">
            <summary>
            Gets the ownercontrol of selectionrange
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange.ClearSelectionHighlight(Syncfusion.UI.Xaml.RichTextBoxAdv.IWidget)">
            <summary>
            Clears the selection highlight of the widget.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange.ClearSelectionHighlight">
            <summary>
            Clears all the selection highlight.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange.RemoveSelectionHighlight(Syncfusion.UI.Xaml.RichTextBoxAdv.IWidget)">
            <summary>
            Removes the selection highlight.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange.AddSelectionHighlight(Windows.UI.Xaml.Controls.Canvas,Syncfusion.UI.Xaml.RichTextBoxAdv.IWidget)">
            <summary>
            Adds the selection highlight.
            </summary>
            <param name="pageCanvas"></param>
            <param name="widget"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange.AddSelectionHighlight(Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.IWidget)">
            <summary>
            Adds the selection highlight.
            </summary>
            <param name="textboxContainer"></param>
            <param name="widget"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange.Dispose">
            <summary>
            Dispose the selection range.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection.Count">
            <summary>
            Gets the number of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/> instances actually contained in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection"/>.
            </summary>
            <value>
            The the number of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/> instances actually contained in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection.First">
            <summary>
            Gets the first <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/> instance from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection"/>.
            </summary>
            <value>
            If the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection"/> is empty, returns null. 
            Otherwise returns the first <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/> instance.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection.Last">
            <summary>
            Gets the last <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/> instance from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection"/>.
            </summary>
            <value>
            If the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection"/> is empty, returns null.
            Otherwise returns the last <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/> instance.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection.Item(System.Int32)">
            <summary>
            Gets the selection range at the specified index.
            </summary>
            <param name="index"></param>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>. 
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection.Add(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
             <summary>
             Adds the specified start <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> and end <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> as a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/> 
             instance to the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection"/>.
             </summary>
             <param name="startPosition">The start <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/>.</param>
             <param name="endPosition">The end <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/>.</param>
             <exception cref="T:System.ArgumentNullException">TextPosition cannot be null.</exception>
             <exception cref="T:System.ArgumentException">Invalid start TextPosition.</exception>
             <exception cref="T:System.ArgumentException">Invalid end TextPosition.</exception>
             <exception cref="T:System.ArgumentException">A text position within comment can be selected with another text position within the same comment only.</exception>
             <example>
             <para>The following code example demonstrates how to add the specified start and end positions to the selection range collection.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
             </code>
             <code lang="C#">
             public void AddSelection()
             {
                 // Retrieves the position at the first paragraph start.
                 TextPosition startPosition = richTextBoxAdv.Document.GetTextPosition("0;0;0");
            
                 // Retrieves the position at offset = 20 in the first paragraph.
                 TextPosition endPosition = richTextBoxAdv.Document.GetTextPosition("0;0;20");
            
                 // Selects the text positions in forward direction.
                 richTextBoxAdv.Selection.Select(startPosition, endPosition);
                 
                 // Retrieves the position at offset = 1 in the third paragraph start.
                 TextPosition secondStartPosition = richTextBoxAdv.Document.GetTextPosition("0;2;1");
            
                 // Retrieves the position at offset = 16 in the fifth paragraph.
                 TextPosition secondEndPosition = richTextBoxAdv.Document.GetTextPosition("0;4;16");
            
                 // Adds the second start position and second end position to the selection ranges.
                 richTextBoxAdv.Selection.SelectionRanges.Add(secondStartPosition, secondEndPosition);
             }
             </code>
             <code lang="VB">
             Public Sub AddSelection()
             
                ' Retrieves the position at the first paragraph start.
                Dim startPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition("0;0;0")
             
                ' Retrieves the position at offset = 20 in the first paragraph.
                Dim endPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition("0;0;20")
                
                ' Selects the text positions in forward direction.
                richTextBoxAdv.Selection.Select(startPosition, endPosition)
                
                ' Retrieves the position at offset = 1 in the third paragraph.
                Dim secondStartPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition("0;2;1")
             
                ' Retrieves the position at offset = 16 in the fifth paragraph.
                Dim secondEndPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition("0;4;16")
                
                ' Adds the second start position and second end position to the selection ranges.
                richTextBoxAdv.Selection.SelectionRanges.Add(secondStartPosition, secondEndPosition)
             
              End Sub
             </code>
             </example>
             <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/>
             <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection.Clear">
            <summary>
            Removes all the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/> instances from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection"/>.
            </summary>
            <example>
            <para>The following code example demonstrates how to clear the selection range collection.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
            </code>
            <code lang="C#">
            public void ClearSelection()
            {
                // Clears the selection ranges.
                richTextBoxAdv.Selection.SelectionRanges.Clear();
            }
            </code>
            <code lang="VB">
            Public Sub ClearSelection()
            
               ' Clears the selection ranges.
               richTextBoxAdv.Selection.SelectionRanges.Clear()
            
             End Sub
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection.Contains(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange)">
            <summary>
            Determines whether the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/> instance is contained in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection"/>.
            </summary>
            <param name="selectionRange">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/> instance which needs to be determined whether exists in this collection.</param>
            <returns>
            Returns True, if the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/> is contained in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection"/>. Otherwise returns False.
            </returns>
            <exception cref="T:System.ArgumentNullException">SelectionRange cannot be null.</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection.Remove(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange)">
            <summary>
            Removes the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/> from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection"/>.
            </summary>
            <param name="selectionRange">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/> instance needed to be removed from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection"/>.</param>
            <returns>
            Returns True, if the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/> is removed successfully from the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection"/>.
            Otherwise returns False.
            </returns>
            <exception cref="T:System.ArgumentNullException">SelectionRange cannot be null.</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection.AddSelection(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Add the selection of SfRichTextBoxAdv
            </summary>
            <param name="startPosition">The start <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/>.</param>
            <param name="endPosition">The end <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection.CheckSelectionRangesIsExist(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Checks and remove if the selection override on another selection
            </summary>
            <param name="startPosition">The start <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/>.</param>
            <param name="endPosition">The end <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection.UpdateSelectionRange">
            <summary>
            Update the SelectionRange 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection.ClearSelection">
            <summary>
            clears the selection of SfRichTextBoxAdv
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection.ClearMultiSelection">
            <summary>
            Clears the multi selection.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection.Dispose">
            <summary>
            Dispose the selection ranges
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection.RemoveSelectionHighlight(Syncfusion.UI.Xaml.RichTextBoxAdv.IWidget)">
            <summary>
            Clears all the hilight from the selection and remove from the canvas while scrolling
            </summary>
            <param name="widget">Widget</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection.ClearSelectionHighlight(Syncfusion.UI.Xaml.RichTextBoxAdv.IWidget)">
            <summary>
            Clear all the SelectionWidgets and remove the widget while disposing and set null to SelectedWidgets
            </summary>
            <param name="widget">Widget</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection.ClearSelectionHighlight">
            <summary>
            Clears all the hilight from the selection while slection changes
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection.AddSelectionHighlight(Windows.UI.Xaml.Controls.Canvas,Syncfusion.UI.Xaml.RichTextBoxAdv.IWidget)">
            <summary>
            Add the selection highlight to the canvas.
            </summary>
            <param name="canvas">Canvas</param>
            <param name="widget">widget</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection.AddSelectionHighlight(Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.IWidget)">
            <summary>
            Add the selection highlight to the textbox container.
            </summary>
            <param name="textboxContainer">TextBoxContainerAdv</param>
            <param name="widget">widget</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.EditingContext">
            <summary>
            Provides the information about the editing context of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.EditingContext.Type">
            <summary>
            Gets the type of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.EditingContext"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.EditingContext.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.EditingContext"/> class.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.RichTextBoxAdv.EditingContext.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.EditingContext.NotifyPropertyChanged(System.String)">
            <summary>
            Notifies whenever the property value is changed.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.#ctor">
            <summary>
            Initializes the new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes the new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/> class.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/> is associated.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.EditingContext">
            <summary>
            Gets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.EditingContext"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.CurrentSelectionRange">
            <summary>
            Gets the Selection Range Collection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.SelectionRanges">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRangeCollection"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.Start">
            <summary>
            Gets the start <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </summary>
            <value>
            The start <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.End">
            <summary>
            Gets the end <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </summary>
            <value>
            The end <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.Text">
            <summary>
            Gets the text of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </summary>
            <value>
            The text of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.IsEmpty">
            <summary>
            Gets a value indicating whether the <c>Start</c> and <c>End</c> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/> denotes the same <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/>.
            </summary>
            <value>
            Returns True, if the <c>Start</c> and <c>End</c> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/> denotes the same <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/>.
            Otherwise returns False.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.IsForward">
            <summary>
            Gets a value indicating whether this selection is forward.
            </summary>
            <value>
            <c>true</c> if this selection is forward; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OwnerControl">
            <summary>
            Gets the owner SfRichTextBoxAdv control
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.EditPosition">
            <summary>
            Gets the text edit position.
            </summary>
            <value>
            The text position.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.CurrentBaseHistoryInfo">
            <summary>
            Gets or sets the current history info.
            </summary>
            <value>
            The current history info.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.CurrentHistoryInfo">
            <summary>
            Gets or sets complex history indo.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.RemovedCommentCharacters">
            <summary>
            Gets the removed comment characters.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.IsCleared">
            <summary>
            Gets a value indicating whether this instance is cleared.
            </summary>
            <value>
            <c>true</c> if this instance is cleared; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.CharacterFormat">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.ParagraphFormat">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.SectionFormat">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionSectionFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionSectionFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.TableFormat">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </value>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.CellFormat" -->
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.RowFormat">
            <summary>
            Gets the selection Row format.
            </summary>
            <value>
            The selection Row format.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.GetText(System.Boolean)">
            <summary>
            Gets the text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.SelectAll">
            <summary>
            Selects all the content.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.SelectCurrentWord(System.Boolean)">
            <summary>
            Selects the current word.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.SelectCurrentWord(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,System.Boolean)">
            <summary>
            Gets Text Positions
            </summary>
            <param name="startPosition">the start position</param>
            <param name="endPosition">the end position</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.SelectCurrentParagraph(System.Boolean)">
            <summary>
            Selects the current paragraph.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.Select(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,System.Boolean)">
            <summary>
            Selects the content within the specified text position.
            </summary>
            <param name="textPosition">The text position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.Select(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
             <summary>
             Selects the specified start <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> and end <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/>.
             </summary>
             <param name="startPosition">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> instance that denotes the start position of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.</param>
             <param name="endPosition">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> instance that denotes the end position of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.</param>
             <exception cref="T:System.ArgumentNullException">TextPosition cannot be null.</exception>
             <exception cref="T:System.ArgumentException">Invalid start TextPosition.</exception>
             <exception cref="T:System.ArgumentException">Invalid end TextPosition.</exception>
             <exception cref="T:System.ArgumentException">A text position within comment can be selected with another text position within the same comment only.</exception>
             <example>
             <para>The following code example demonstrates how to select the specified start and end position.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
             </code>
             <code lang="C#">
             public void SelectContents()
             {
                 // Retrieves the position at the first paragraph start.
                 TextPosition startPosition = richTextBoxAdv.Document.GetTextPosition("0;0;0");
            
                 // Retrieves the position at offset = 20 in the first paragraph.
                 TextPosition endPosition = richTextBoxAdv.Document.GetTextPosition("0;0;20");
            
                 // Selects the text positions in forward direction.
                 richTextBoxAdv.Selection.Select(startPosition, endPosition);
            
                 // Selects the text positions in reverse direction.
                 // richTextBoxAdv.Selection.Select(endPosition, startPosition);
            
                 // To make an empty selection at the specific text position.
                 // richTextBoxAdv.Selection.Select(startPosition, startPosition);
             }
             </code>
             <code lang="VB">
             Public Sub SelectContents()
             
                ' Retrieves the position at the first paragraph start.
                Dim startPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition("0;0;0")
             
                ' Retrieves the position at offset = 20 in the first paragraph.
                Dim endPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition("0;0;20")
                
                ' Selects the text positions in forward direction.
                richTextBoxAdv.Selection.Select(startPosition, endPosition)
                
                ' Selects the text positions in reverse direction.
                ' richTextBoxAdv.Selection.Select(endPosition, startPosition)
                
                ' To make an empty selection at the specific text position.
                ' richTextBoxAdv.Selection.Select(startPosition, startPosition)
             
              End Sub
             </code>
             </example>
             <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/>
             <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.SelectRange(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,System.Boolean)">
            <summary>
            Selects the content within the specified start and end position.
            </summary>
            <param name="startPosition">The start position.</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.Select(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline,System.Int32,Windows.Foundation.Point,System.Boolean)">
            <summary>
            Selects the specified paragraph.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <param name="inline">The inline.</param>
            <param name="index">The index.</param>
            <param name="physicalLocation">The physical location.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.Select(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,System.Double,System.Boolean)">
            <summary>
            Selects the specified paragraph.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.Select(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,System.Boolean,System.Boolean)">
            <summary>
            Selects the specified paragraph.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <param name="positionAtStart">if set to <c>true</c> [position at start].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.SelectTableCell(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv,System.Boolean)">
            <summary>
            Selects the table cell.
            </summary>
            <param name="tableCell">The table cell.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.ClearSelection">
            <summary>
            Clears the selection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.MoveToLineStart(System.Boolean)">
            <summary>
            Moves the text position to line start.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.MoveToLineEnd(System.Boolean)">
            <summary>
            Moves the text position to line end.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.MoveToNextParagraph(System.Boolean)">
            <summary>
            Moves to next paragraph.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.MoveToPreviousParagraph(System.Boolean)">
            <summary>
            Moves to previous paragraph.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.MoveNextPosition(System.Boolean)">
            <summary>
            Moves the next position.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.MovePreviousPosition(System.Boolean)">
            <summary>
            Moves the previous position.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.MoveUp(System.Boolean)">
            <summary>
            Moves the caret position up.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.MoveDown(System.Boolean)">
            <summary>
            Moves the caret position down.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.ExtendToLineEnd(System.Boolean)">
            <summary>
            Extends to line end.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.ExtendToLineStart(System.Boolean)">
            <summary>
            Extends to line start.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.ExtendToWordStart(System.Boolean,System.Boolean)">
            <summary>
            Extends to word start.
            </summary>
            <param name="isNavigation">if set to <c>true</c> [is navigation].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.ExtendToWordEnd(System.Boolean,System.Boolean)">
            <summary>
            Extends to word end.
            </summary>
            <param name="isNavigation">if set to <c>true</c> [is navigation].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.ExtendToParagraphStart(System.Boolean)">
            <summary>
            Extends to paragraph start.
            </summary>
            <param name="isNavigation">if set to <c>true</c> [is navigation].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.ExtendToParagraphEnd(System.Boolean)">
            <summary>
            Extends to paragraph end.
            </summary>
            <param name="isNavigation">if set to <c>true</c> [is navigation].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.ExtendForward(System.Boolean)">
            <summary>
            Extends the selection forward.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.ExtendBackward(System.Boolean)">
            <summary>
            Extends the selection backward.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.ExtendToNextLine(System.Boolean)">
            <summary>
            Extends the selection to next line.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.ExtendToPreviousLine(System.Boolean)">
            <summary>
            Extends the selection to previous line.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.MoveTextPosition(Windows.Foundation.Point,System.Boolean,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Moves the text position.
            </summary>
            <param name="cursorPoint">The cursor point.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.FireSelectionChanged(System.Boolean)">
            <summary>
            Fires the selection changed.
            </summary>
            <param name="isSelectionChanged">if set to <c>true</c> is selection changed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InitHistory(Syncfusion.UI.Xaml.RichTextBoxAdv.Actions)">
            <summary>
            Inits the history.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InitHistory(Syncfusion.UI.Xaml.RichTextBoxAdv.Actions,Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange)">
            <summary>
            Inits the history.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InitComplexHistory(Syncfusion.UI.Xaml.RichTextBoxAdv.Actions)">
            <summary>
            Inits the complex history.
            </summary>
            <param name="action"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.FitImageToPage(Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv)">
            <summary>
            Fits the image to page.
            </summary>
            <param name="image">The image.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.CanMergeSelectedCells">
            <summary>
            Determines whether this instance can merge selected cells.
            </summary>
            <returns>
              <c>true</c> if this instance can merge selected cells; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.GetTable(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Gets the table.
            </summary>
            <param name="startPosition"></param>
            <param name="endPosition"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.RemoveSelectedContent">
            <summary>
            Removes the content of the selected.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.RemoveSelectedContent(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Removes the content of the selected.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.DeleteSelectedContent(System.Boolean)">
            <summary>
            Deletes the content of the selected.
            </summary>
            <param name="isBackSpace">if set to <c>true</c> [is back space].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.DeleteSelectedContent(System.Boolean,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Deletes the content of the selected.
            </summary>
            <param name="isBackSpace">if set to <c>true</c> [is back space].</param>
            <param name="startposition">start position</param>
            <param name="startposition">end position</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdateCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange,Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Updates the character format.
            </summary>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdateCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange,Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Updates the character format.
            </summary>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdateParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange,Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Updates the paragraph format.
            </summary>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdateParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange,Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Updates the paragraph format.
            </summary>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdateTableFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange,Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Updates the table format.
            </summary>
            <param name="selectionRange">The selectionRange.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdateCellFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange,Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Updates the Cell format.
            </summary>
            <param name="selectionRange">The selectionRange.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdateRowFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange,Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Updates the Row format.
            </summary>
            <param name="selectionRange">The selectionRange.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdateSectionFormat(Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Updates the section format.
            </summary>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdateImageSize(Syncfusion.UI.Xaml.RichTextBoxAdv.ImageFormat)">
            <summary>
            Updates the image size.
            </summary>
            <param name="imageFormat">The image format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.IsHandledComplexHistory">
            <summary>
            Determines whether complex history is handled.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.Relayout(System.Boolean)">
            <summary>
            Relayouts the specified document.
            </summary>
            <param name="isSelectionChanged">if set to <c>true</c> is selection changed.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdateFocus">
            <summary>
            Updates the focus.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.FireContentChanged">
            <summary>
            Fires the content changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdateHistory">
            <summary>
            Updates the history.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdateComplexHistory">
            <summary>
            Updates the complex history.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.AddMutipleSelectionRanges">
            <summary>
            Add the multiple ranges in selection range collection 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdateSelectionRangeOffSet(System.Int32)">
            <summary>
            update the selection ranges offset values
            </summary>
            <param name="index">index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.AddSelectionRange(Syncfusion.UI.Xaml.RichTextBoxAdv.BaseHistoryInfo,System.Boolean@)">
            <summary>
            Add the ranges in selection range collection 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.GetHyperlinkField">
            <summary>
            Gets the hyperlink field in current selection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.IsImageField">
            <summary>
            Determines whether the selection in Field Image.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.CopySelectionCharacterFormat">
            <summary>
            Copies the selection character format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.CopyInlineCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat,Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat)">
            <summary>
            Copies the inline character format.
            </summary>
            <param name="format">The format.</param>
            <param name="inlineFormat">The inline format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.SelectTextRanges">
            <summary>
            Selects the TextRanges and Add in the History Preservation
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InsertText(System.String,System.Boolean)">
            <summary>
            Inserts the text.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.CheckAndConvertToHyperlink">
            <summary>
            Checks if the previous text is URL, then it is auto formatted to hyperlink.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InsertText(System.String)">
            <summary>
            Inserts the specified <see cref="T:System.String"/> at this <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </summary>
            <param name="text">The text to be inserted.</param>
            <example>
            <para>The following code example demonstrates how to insert the specified text at the current selection.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
            </code>
            <code lang="C#">
            public void InsertTextAtSelection()
            {
               // Inserts the specified text at current selection position.
               // If the current selection is not empty, removes the selected contents first and then inserts the text.
               richTextBoxAdv.Selection.InsertText("Hello world");
            }
            </code>
            <code lang="VB">
            Public Sub InsertTextAtSelection()
            
               ' Inserts the specified text at current selection position.
               ' If the current selection is not empty, removes the selected contents first and then inserts the text.
               richTextBoxAdv.Selection.InsertText("Hello world")
            
             End Sub
            </code>
            </example>
            <exception cref="T:System.ArgumentNullException">Text cannot be null.</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InsertImage(Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv)">
            <summary>
            Inserts the image.
            </summary>
            <param name="image">The image.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.GetCharacterFormat">
            <summary>
            Gets the character format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InsertInlineInternal(Syncfusion.UI.Xaml.RichTextBoxAdv.Inline)">
            <summary>
            Inserts the inline internal.
            </summary>
            <param name="inline">The inline.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InsertInline(Syncfusion.UI.Xaml.RichTextBoxAdv.Inline)">
            <summary>
            Inserts the inline.
            </summary>
            <param name="inline">The inline.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InsertTable(Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv)">
            <summary>
            Inserts the table.
            </summary>
            <param name="table">The table.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InsertRow(Syncfusion.UI.Xaml.RichTextBoxAdv.RowPlacement)">
            <summary>
            Inserts the row.
            </summary>
            <param name="rowPlacement">The row placement.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.GetRowCountToInsert">
            <summary>
            Gets the row count to insert based on the selection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InsertColumn(Syncfusion.UI.Xaml.RichTextBoxAdv.ColumnPlacement)">
            <summary>
            Inserts the column.
            </summary>
            <param name="columnPlacement">The column placement.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.GetColumnCountToInsert">
            <summary>
            Gets the column count to insert based on the selection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.DeleteTable">
            <summary>
            Deletes the table.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.DeleteRow">
            <summary>
            Deletes the row.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.DeleteColumn">
            <summary>
            Deletes the column.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.MergeSelectedCells">
            <summary>
            Merges the selected cells.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InsertBlockInternal(Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv)">
            <summary>
            Inserts the block internal.
            </summary>
            <param name="block">The block.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InsertBlock(Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv)">
            <summary>
            Inserts the block.
            </summary>
            <param name="block">The block.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InsertBlock(Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv)">
            <summary>
            Inserts the block before the table.
            </summary>
            <param name="block">The block.</param>
            <param name="table">The table.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InsertParagraph(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,System.Boolean)">
            <summary>
            Inserts the paragraph.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <param name="insertAfter">if set to <c>true</c> insert after.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InsertSection(Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv)">
            <summary>
            Inserts the section.
            </summary>
            <param name="section">The section.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InsertSection(Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv)">
            <summary>
            Inserts the section.
            </summary>
            <param name="section">The section.</param>
            <param name="table">The table.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnEnter">
            <summary>
            Called when enter key pressed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.AutoFormatHyperlink(System.String,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Formats the hyperlink.
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.SingleBackspace(System.Boolean)">
            <summary>
            Singles the backspace.
            </summary>
            <param name="isRedoing">if set to <c>true</c> is redoing.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnBackspace">
            <summary>
            Called when backspace key pressed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.SingleDelete(System.Boolean)">
            <summary>
            Deletes the single character.
            </summary>
            <param name="isRedoing">if set to <c>true</c> is redoing.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.ValidateSelectionBasedOnCommentCharacter(System.Boolean)">
            <summary>
            Validates the selection based on comment character.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnDelete">
            <summary>
            Called when delete key pressed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat)">
            <summary>
            Applies the character format.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnTableFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat)">
            <summary>
            Called on applying table format.
            </summary>
            <param name="format">The table format to apply.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnCellFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv)">
            <summary>
            Called on applying cell format.
            </summary>
            <param name="format">The cell format to apply.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnRowFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat,Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv)">
            <summary>
            Called on applying row format.
            </summary>
            <param name="format"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdateMultipleSelectionCharacterFormatting(Syncfusion.UI.Xaml.RichTextBoxAdv.Actions,System.Object,System.Boolean)">
            <summary>
            Updated the Character Format for Mutiple selection
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdateCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange,Syncfusion.UI.Xaml.RichTextBoxAdv.Actions,System.Object,System.Boolean)">
            <summary>
            Initilalize the history and updated the current selection character format
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdateMultipleSelectionParagraphFormatting(Syncfusion.UI.Xaml.RichTextBoxAdv.Actions,System.Object,System.Boolean)">
            <summary>
            Updated the Paragraph Format for Mutiple selection
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdateMultipleSelectionTableFormatting(Syncfusion.UI.Xaml.RichTextBoxAdv.Actions,System.Object)">
            <summary>
            Updated the table Format for Mutiple selection
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdateParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange,Syncfusion.UI.Xaml.RichTextBoxAdv.Actions,System.Object,System.Boolean)">
            <summary>
            Initilalize the history and updated the current selection Paragraph format
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdateTableFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange,Syncfusion.UI.Xaml.RichTextBoxAdv.Actions,System.Object)">
            <summary>
            Initilalize the history and updated the current selection table format
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnBold">
            <summary>
            Applies bold style.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnItalic">
            <summary>
            Applies italic style.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnFontColor(Windows.UI.Color)">
            <summary>
            Called when font color changed.
            </summary>
            <param name="fontColor">Color of the font.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnFontFamily(Windows.UI.Xaml.Media.FontFamily)">
            <summary>
            Called when font family changed.
            </summary>
            <param name="fontFamily">The font family.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnFontSize(System.Object,System.Boolean)">
            <summary>
            Called when font size changed.
            </summary>
            <param name="fontSize">Size of the font.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnFontSize(System.Double)">
            <summary>
            Called when font size changed.
            </summary>
            <param name="fontSize">Size of the font.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnHighlightColor(Syncfusion.UI.Xaml.RichTextBoxAdv.HighlightColor)">
            <summary>
            Called when highlightColor changed.
            </summary>
            <param name="highlightColor">The highlightColor.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnBaselineAlignment(Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment)">
            <summary>
            Called when baselineAlignment changed.
            </summary>
            <param name="baselineAlignment">The baselineAlignment.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnStrikeThrough(Syncfusion.UI.Xaml.RichTextBoxAdv.StrikeThrough)">
            <summary>
            Called when strikeThrough changed.
            </summary>
            <param name="strikeThrough">The strikeThrough.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnUnderline(Syncfusion.UI.Xaml.RichTextBoxAdv.Underline)">
            <summary>
            Called when underline changed.
            </summary>
            <param name="underline">The underline.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat)">
            <summary>
            On Paragraph Format.
            </summary>
            <param name="paragraphFormat"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnAfterSpacing(System.Double)">
            <summary>
            Called when after spacing changed.
            </summary>
            <param name="afterSpacing">The after spacing.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnBeforeSpacing(System.Double)">
            <summary>
            Called when before spacing changed.
            </summary>
            <param name="beforeSpacing">The before spacing.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.GetIndentIncrementValue(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,System.Double)">
            <summary>
            Gets the Indent Increment Value.
            </summary>
            <param name="incrementer">The incrementer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.GetIndentIncrementValue(System.Double,System.Double)">
            <summary>
            Gets the indent increment value.
            </summary>
            <param name="position"></param>
            <param name="incrementer"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnLeftIndent(System.Double,System.Boolean)">
            <summary>
            Called when left indent changed.
            </summary>
            <param name="leftIndent">The left indent.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnLeftIndent(System.Double)">
            <summary>
            Called when left indent changed.
            </summary>
            <param name="leftIndent">The left indent.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnRightIndent(System.Double)">
            <summary>
            Called when right indent changed.
            </summary>
            <param name="rightIndent">The right indent.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnFirstLineIndent(System.Double)">
            <summary>
            Called when first line indent changed.
            </summary>
            <param name="firstLineIndent">The first line indent.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnLineSpacingType(Syncfusion.UI.Xaml.RichTextBoxAdv.LineSpacingType)">
            <summary>
            Called when line spacing type changed.
            </summary>
            <param name="lineSpacingType">Type of the line spacing.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnLineSpacing(System.Double)">
            <summary>
            Called when line spacing changed.
            </summary>
            <param name="lineSpacing">The line spacing.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnTextAlignment(Windows.UI.Xaml.TextAlignment)">
            <summary>
            Called when text alignment changed.
            </summary>
            <param name="textAlignment">The text alignment.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnApplyList(Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv,System.Int32)">
            <summary>
            Called when apply list.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnApplyList(Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv)">
            <summary>
            Called when [apply list].
            </summary>
            <param name="list">The list.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnPageMarginChanged(Windows.UI.Xaml.Thickness)">
            <summary>
            Called when [page margin changed].
            </summary>
            <param name="pageMargin">The page margin.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnPageSizeChanged(Windows.Foundation.Size)">
            <summary>
            Called when [page size changed].
            </summary>
            <param name="pageSize">Size of the page.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnTableAlignment(Syncfusion.UI.Xaml.RichTextBoxAdv.TableAlignment)">
            <summary>
            Called when table alignment is changed.
            </summary>
            <param name="tablealignment"> the tablealignment.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnTableLeftIndent(System.Double)">
            <summary>
            Called when left indent is changed.
            </summary>
            <param name="leftIndent"> the leftIndent.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnCellSpacing(System.Double)">
            <summary>
            Called when cell spacing is changed.
            </summary>
            <param name="cellSpacing"> the cellSpacing.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnDefaultCellLeftMargin(System.Double)">
            <summary>
            Called when Default Cell Left Margin is changed.
            </summary>
            <param name="leftMargin"> the leftMargin.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnDefaultCellRightMargin(System.Double)">
            <summary>
            Called when Default Cell Right Margin is changed.
            </summary>
            <param name="rightMargin"> the rightMargin.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnDefaultCellTopMargin(System.Double)">
            <summary>
            Called when Default Cell Top Margin is changed.
            </summary>
            <param name="topMargin"> the topMargin.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnDefaultCellBottomMargin(System.Double)">
            <summary>
            Called when Default Cell Bottom Margin is changed.
            </summary>
            <param name="bottomMargin"> the bottomMargin.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnCellContentVerticalAlignment(Syncfusion.UI.Xaml.RichTextBoxAdv.CellVerticalAlignment)">
            <summary>
            Called when VerticalAlignment is changed.
            </summary>
            <param name="verticalAlignment"> the verticalAlignment.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnCellLeftMargin(System.Double)">
            <summary>
            Called when Cell Left margin is changed.
            </summary>
            <param name="leftMargin"> the leftMargin.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnCellRightMargin(System.Double)">
            <summary>
            Called when Cell Right margin is changed.
            </summary>
            <param name="rightMargin"> the rightMargin.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnCellTopMargin(System.Double)">
            <summary>
            Called when Cell Top margin is changed.
            </summary>
            <param name="topMargin"> the topMargin.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnCellBottomMargin(System.Double)">
            <summary>
            Called when Cell Bottom margin is changed.
            </summary>
            <param name="bottomMargin"> the bottomMargin.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnRowHeight(System.Double)">
            <summary>
            Called when row height is changed.
            </summary>
            <param name="height"> the height.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnRowHeightType(Syncfusion.UI.Xaml.RichTextBoxAdv.HeightType)">
            <summary>
            Called when row height type is changed.
            </summary>
            <param name="heightType"> the heightType.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnHeader(System.Boolean)">
            <summary>
            Called when header is changed.
            </summary>
            <param name="header"> the header.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnAllowBreakAcrossPages(System.Boolean)">
            <summary>
            Called when AllowBreakAcrossPages is changed.
            </summary>
            <param name="allowRowBreakAcrossPages"> the allowRowBreakAcrossPages.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.OnCellContentAlignment(Syncfusion.UI.Xaml.RichTextBoxAdv.CellVerticalAlignment,Windows.UI.Xaml.TextAlignment)">
            <summary>
            Called when the cell content alignment changed.
            </summary>
            <param name="verticalAlignment">The vertical alignment.</param>
            <param name="textAlignment">The text alignment.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.Copy">
            <summary>
            Copies this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.Cut">
            <summary>
            Cuts this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.Paste">
            <summary>
            Pastes the clipboard contents.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.PasteImage(Windows.Storage.Streams.IRandomAccessStream)">
            <summary>
            Pastes the image.
            </summary>
            <param name="imageStream">The image stream.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.PasteContents">
            <summary>
            Pastes the contents.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.PasteContent">
            <summary>
            Pastes the content.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.SplitSection(Syncfusion.DocIO.DLS.WSection)">
            <summary>
            Splits the section.
            </summary>
            <param name="wSection">The w section.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.PasteSectionChilds(Syncfusion.DocIO.DLS.WSection)">
            <summary>
            Pastes the section childs.
            </summary>
            <param name="wSection">The wsection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InitWordDocument">
            <summary>
            Inits the word document.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.CopySectionFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv)">
            <summary>
            Copies the section format.
            </summary>
            <param name="sectionAdv">The section adv.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.CopyToClipboard(System.Boolean,Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv,System.Boolean)">
            <summary>
            Copies to clipboard.
            </summary>
            <param name="isCut">if set to <c>true</c> is cut.</param>
            <param name="imageContainerAdv">The image container adv.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.CopySelectedContent(System.Boolean)">
            <summary>
            Copies the content of the selected.
            </summary>
            <param name="isCut">if set to <c>true</c>is cut.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdateSelectionRangeOffSet(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            update the selection ranges offset values
            </summary>
            <param name="index">index</param>
            <param name="startPosition">startPosition</param>
            <param name="endPosition">endPosition</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.NavigateHyperlink">
            <summary>
            Navigates the hyperlink.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.CopyHyperlink">
            <summary>
            Copies the hyperlink
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InsertHyperlink(System.String,System.String,System.Boolean)">
            <summary>
            Inserts the hyperlink.
            </summary>
            <param name="url"></param>
            <param name="textToDisplay"></param>
            <param name="remove">If set to <see langword="true"/>, then ; otherwise, .</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InitInsertInline(Syncfusion.UI.Xaml.RichTextBoxAdv.Inline)">
            <summary>
            Inserts the field inline.
            </summary>
            <param name="inline"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InsertHyperlink(System.String,System.String)">
            <summary>
            Inserts the hyperlink.
            </summary>
            <param name="url">The URL.</param>
            <param name="displayText">The display text.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InsertHyperlinkInternal(System.String,System.String,Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat)">
            <summary>
            Inserts the hyperlink internal.
            </summary>
            <param name="url">The URL.</param>
            <param name="displayText">The display text.</param>
            <param name="format">The format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.EditHyperlink(System.String,System.String)">
            <summary>
            Edits the hyperlink.
            </summary>
            <param name="url">The URL.</param>
            <param name="displayText">The display text.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.RemoveHyperlink">
            <summary>
            Removes the hyperlink.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.ReplaceAll(System.String)">
            <summary>
            Replaces all the occurrence of find text result.
            </summary>
            <param name="textToReplace"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdateSelectionTextPosition(System.Boolean)">
            <summary>
            Updates the selection text position.
            </summary>
            <param name="isSelectionChanged">if set to <c>true</c> [is selection changed].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdatePhysicalPosition">
            <summary>
            Updates the physical position.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.HighlightSelection(System.Boolean)">
            <summary>
            Highlights the selection.
            </summary>
            <param name="isSelectionChanged">if set to <c>true</c> [is selection changed].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.CreateHighlightBorder(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange,Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget,System.Double,System.Double,System.Double)">
            <summary>
            Creates the highlight border.
            </summary>
            <param name="lineWidget">The line widget.</param>
            <param name="width">The width.</param>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.CreateHighlightBorder(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget,Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRange)">
            <summary>
            Creates the highlight border.
            </summary>
            <param name="cellWidget">The cell widget.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.ToggleUnderline(Syncfusion.UI.Xaml.RichTextBoxAdv.Underline)">
            <summary>
            Toggles the underline. If underline occurs in the selection Remove the underline.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.ToggleBaselineAlignment(Syncfusion.UI.Xaml.RichTextBoxAdv.BaselineAlignment)">
            <summary>
            Toggles the BaselineAlignment. If BaselineAlignment is assigned already. The BaselineAlignment will be changed
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.ToggleHighlightColor">
            <summary>
            Toggles the Hilightcolor. If Hilightcolor is assigned already then the color will be removed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.ToggleBeforeSpacing">
            <summary>
            Toggles the BeforeSpacing. If BeforeSpacing is included already. It will be removed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.ToggleTextAlignment(Windows.UI.Xaml.TextAlignment)">
            <summary>
            Toggles the TextAlignment.
            </summary>
            <param name="textAlignment"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.RetrieveCurrentFormatProperties">
            <summary>
            Retrieves the current format properties.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.RetrieveCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Retrieves the character format.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.RetrieveParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Retrieves the paragraph format.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.RetrieveSectionFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Retrieves the section format.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.RetrieveTableFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Retrieves the table format.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.RetrieveCellFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Retrieves the cell format.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.RetriveRowFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Retrieves the row format.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdateListChanges(Syncfusion.UI.Xaml.RichTextBoxAdv.ModifiedLevelCollection)">
            <summary>
            Updates the list changes.
            </summary>
            <param name="modifiedCollection">The modified collection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InsertComment">
            <summary>
            Inserts the comment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InsertCommentInternal(Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat)">
            <summary>
            Inserts the comment internal.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.DeleteAllComments">
            <summary>
            Deletes all the comments.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.DeleteComment(Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv)">
            <summary>
            Deletes the specified comment.
            </summary>
            <param name="comment"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.DeleteCommentInternal(Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv)">
            <summary>
            Deletes the comment Internal.
            </summary>
            <param name="comment"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.RemoveInline(Syncfusion.UI.Xaml.RichTextBoxAdv.Inline)">
            <summary>
            Removes the inline
            </summary>
            <param name="inline"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.HighlightSelectedComment">
            <summary>
            Highlights the selected comment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.NavigateNextComment">
            <summary>
            Navigates the next comment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.NavigatePreviousComment">
            <summary>
            Navigates the previous comment.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.IsInComment">
            <summary>
            Determines whether the current selection is in comment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.Change(System.String)">
            <summary>
            Changes the misspelled word with text to change.
            </summary>
            <param name="correctWord"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.ChangeAll(System.String,System.String)">
            <summary>
            Changes all the misspelled word with text to change.
            </summary>
            <param name="misspelledWord"></param>
            <param name="textToChange"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.IgnoreAll(System.String,Syncfusion.UI.Xaml.RichTextBoxAdv.SpellingError)">
            <summary>
            Ignore the misspelled word in the document.
            </summary>
            <param name="textToIgnore"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.AddToDictionary(System.String,Syncfusion.UI.Xaml.RichTextBoxAdv.SpellingError)">
            <summary>
            adds the word in dictionary 
            </summary>
            <param name="textToAdd"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdateProofing(System.String,System.Boolean)">
            <summary>
            Updates data for proofing
            </summary>
            <param name="text"></param>
            <param name="isInDictionary"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.GetSelectedCells">
            <summary>
            Gets the selected cells.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.SelectTableCell">
            <summary>
            Select the cell.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.SelectTableRow">
            <summary>
            Select the table row.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.SelectTable">
            <summary>
            Select the table.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.SelectColumnInTable">
            <summary>
            Selects the column in table.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.InitResizingHistory(Windows.Foundation.Point)">
            <summary>
            initialize the resizing history.
            </summary>
            <param name="startingPoint"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv.UpdateResizingHistory(Windows.Foundation.Point)">
            <summary>
            Updates the resizing history.
            </summary>
            <param name="point"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.FontSize">
            <summary>
            Gets or Sets the font size of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </summary>
            <value>
            The font size of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </value>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat"/>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.FontFamily">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.FontFamily"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.FontFamily"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </value>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat"/>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.FontColor">
            <summary>
            Gets or sets the font color of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </summary>
            <value>
            The font color of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </value>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat"/>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.Bold">
            <summary>
            Gets or sets a value indicating whether the content in <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/> is bold.
            </summary>
            <value>
            True, if the content in <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/> is bold. Otherwise False.
            </value>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat"/>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.Italic">
            <summary>
            Gets or sets a value indicating whether the content in <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/> is italicized.
            </summary>
            <value>
            True, if the content in <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/> is italicized. Otherwise False.
            </value>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat"/>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.StrikeThrough">
            <summary>
            Gets or Sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.StrikeThrough"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.StrikeThrough"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </value>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat"/>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.BaselineAlignment">
            <summary>
            Gets or Sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.BaselineAlignment"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.BaselineAlignment"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </value>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat"/>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.Underline">
            <summary>
            Gets or Sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.Underline"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.Underline"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </value>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat"/>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.HighlightColor">
            <summary>
            Gets or Sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.HighlightColor"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.HighlightColor"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </value>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat"/>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.LidBi">
            <summary>
            Gets or sets BiDi LanguageID.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.LocaleIdASCII">
            <summary>
            Gets or sets ASCII LanguageID.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.LocaleIdFarEast">
            <summary>
            Gets or sets the Far East LanguageId.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat"/> class.
            </summary>
            <param name="selection">The selection.</param>
        </member>
        <member name="E:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.NotifyPropertyChanged(System.String)">
            <summary>
            Notifies the property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.CopyFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat)">
            <summary>
            Copies the format.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.CombineFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat)">
            <summary>
            Combines the format.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.CopyToFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat)">
            <summary>
            Copies to format.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.IsEqualFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat)">
            <summary>
            Determines whether the specified format is equal or not.
            </summary>
            <param name="format"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.CloneFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat)">
            <summary>
            Clones the specified selection character format.
            </summary>
            <param name="selectionCharacterFormat">The selection character format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.ClearFormat">
            <summary>
            Clears the format.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCharacterFormat.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.LeftIndent">
            <summary>
            Gets or Sets the left indent of the selected paragraphs.
            </summary>
            <value>
            The left indent of the selected paragraphs.
            </value>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.RightIndent">
            <summary>
            Gets or Sets the right indent of the selected paragraphs.
            </summary>
            <value>
            The right indent of the selected paragraphs.
            </value>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.FirstLineIndent">
            <summary>
            Gets or Sets the first line indent of the selected paragraphs.
            </summary>
            <value>
            The first line indent of the selected paragraphs.
            </value>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.TextAlignment">
            <summary>
            Gets or Sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.TextAlignment"/> of the selected paragraphs.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.TextAlignment"/> of the selected paragraphs.
            </value>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.AfterSpacing">
            <summary>
            Gets or Sets the after spacing of the selected paragraphs.
            </summary>
            <value>
            The after spacing of the selected paragraphs.
            </value>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.BeforeSpacing">
            <summary>
            Gets or Sets the before spacing of the selected paragraphs.
            </summary>
            <value>
            The before spacing of the selected paragraphs.
            </value>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.LineSpacing">
            <summary>
            Gets or Sets the line spacing of the selected paragraphs.
            </summary>
            <value>
            The line spacing of the selected paragraphs.
            </value>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.LineSpacingType">
            <summary>
            Gets or Sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.LineSpacingType"/> of the selected paragraphs.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.LineSpacingType"/> of the selected paragraphs.
            </value>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.ListLevelNumber">
            <summary>
            Gets or sets the list level number of the selected paragraphs.
            </summary>
            <value>
            The list level number of the selected paragraphs.
            </value>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat"/>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat"/> class.
            </summary>
            <param name="selection">The selection.</param>
        </member>
        <member name="E:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.NotifyPropertyChanged(System.String)">
            <summary>
            Notifies the property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.ValidateLineSpacing(System.Double)">
            <summary>
            Validates the line spacing property
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.ValidateSpacing(System.Double)">
            <summary>
            validates the spacing property
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.CopyFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat)">
            <summary>
            Copies the format.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.CombineFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat)">
            <summary>
            Combines the format.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.CloneFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat)">
            <summary>
            Clones the specified selection paragraph format.
            </summary>
            <param name="selectionParagraphFormat">The selection paragraph format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.IsEqualFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat)">
            <summary>
            Determines whether the specified format is equal or not.
            </summary>
            <param name="format"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.CopyToFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat)">
            <summary>
            Gets the paragraph format.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.GetList">
             <summary>
             Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> applied for the selected paragraphs.
             </summary>
             <returns>
             Returns the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> instance, if same list is applied for the selected paragraphs.
             Otherwise returns null.
             </returns>
             <example>
             <para>The following code example demonstrates how to retrieves the list for selected paragraphs.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
             </code>
             <code lang="C#">
             public void GetList()
             {
                 // Retrieves the list applied for the selected paragraphs.
                 ListAdv listAdv = richTextBoxAdv.Selection.ParagraphFormat.GetList();
            
                 if (listAdv != null)
                 {
                    // Retrieves the first list level in the list
                    ListLevelAdv listLevelAdv = listAdv.AbstractList.Levels[0];
                    // Sets the list level pattern as upper case letters.
                    listLevelAdv.ListLevelPattern = ListLevelPattern.UpLetter;
                    // Modifies the number format for the list level.
                    listLevelAdv.NumberFormat = "Section.%1";
                    // Modifies the start at value for the list level.
                    listLevelAdv.StartAt = 1;
                    // Modifies the character format for the list level.
                    listLevelAdv.CharacterFormat.FontFamily = new FontFamily("Arial");
            
                     // Sets the list. This will modify the existing list.
                     richTextBoxAdv.Selection.ParagraphFormat.SetList(listAdv);
                 }
             }
             </code>
             <code lang="VB">
             Public Sub GetList()
             
                 ' Retrieves the list applied for the selected paragraphs.
                 ListAdv listAdv = richTextBoxAdv.Selection.ParagraphFormat.GetList()
            
                 If listAdv IsNot Nothing Then
                     ' Retrieves the first list level in the list
                     Dim listLevelAdv As ListLevelAdv = listAdv.AbstractList.Levels(0)
                     ' Sets the list level pattern as upper case letters.
                     listLevelAdv.ListLevelPattern = ListLevelPattern.UpLetter
                     ' Modifies the number format for the list level.
                     listLevelAdv.NumberFormat = "Section.%1"
                     ' Modifies the start at value for the list level.
                     listLevelAdv.StartAt = 1
                     ' Modifies the character format for the list level.
                     listLevelAdv.CharacterFormat.FontFamily = New FontFamily("Arial")
            
                     ' Sets the list. This will modify the existing list.
                     richTextBoxAdv.Selection.ParagraphFormat.SetList(listAdv)
                 End If
             End Sub
             </code>
             </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.SetList(Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv)">
             <summary>
             Sets the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> for the selected paragraphs.
             </summary>
             <param name="listAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> to be applied for the selected paragraphs.</param>
             <remarks>
             If the specifed <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> is null, then list will be cleared for the selected paragraphs.
             Else if the selected paragraph has list, then the existing <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> will get modified with the specified see cref="ListAdv"/>.
             Otherwise the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv"/> will be applied for the selected paragraphs.
             </remarks>
             <example>
             <para>The following code example demonstrates how to apply list for the selected paragraphs.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
             </code>
             <code lang="C#">
             public void SetList()
             {
                 // Initializes a new abstract list.
                 AbstractListAdv abstractListAdv = new AbstractListAdv(null);
                 abstractListAdv.AbstractListId = 4;
            
                 // Defines a new list level.
                 ListLevelAdv listLevel = new ListLevelAdv(abstractListAdv);
                 listLevel.ParagraphFormat.LeftIndent = 48d;
                 listLevel.ParagraphFormat.FirstLineIndent = 24d;
                 listLevel.FollowCharacter = FollowCharacterType.Tab;
                 listLevel.ListLevelPattern = ListLevelPattern.LowLetter;
                 listLevel.NumberFormat = "(%1.)";
                 listLevel.RestartLevel = 0;
                 listLevel.StartAt = 1;
                 // Adds list level to abstract list.
                 abstractListAdv.Levels.Add(listLevel);
            
                 // Creates a new list instance.
                 ListAdv listAdv = new ListAdv(null);
                 listAdv.AbstractList = abstractListAdv;
                 listAdv.AbstractListId = abstractListAdv.AbstractListId;
                 listAdv.ListId = 4;
            
                 // If the selected paragraph has list, then modifies the list.
                 // Else the list will be added to the document and applied for the selected paragraphs.
                 richTextBoxAdv.Selection.ParagraphFormat.SetList(listAdv);
             }
             </code>
             <code lang="VB">
             Public Sub SetList()
             
                 ' Initializes a new abstract list.
                 Dim abstractListAdv As New AbstractListAdv(Nothing)
                 abstractListAdv.AbstractListId = 4
            
                 ' Defines a new list level.
                 Dim listLevel As New ListLevelAdv(abstractListAdv)
                 listLevel.ParagraphFormat.LeftIndent = 48d
                 listLevel.ParagraphFormat.FirstLineIndent = 24d
                 listLevel.FollowCharacter = FollowCharacterType.Tab
                 listLevel.ListLevelPattern = ListLevelPattern.LowLetter
                 listLevel.NumberFormat = "(%1.)"
                 listLevel.RestartLevel = 0
                 listLevel.StartAt = 1
                 ' Adds list level to abstract list.
                 abstractListAdv.Levels.Add(listLevel)
            
                 ' Creates a new list instance.
                  Dim listAdv As New ListAdv(Nothing)
                 listAdv.AbstractList = abstractListAdv
                 listAdv.AbstractListId = abstractListAdv.AbstractListId
                 listAdv.ListId = 4
            
                 ' If the selected paragraph has list, then modifies the list.
                 ' Else the list will be added to the document and applied for the selected paragraphs.
                 richTextBoxAdv.Selection.ParagraphFormat.SetList(listAdv)
             End Sub
             </code>
             </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.ClearFormat">
            <summary>
            Clears the format.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionParagraphFormat.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionSectionFormat">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionSectionFormat"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionSectionFormat.PageSize">
            <summary>
            Gets or Sets the page size of the selected sections.
            </summary>
            <value>
            The page size of the selected sections.
            </value>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat"/>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionSectionFormat.PageMargin">
            <summary>
            Gets or Sets the page margin of the selected sections.
            </summary>
            <value>
            The page margin of the selected sections.
            </value>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv"/>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat"/>
            <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionSectionFormat.HeaderDistance">
            <summary>
            Gets or Sets the header distance from page top.
            </summary>
            <value>
            The header distance.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionSectionFormat.FooterDistance">
            <summary>
            Gets or Sets the footer distance from page bottom.
            </summary>
            <value>
            The footer distance.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionSectionFormat.DifferentFirstPage">
            <summary>
            Gets or sets a value indicating whether the section has different first page.
            </summary>
            <value>
              <c>true</c> if the section has different first page; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionSectionFormat.DifferentOddAndEvenPages">
            <summary>
            Gets or sets a value indicating whether the section has different odd and even pages.
            </summary>
            <value>
            <c>true</c> if the section has different odd and even pages; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionSectionFormat.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionSectionFormat"/> class.
            </summary>
            <param name="selection">The selection.</param>
        </member>
        <member name="E:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionSectionFormat.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionSectionFormat.NotifyPropertyChanged(System.String)">
            <summary>
            Notifies the property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionSectionFormat.CopyFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat)">
            <summary>
            Copies the format.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionSectionFormat.CombineFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat)">
            <summary>
            Combines the format.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionSectionFormat.ClearFormat">
            <summary>
            Clears the format.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionSectionFormat.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat.Table">
            <summary>
            Gets the table.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat.LeftIndent">
            <summary>
            Gets or Sets the left indent of the selected <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </summary>
            <value>
            The left indent.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat.Background">
            <summary>
            Gets or Sets the background color of the selected <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </summary>
            <value>
            The background color.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat.TableAlignment">
            <summary>
            Gets or Sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat.TableAlignment"/> of the selected <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </summary>
            <value>
            The TableAlignment.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat.CellSpacing">
            <summary>
            Gets or Sets the spacing between the cells in the selected <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </summary>
            <value>
            The CellSpacing.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat.LeftMargin">
            <summary>
            Gets or Sets the default cell left margin of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </summary>
            <value>
            The default cell left margin of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat.RightMargin">
            <summary>
            Gets or Sets the default cell right margin of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </summary>
            <value>
            The default cell right margin of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat.TopMargin">
            <summary>
            Gets or Sets the default cell top margin of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </summary>
            <value>
            The default cell top margin of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat.BottomMargin">
            <summary>
            Gets or Sets the default cell bottom margin of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </summary>
            <value>
            The default cell bottom margin of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat.PreferredWidth">
            <summary>
            Gets or Sets the width of the selected <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat.PreferredWidthType">
            <summary>
            Gets or Sets the width type.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat"/> class.
            </summary>
            <param name="selection">The selection.</param>
        </member>
        <member name="E:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat.NotifyPropertyChanged(System.String)">
            <summary>
            Notifies the property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat.CopyFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat)">
            <summary>
            Copies the format.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat.CloneFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat)">
            <summary>
            Clones the specified format.
            </summary>
            <param name="format">The table fomat to clone from.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat.ClearFormat">
            <summary>
            Clears the format.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionTableFormat.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCellFormat">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCellFormat"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCellFormat.VerticalAlignment">
            <summary>
            Gets or Sets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellVerticalAlignment"/> of the selected cells.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CellVerticalAlignment"/> of the selected cells.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCellFormat.LeftMargin">
            <summary>
            Gets or Sets the left margin of the selected cells.
            </summary>
            <value>
            The left margin of the selected cells.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCellFormat.RightMargin">
            <summary>
            Gets or Sets the right margin of the selected cells.
            </summary>
            <value>
            The right margin of the selected cells.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCellFormat.TopMargin">
            <summary>
            Gets or Sets the top margin of the selected cells.
            </summary>
            <value>
            The top margin of the selected cells.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCellFormat.BottomMargin">
            <summary>
            Gets or Sets the bottom margin of the selected cells.
            </summary>
            <value>
            The bottom margin of the selected cells.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCellFormat.Background">
            <summary>
            Gets or Sets the background color of the selected cells.
            </summary>
            <value>
            The background color of the selected cells.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCellFormat.PreferredWidth">
            <summary>
            Gets or Sets the width of the selected cells.
            </summary>
            <value>
            The width of the selected cells.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCellFormat.PreferredWidthType">
            <summary>
            Gets or Sets the width type.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCellFormat.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCellFormat"/> class.
            </summary>
            <param name="selection">The selection.</param>
        </member>
        <member name="E:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCellFormat.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCellFormat.NotifyPropertyChanged(System.String)">
            <summary>
            Notifies the property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCellFormat.CopyFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat)">
            <summary>
            Copies the format.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCellFormat.ClearCellFormat">
            <summary>
            Gets the Cell format
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCellFormat.CombineFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat)">
            <summary>
            Combines the format.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCellFormat.ClearFormat">
            <summary>
            Clears the format.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionCellFormat.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRowFormat">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRowFormat"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRowFormat.Height">
            <summary>
            Gets or Sets the height of the selected rows.
            </summary>
            <value>
            The RowHeight.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRowFormat.HeightType">
            <summary>
            Gets or Sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRowFormat.HeightType"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRowFormat.IsHeader">
            <summary>
            Determines whether the selected rows are header rows.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRowFormat.AllowBreakAcrossPages">
            <summary>
            Determines whether the selected rows are allowed to break across pages.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRowFormat.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRowFormat"/> class.
            </summary>
            <param name="selection">The selection.</param>
        </member>
        <member name="E:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRowFormat.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRowFormat.NotifyPropertyChanged(System.String)">
            <summary>
            Notifies the property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRowFormat.CopyFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat)">
            <summary>
            Copies the format.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRowFormat.CombineFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat)">
            <summary>
            Combines the format.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRowFormat.ClearRowFormat">
            <summary>
            get row formats as null
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRowFormat.ClearFormat">
            <summary>
            Clears the format.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionRowFormat.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Syncfusion.UI.Xaml.RichTextBoxAdv.TextHelper.ParagraphMark" -->
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextHelper.MeasureText(System.String,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline)">
            <summary>
            Measures the text size
            </summary>
            <param name="str"></param>
            <param name="textElement"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextHelper.MeasureTextWithSpace(Syncfusion.UI.Xaml.RichTextBoxAdv.TextElementBox,System.Int32)">
            <summary>
            Measures text with trialing space at end.
            </summary>
            <param name="textElementBox">The text element box.</param>
            <param name="delStartIndex">Start index of the del.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextHelper.ReplaceSpecialCharacters(System.String)">
            <summary>
            Replace the Special Characters.
            </summary>
            <param name="text">text</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextHelper.GetErrorTextWidth(Syncfusion.UI.Xaml.RichTextBoxAdv.TextElementBox,Syncfusion.UI.Xaml.RichTextBoxAdv.SpellingErrorRange,System.Double)">
            <summary>
            Gets the error text width
            </summary>
            <param name="textElementBox">text element box</param>
            <param name="spellingerrorRange">spelling Error Range of the text</param>
            <returns>width of error text</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextHelper.GetErrorTextStartingPoint(Syncfusion.UI.Xaml.RichTextBoxAdv.TextElementBox,Syncfusion.UI.Xaml.RichTextBoxAdv.SpellingErrorRange)">
            <summary>
            gets the starting position of error text
            </summary>
            <param name="textElementBox">the text element box</param>
            <param name="spellingerrorRange">spelling Error Range of the text</param>
            <returns>starting point of the error text</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition">
            <summary>
            Represents the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.Document">
            <summary>
            Gets the Document
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.Paragraph">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/> at which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> lies.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv"/> at which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> lies.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.Offset">
            <summary>
            Gets the offset.
            </summary>
            <value>
            The offset.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.Location">
            <summary>
            Gets the physical location of the TextPosition in page.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.IsAtParagraphStart">
            <summary>
            Gets a value indicating whether this instance is at paragraph start.
            </summary>
            <value>
            <c>true</c> if this instance is at paragraph start; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.GetHierarchicalIndex">
            <summary>
            Gets the hierarchical index of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/>.
            </summary>
            <value>
            The hierarchical index of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/>.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> class for the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.IsInSameParagraph(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Returns a value indicating whether both TextPosition are in same paragraph
            </summary>
            <param name="textPosition"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.IsExistBefore(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Determines whether this instance exist before the specified text position.
            </summary>
            <param name="textPosition">The text position.</param>
            <returns>
              <c>true</c> if this instance exist before the specified text position; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">textPosition is null.</exception>
            <exception cref="T:System.ArgumentException">textPosition is not in the same document.</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.IsExistAfter(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Determines whether this instance exist after the specified text position.
            </summary>
            <param name="textPosition">The text position.</param>
            <returns>
              <c>true</c> if this instance exist after the specified text position; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">textPosition is null.</exception>
            <exception cref="T:System.ArgumentException">textPosition is not in the same document.</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.Clone">
            <summary>
            Returns the copy of the current position
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.SetPosition(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,System.Double)">
            <summary>
            Sets the position.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <param name="offsetInParagraph">The offset in paragraph.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.SetPosition(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.Inline,System.Int32,Windows.Foundation.Point)">
            <summary>
            Sets the position.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <param name="inline">The inline.</param>
            <param name="index">The index.</param>
            <param name="physicalLocation">The physical location.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.SetPosition(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Sets the position.
            </summary>
            <param name="textPosition">The text position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.SetPosition(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,System.Boolean)">
            <summary>
            Sets the position.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <param name="positionAtStart">if set to <c>true</c> [position at start].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.SetPosition(System.String)">
            <summary>
            Sets the text position.
            </summary>
            <param name="hierarchicalIndex">The hierarchicalIndex.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.GetHierarchicalIndexInternal">
            <summary>
            Gets the hierarchical index of current text position.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveNextPosition">
            <summary>
            Moves the next position.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveNextPosition(Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv)">
            <summary>
            Moves the next position.
            </summary>
            <param name="fieldBegin">The field begin.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MovePreviousPosition">
            <summary>
            Moves to the previous position.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MovePreviousPosition(Syncfusion.UI.Xaml.RichTextBoxAdv.FieldEndAdv)">
            <summary>
            Moves the previous position.
            </summary>
            <param name="fieldEnd">The field end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveDown(System.Double)">
            <summary>
            Moves down.
            </summary>
            <param name="left">The left.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveUp(System.Double)">
            <summary>
            Moves up.
            </summary>
            <param name="left">The left.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveForward">
            <summary>
            Moves the forward.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveBackward">
            <summary>
            Moves the backward.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.UpdatePhysicalPosition">
            <summary>
            Updates the physical position.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.UpdatePhysicalPosition(System.Boolean)">
            <summary>
            Updates the physical position.
            </summary>
            <param name="moveNextLine">if set to <c>true</c> [move next line].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveToPreviousLine(System.Double)">
            <summary>
            Moves to previous line.
            </summary>
            <param name="left">The left.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveUpInTable">
            <summary>
            Moves up in table.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveToLineStart(System.Boolean)">
            <summary>
            Moves to line start.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveToNextLine(System.Double)">
            <summary>
            Moves to next line.
            </summary>
            <param name="left">The left.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveDownInTable">
            <summary>
            Moves down in table.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveToLineEnd(System.Boolean)">
            <summary>
            Moves to line end.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.ValidateBackwardFieldSelection(System.String,System.String)">
            <summary>
            Validates the backward field selection.
            </summary>
            <param name="currentIndex">Index of the current.</param>
            <param name="selectionEndIndex">End index of the selection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.ValidateForwardFieldSelection(System.String,System.String)">
            <summary>
            Validates the forward field selection.
            </summary>
            <param name="currentIndex">Index of the current.</param>
            <param name="selectionEndIndex">End index of the selection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.UpdateTextPositionOnFieldCharacter(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Updates the text position on field character.
            </summary>
            <param name="startPosition">The start position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveToParagraphStart(System.Boolean)">
            <summary>
            Moves to paragraph start.
            </summary>
            <param name="moveToPreviousParagraph">If set to <see langword="true"/>, then ; otherwise, .</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveToPreviousParagraphInTable">
            <summary>
            Moves to previous paragraph in table.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveToParagraphEnd(System.Boolean)">
            <summary>
            Moves to paragraph end.
            </summary>
            <param name="moveToNextParagraph">If set to <see langword="true"/>, then ; otherwise, .</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveToNextParagraphInTable">
            <summary>
            Moves to next paragraph in table.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveToPreviousParagraph">
            <summary>
            Moves to previous paragraph.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveToNextParagraph">
            <summary>
            Moves to next paragraph.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveToWordStart(System.Byte)">
            <summary>
            Moves to word start.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveToWordEnd(System.Byte,System.Boolean)">
            <summary>
            Moves to word end.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.IterateParagraphForFields(System.String)">
            <summary>
            Iterate the pararaph till fileld get completes.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.IsAtSamePosition(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
             <summary>
             Identifies whether the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> denotes the same position as this <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/>.
             </summary>
             <param name="textPosition">A <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> instance that denotes a position to compare to this <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> instance.</param>
             <returns>
             True, if this <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> instance and the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> both denotes the same position. 
             Otherwise False.
             </returns>
             <exception cref="T:System.ArgumentNullException">The textPosition cannot be null.</exception>
             <example>
             <para>The following code example demonstrates how to identify whether two text positions denotes the same position.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
             </code>
             <code lang="C#">
             public bool IsAtSamePosition()
             {
                 TextPosition position1 = richTextBoxAdv.Document.GetTextPosition("0;0;0");
            
                 ParagraphAdv paragraph = richTextBoxAdv.Document.Sections[0].Blocks[0] as ParagraphAdv;
                 TextPosition position2 = richTextBoxAdv.Document.GetTextPosition(paragraph, 0);
            
                 if (position1.IsAtSamePosition(position2))
                     return true;
            
                 return false;
             }
             </code>
             <code lang="VB">
             Public Function IsAtSamePosition() As Boolean
                 Dim position1 As TextPosition = richTextBoxAdv.Document.GetTextPosition("0;0;0")
            
                 Dim paragraph As ParagraphAdv = TryCast(richTextBoxAdv.Document.Sections(0).Blocks(0), ParagraphAdv)
                 Dim position2 As TextPosition = richTextBoxAdv.Document.GetTextPosition(paragraph, 0)
            
                 If position1.IsAtSamePosition(position2) Then
                     Return True
                 End If
            
                 Return False
             End Function
             </code>
             </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.IsInSameDocument(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
             <summary>
             Identifies whether the specified see cref="TextPosition"/> lies in the same document as this <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/>.
             </summary>
             <param name="textPosition">A <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> instance that denotes a position to compare to this <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> instance.</param>
             <returns>
             True, if this <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> instance and the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> both lies in the same document.
             Otherwise False.
             </returns>
             <exception cref="T:System.ArgumentNullException">The textPosition cannot be null.</exception>
             <example>
             <para>The following code example demonstrates how to identify whether two text positions lies in the same document.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
             </code>
             <code lang="C#">
             public bool IsInSameDocument()
             {
                 TextPosition position1 = richTextBoxAdv.Document.GetTextPosition("0;4;2");
            
                 ParagraphAdv paragraph = richTextBoxAdv.Document.Sections[0].Blocks[0] as ParagraphAdv;
                 TextPosition position2 = richTextBoxAdv.Document.GetTextPosition(paragraph, 0);
            
                 if (position1.IsInSameDocument(position2))
                     return true;
            
                 return false;
             }
             </code>
             <code lang="VB">
             Public Function IsInSameDocument() As Boolean
                 Dim position1 As TextPosition = richTextBoxAdv.Document.GetTextPosition("0;4;2")
            
                 Dim paragraph As ParagraphAdv = TryCast(richTextBoxAdv.Document.Sections(0).Blocks(0), ParagraphAdv)
                 Dim position2 As TextPosition = richTextBoxAdv.Document.GetTextPosition(paragraph, 0)
            
                 If position1.IsInSameDocument(position2) Then
                     Return True
                 End If
            
                 Return False
             End Function
             </code>
             </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveToLineEnd">
            <summary>
            Moves the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> to the end of the line.
            </summary>
            <example>
            <para>The following code example demonstrates how to select a line by moving the text position to the end of the line.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
            </code>
            <code lang="C#">
            public void SelectLine()
            {
                // Retrieves the text position at the specified hierarchical position.
                TextPosition startTextPosition = richTextBoxAdv.Document.GetTextPosition("0;3;16");
                if (startTextPosition == null)
                    return;
                // Moves the text position to the beginning of the line.
                startTextPosition.MoveToLineStart();
                // Initialize a new text position and moves it to the end of the line.
                TextPosition endTextPosition = richTextBoxAdv.Document.GetTextPosition(startTextPosition.GetHierarchicalIndex);
                endTextPosition.MoveToLineEnd();
                // Selects the line.
                richTextBoxAdv.Selection.Select(startTextPosition, endTextPosition);
            }
            </code>
            <code lang="VB">
            Public Sub SelectLine()
                ' Retrieves the text position at the specified hierarchical position.
                Dim startTextPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition("0;3;16")
                If startTextPosition Is Nothing Then
                    Return
                End If
                ' Moves the text position to the beginning of the line.
                startTextPosition.MoveToLineStart()
                ' Initialize a new text position and moves it to the end of the line.
                Dim endTextPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition(startTextPosition.GetHierarchicalIndex)
                endTextPosition.MoveToLineEnd()
                ' Selects the line.
                richTextBoxAdv.Selection.[Select](startTextPosition, endTextPosition)
            End Sub
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveToLineStart">
            <summary>
            Moves the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> to the beginning of the line.
            </summary>
            <example>
            <para>The following code example demonstrates how to select a line by moving the text position to the beginning of the line.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
            </code>
            <code lang="C#">
            public void SelectLine()
            {
                // Retrieves the text position at the specified hierarchical position.
                TextPosition startTextPosition = richTextBoxAdv.Document.GetTextPosition("0;3;16");
                if (startTextPosition == null)
                    return;
                // Moves the text position to the beginning of the line.
                startTextPosition.MoveToLineStart();
                // Initialize a new text position and moves it to the end of the line.
                TextPosition endTextPosition = richTextBoxAdv.Document.GetTextPosition(startTextPosition.GetHierarchicalIndex);
                endTextPosition.MoveToLineEnd();
                // Selects the line.
                richTextBoxAdv.Selection.Select(startTextPosition, endTextPosition);
            }
            </code>
            <code lang="VB">
            Public Sub SelectLine()
                ' Retrieves the text position at the specified hierarchical position.
                Dim startTextPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition("0;3;16")
                If startTextPosition Is Nothing Then
                    Return
                End If
                ' Moves the text position to the beginning of the line.
                startTextPosition.MoveToLineStart()
                ' Initialize a new text position and moves it to the end of the line.
                Dim endTextPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition(startTextPosition.GetHierarchicalIndex)
                endTextPosition.MoveToLineEnd()
                ' Selects the line.
                richTextBoxAdv.Selection.[Select](startTextPosition, endTextPosition)
            End Sub
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveToParagraphStart">
            <summary>
            Moves the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> to the beginning of the paragraph.
            </summary>
            <example>
            <para>The following code example demonstrates how to select a paragraph by moving the text position to the beginning of the paragraph.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
            </code>
            <code lang="C#">
            public void SelectParagraph()
            {
                // Retrieves the text position at the specified hierarchical position.
                TextPosition startTextPosition = richTextBoxAdv.Document.GetTextPosition("0;2;16");
                if (startTextPosition == null)
                    return;
                // Moves the text position to the beginning of the paragraph.
                startTextPosition.MoveToParagraphStart();
                // Initialize a new text position and moves it to the end of the paragraph.
                TextPosition endTextPosition = richTextBoxAdv.Document.GetTextPosition(startTextPosition.GetHierarchicalIndex);
                endTextPosition.MoveToParagraphEnd();
                // Selects the paragraph.
                richTextBoxAdv.Selection.Select(startTextPosition, endTextPosition);
            }
            </code>
            <code lang="VB">
            Public Sub SelectParagraph()
                ' Retrieves the text position at the specified hierarchical position.
                Dim startTextPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition("0;2;16")
                If startTextPosition Is Nothing Then
                    Return
                End If
                ' Moves the text position to the beginning of the paragraph.
                startTextPosition.MoveToParagraphStart()
                ' Initialize a new text position and moves it to the end of the paragraph.
                Dim endTextPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition(startTextPosition.GetHierarchicalIndex)
                endTextPosition.MoveToParagraphEnd()
                ' Selects the paragraph.
                richTextBoxAdv.Selection.[Select](startTextPosition, endTextPosition)
            End Sub
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveToParagraphEnd">
            <summary>
            Moves the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> to the end of the paragraph.
            </summary>
            <example>
            <para>The following code example demonstrates how to select a paragraph move the text position to the end of the paragraph.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
            </code>
            <code lang="C#">
            public void SelectParagraph()
            {
                // Retrieves the text position at the specified hierarchical position.
                TextPosition startTextPosition = richTextBoxAdv.Document.GetTextPosition("0;2;16");
                if (startTextPosition == null)
                    return;
                // Moves the text position to the beginning of the paragraph.
                startTextPosition.MoveToParagraphStart();
                // Initialize a new text position and moves it to the end of the paragraph.
                TextPosition endTextPosition = richTextBoxAdv.Document.GetTextPosition(startTextPosition.GetHierarchicalIndex);
                endTextPosition.MoveToParagraphEnd();
                // Selects the paragraph.
                richTextBoxAdv.Selection.Select(startTextPosition, endTextPosition);
            }
            </code>
            <code lang="VB">
            Public Sub SelectParagraph()
                ' Retrieves the text position at the specified hierarchical position.
                Dim startTextPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition("0;2;16")
                If startTextPosition Is Nothing Then
                    Return
                End If
                ' Moves the text position to the beginning of the paragraph.
                startTextPosition.MoveToParagraphStart()
                ' Initialize a new text position and moves it to the end of the paragraph.
                Dim endTextPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition(startTextPosition.GetHierarchicalIndex)
                endTextPosition.MoveToParagraphEnd()
                ' Selects the paragraph.
                richTextBoxAdv.Selection.[Select](startTextPosition, endTextPosition)
            End Sub
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveToNextParagraphStart">
            <summary>
            Moves the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> to the beginning of the next paragraph.
            </summary>
            <example>
            <para>The following code example demonstrates how to select next paragraph by moving the text position to the beginning of the next paragraph.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
            </code>
            <code lang="C#">
            public void SelectNextParagraph()
            {
                // Retrieves the text position at the specified hierarchical position.
                TextPosition startTextPosition = richTextBoxAdv.Document.GetTextPosition("0;4;21");
                if (startTextPosition == null)
                    return;
                // Moves the text position to the beginning of the next paragraph.
                startTextPosition.MoveToNextParagraphStart();
                // Initialize a new text position and moves it to the end of the next paragraph.
                TextPosition endTextPosition = richTextBoxAdv.Document.GetTextPosition(startTextPosition.GetHierarchicalIndex);
                endTextPosition.MoveToParagraphEnd();
                // Selects the next paragraph.
                richTextBoxAdv.Selection.Select(startTextPosition, endTextPosition);
            }
            </code>
            <code lang="VB">
            Public Sub SelectNextParagraph()
                ' Retrieves the text position at the specified hierarchical position.
                Dim startTextPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition("0;4;21")
                If startTextPosition Is Nothing Then
                    Return
                End If
                ' Moves the text position to the beginning of the next paragraph.
                startTextPosition.MoveToNextParagraphStart()
                ' Initialize a new text position and moves it to the end of the next paragraph.
                Dim endTextPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition(startTextPosition.GetHierarchicalIndex)
                endTextPosition.MoveToParagraphEnd()
                ' Selects the next paragraph.
                richTextBoxAdv.Selection.[Select](startTextPosition, endTextPosition)
            End Sub
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveToPreviousParagraphEnd">
            <summary>
            Moves the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> to the end of the previous paragraph.
            </summary>
            <example>
            <para>The following code example demonstrates how to select previous paragraph by moving the text position to the end of the previous paragraph.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
            </code>
            <code lang="C#">
            public void SelectPreviousParagraph()
            {
                // Retrieves the text position at the specified hierarchical position.
                TextPosition endTextPosition = richTextBoxAdv.Document.GetTextPosition("0;2;40");
                if (endTextPosition == null)
                    return;
                // Moves the text position to the end of the previous paragraph.
                endTextPosition.MoveToPreviousParagraphEnd();
                // Initialize a new text position and moves it to the beginning of the previous paragraph.
                TextPosition startTextPosition = richTextBoxAdv.Document.GetTextPosition(endTextPosition.GetHierarchicalIndex);
                startTextPosition.MoveToParagraphStart();
                // Selects the previous paragraph.
                richTextBoxAdv.Selection.Select(startTextPosition, endTextPosition);
            }
            </code>
            <code lang="VB">
            Public Sub SelectPreviousParagraph()
                ' Retrieves the text position at the specified hierarchical position.
                Dim endTextPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition("0;2;40")
                If endTextPosition Is Nothing Then
                    Return
                End If
                ' Moves the text position to the end of the previous paragraph.
                endTextPosition.MoveToPreviousParagraphEnd()
                ' Initialize a new text position and moves it to the start of the previous paragraph.
                Dim startTextPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition(endTextPosition.GetHierarchicalIndex)
                startTextPosition.MoveToParagraphStart()
                ' Selects the previous paragraph.
                richTextBoxAdv.Selection.[Select](startTextPosition, endTextPosition)
            End Sub
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveToWordStart">
            <summary>
            Moves the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> to the beginning of word.
            </summary>
            <example>
            <para>The following code example demonstrates how to select a word by moving the text position to the beginning of word.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
            </code>
            <code lang="C#">
            public void SelectWord()
            {
                // Retrieves the text position at the specified hierarchical position.
                TextPosition startTextPosition = richTextBoxAdv.Document.GetTextPosition("0;0;24");
                if (startTextPosition == null)
                    return;
                // Moves the text position to the beginning of the word.
                startTextPosition.MoveToWordStart();
                // Initialize a new text position and moves it to the end of the word.
                TextPosition endTextPosition = richTextBoxAdv.Document.GetTextPosition(startTextPosition.GetHierarchicalIndex);
                endTextPosition.MoveToWordEnd();
                // Selects the word.
                richTextBoxAdv.Selection.Select(startTextPosition, endTextPosition);
            }
            </code>
            <code lang="VB">
            Public Sub SelectWord()
                ' Retrieves the text position at the specified hierarchical position.
                Dim startTextPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition("0;0;24")
                If startTextPosition Is Nothing Then
                    Return
                End If
                ' Moves the text position to the beginning of the word.
                startTextPosition.MoveToWordStart()
                ' Initialize a new text position and moves it to the end of the word.
                Dim endTextPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition(startTextPosition.GetHierarchicalIndex)
                endTextPosition.MoveToWordEnd()
                ' Selects the word.
                richTextBoxAdv.Selection.[Select](startTextPosition, endTextPosition)
            End Sub
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.MoveToWordEnd">
            <summary>
            Moves the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> to the end of word.
            </summary>
            <example>
            <para>The following code example demonstrates how to select a word by moving the text position to the end of word.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
            </code>
            <code lang="C#">
            public void SelectWord()
            {
                // Retrieves the text position at the specified hierarchical position.
                TextPosition startTextPosition = richTextBoxAdv.Document.GetTextPosition("0;0;24");
                if (startTextPosition == null)
                    return;
                // Moves the text position to the beginning of the word.
                startTextPosition.MoveToWordStart();
                // Initialize a new text position and moves it to the end of the word.
                TextPosition endTextPosition = richTextBoxAdv.Document.GetTextPosition(startTextPosition.GetHierarchicalIndex);
                endTextPosition.MoveToWordEnd();
                // Selects the word.
                richTextBoxAdv.Selection.Select(startTextPosition, endTextPosition);
            }
            </code>
            <code lang="VB">
            Public Sub SelectWord()
                ' Retrieves the text position at the specified hierarchical position.
                Dim startTextPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition("0;0;24")
                If startTextPosition Is Nothing Then
                    Return
                End If
                ' Moves the text position to the beginning of the word.
                startTextPosition.MoveToWordStart()
                ' Initialize a new text position and moves it to the end of the word.
                Dim endTextPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition(startTextPosition.GetHierarchicalIndex)
                endTextPosition.MoveToWordEnd()
                ' Selects the word.
                richTextBoxAdv.Selection.[Select](startTextPosition, endTextPosition)
            End Sub
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition.IsForwardSelection(System.String,System.String)">
            <summary>
            Determines whether the specified start and end is forward selection.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <returns>
              <c>true</c> if the specified start and end is forward selection; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellingErrorRange">
            <summary>
            Represents the Spelling error range.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellingError">
            <summary>
            Represents a misspelled word in a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellingError.Start">
            <summary>
            Gets the start text position of the error text.
            </summary>
            <value>
            The text position.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellingError.End">
            <summary>
            Gets the end text position of the error text.
            </summary>
            <value>
            The text position.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellingError.Text">
            <summary>
            Gets the error text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellingError.OwnerControl">
            <summary>
            Gets the owner control.
            </summary>
            <value>
            The owner control.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellingError.Suggestions">
            <summary>
            Gets a list of suggested spelling replacements for the misspelled word.
            </summary>
            <value>The collection of spelling suggestions for the misspelled word.</value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellingError.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Controls.RichTextBoxAdv.SpellingError">SpellingError</see> class. 
            </summary>
            <param name="sfRichTextBox"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellingError.IgnoreAll">
            <summary>
            Ignores all the occurrences of a misspelled word in a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.
            </summary>
            <example>
            <para>The following code example demonstrates how to ignore all occurrences of a misspelled word in a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv" xmlns:System="clr-namespace:System;assembly=mscorlib" 
                                                xmlns:RichTextBoxAdv="clr-namespace:Syncfusion.Windows.Controls.RichTextBoxAdv;assembly=Syncfusion.SfRichTextBoxAdv.Wpf"&gt;
                &lt;RichTextBoxAdv:SfRichTextBoxAdv.SpellChecker&gt;
                    &lt;!-- Enables spell checking functionality. --&gt;
                    &lt;RichTextBoxAdv:SpellChecker IsEnabled="True" IgnoreAlphaNumericWords="True" IgnoreURIs="True" IgnoreUppercaseWords="False"&gt;
                        &lt;RichTextBoxAdv:SpellChecker.CustomDictionaries&gt;
                            &lt;!-- Defines the custom dictionaries for spell checking. --&gt;
                            &lt;System:String&gt;../../Assets/Default.dic&lt;/System:String&gt;
                        &lt;/RichTextBoxAdv:SpellChecker.CustomDictionaries&gt;
                    &lt;/RichTextBoxAdv:SpellChecker&gt;
                &lt;/RichTextBoxAdv:SfRichTextBoxAdv.SpellChecker&gt;
            &lt;/RichTextBoxAdv:SfRichTextBoxAdv&gt;
            </code>
            <code lang="C#">
            public void IgnoreSpellingError()
            {
                TextPosition textPosition = richTextBoxAdv.Document.GetTextPosition("0;0;20");
                // Gets the spelling error at the specified text position.
                Syncfusion.Windows.Controls.RichTextBoxAdv.SpellingError spellingError = richTextBoxAdv.GetSpellingError(textPosition);
                if (spellingError != null)
                    // If a spelling error is found, ignores all the occurrences of the misspelled word.
                    spellingError.IgnoreAll();
            }
            </code>
            <code lang="VB">
            Public Sub IgnoreSpellingError()
                Dim textPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition("0;0;20")
                ' Gets the spelling error at the specified text position.
                Dim spellingError As Syncfusion.Windows.Controls.RichTextBoxAdv.SpellingError = richTextBoxAdv.GetSpellingError(textPosition)
                If spellingError IsNot Nothing Then
                    ' If a spelling error is found, ignores all the occurrences of the misspelled word.
                    spellingError.IgnoreAll()
                End If
            End Sub
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellingError.Correct(System.String)">
            <summary>
            Replaces the misspelled word in a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control with the specified correction text .
            </summary>
            <param name="correctText">The correction text to replace the misspelled word in a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.</param>
            <example>
            <para>The following code example demonstrates how to correct a misspelled word in a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv" xmlns:System="clr-namespace:System;assembly=mscorlib" 
                                                xmlns:RichTextBoxAdv="clr-namespace:Syncfusion.Windows.Controls.RichTextBoxAdv;assembly=Syncfusion.SfRichTextBoxAdv.Wpf"&gt;
                &lt;RichTextBoxAdv:SfRichTextBoxAdv.SpellChecker&gt;
                    &lt;!-- Enables spell checking functionality. --&gt;
                    &lt;RichTextBoxAdv:SpellChecker IsEnabled="True" IgnoreAlphaNumericWords="True" IgnoreURIs="True" IgnoreUppercaseWords="False"&gt;
                        &lt;RichTextBoxAdv:SpellChecker.CustomDictionaries&gt;
                            &lt;!-- Defines the custom dictionaries for spell checking. --&gt;
                            &lt;System:String&gt;../../Assets/Default.dic&lt;/System:String&gt;
                        &lt;/RichTextBoxAdv:SpellChecker.CustomDictionaries&gt;
                    &lt;/RichTextBoxAdv:SpellChecker&gt;
                &lt;/RichTextBoxAdv:SfRichTextBoxAdv.SpellChecker&gt;
            &lt;/RichTextBoxAdv:SfRichTextBoxAdv&gt;
            </code>
            <code lang="C#">
            public void CorrectSpellingError()
            {
                TextPosition textPosition = richTextBoxAdv.Document.GetTextPosition("0;0;20");
                // Gets the spelling error at the specified text position.
                Syncfusion.Windows.Controls.RichTextBoxAdv.SpellingError spellingError = richTextBoxAdv.GetSpellingError(textPosition);
                if (spellingError != null &amp;&amp; spellingError.Suggestions.Count() > 0)
                    // If a spelling error is found, corrects the misspelled word.
                    spellingError.Correct(spellingError.Suggestions.ElementAt(0));
            }
            </code>
            <code lang="VB">
            Public Sub CorrectSpellingError()
                Dim textPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition("0;0;20")
                ' Gets the spelling error at the specified text position.
                Dim spellingError As Syncfusion.Windows.Controls.RichTextBoxAdv.SpellingError = richTextBoxAdv.GetSpellingError(textPosition)
                If spellingError IsNot Nothing AndAlso spellingError.Suggestions.Count() > 0 Then
                    ' If a spelling error is found, corrects the misspelled word.
                    spellingError.Correct(spellingError.Suggestions.ElementAt(0))
                End If
            End Sub
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellingError.Dispose">
            <summary>
            Releases unmanaged resources.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker">
            <summary>
            Provides real-time spell checking functionality to a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.
            </summary>
            <example>
            <para>The following code example demonstrates how to enable spell checking functionality in a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv" xmlns:System="clr-namespace:System;assembly=mscorlib" 
                                                xmlns:RichTextBoxAdv="clr-namespace:Syncfusion.Windows.Controls.RichTextBoxAdv;assembly=Syncfusion.SfRichTextBoxAdv.Wpf"&gt;
                &lt;RichTextBoxAdv:SfRichTextBoxAdv.SpellChecker&gt;
                    &lt;!-- Enables spell checking functionality. --&gt;
                    &lt;RichTextBoxAdv:SpellChecker IsEnabled="True" IgnoreAlphaNumericWords="True" IgnoreURIs="True" IgnoreUppercaseWords="False"&gt;
                        &lt;RichTextBoxAdv:SpellChecker.CustomDictionaries&gt;
                            &lt;!-- Defines the custom dictionaries for spell checking. --&gt;
                            &lt;System:String&gt;../../Assets/Default.dic&lt;/System:String&gt;
                        &lt;/RichTextBoxAdv:SpellChecker.CustomDictionaries&gt;
                    &lt;/RichTextBoxAdv:SpellChecker&gt;
                &lt;/RichTextBoxAdv:SfRichTextBoxAdv.SpellChecker&gt;
            &lt;/RichTextBoxAdv:SfRichTextBoxAdv&gt;
            </code>
            <code lang="C#">
            // Defines the control.
            Syncfusion.Windows.Controls.RichTextBoxAdv.SfRichTextBoxAdv richTextBoxAdv = new Syncfusion.Windows.Controls.RichTextBoxAdv.SfRichTextBoxAdv();
            
            // Enables the spell checking functionality.
            SpellChecker spellChecker = new SpellChecker();
            spellChecker.IsEnabled = true;
            spellChecker.IgnoreAlphaNumericWords = true;
            spellChecker.IgnoreURIs = true;
            spellChecker.IgnoreUppercaseWords = false;
            // Defines the custom dictionaries for spell checking.
            spellChecker.CustomDictionaries.Add("../../Assets/Default.dic");
            
            richTextBoxAdv.SpellChecker = spellChecker;
            </code>
            <code lang="VB">
            ' Defines the control.
            Dim richTextBoxAdv As New Syncfusion.Windows.Controls.RichTextBoxAdv.SfRichTextBoxAdv()
            
            ' Enables the spell checking functionality.
            Dim spellChecker As New SpellChecker()
            spellChecker.IsEnabled = True
            spellChecker.IgnoreAlphaNumericWords = True
            spellChecker.IgnoreURIs = True
            spellChecker.IgnoreUppercaseWords = False
            ' Defines the custom dictionaries for spell checking.
            spellChecker.CustomDictionaries.Add("../../Assets/Default.dic")
            
            richTextBoxAdv.SpellChecker = spellChecker
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.DictionaryWordCollection">
            <summary>
            Gets the dictionary word collection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.IgnoredWordCollection">
            <summary>
            Gets the dictionary word collection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.SpellingErrorPositions">
            <summary>
            Gets the spelling error positions.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.IsCustomDictionaryAdded">
            <summary>
            Gets the default custom dictionary added or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.OwnerControl">
            <summary>
            Gets the owner control.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.DictionaryCollection">
            <summary>
            Gets the Dictionary collection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.CustomDictionaryCollection">
            <summary>
            Gets the Custom dictionary collection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.IsEnabled">
            <summary>
             Gets or sets a value that determines whether the spelling checker is enabled on a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.
             </summary>
             <value><c>true</c> if the spelling checker is enabled on the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.Dictionaries">
            <summary>
            Gets the collection of dictionary file locations that are used for spell checking.
            </summary>
            <value>The collection of dictionary file locations.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.CustomDictionaries">
            <summary>
            Gets the collection of dictionary file locations that are used for custom spell checking.
            </summary>
            <value>The collection of dictionary file locations.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.IgnoreURIs">
            <summary>
            Gets or sets a value that determines whether to ignore URIs while spell checking in a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.
            </summary>
            <value><c>true</c> if URIs are ignored while spell checking in a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.IgnoreUppercaseWords">
            <summary>
            Gets or sets a value that determines whether to ignore upper case words while spell checking in a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.
            </summary>
            <value><c>true</c> if upper case words are ignored while spell checking in a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control; otherwise <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.IgnoreAlphaNumericWords">
            <summary>
            Gets or sets a value that determines whether to ignore alpha numeric words while spell checking in a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.
            </summary>
            <value><c>true</c> if alpha numeric words are ignored while spell checking in a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control; otherwise <c>false</c>.</value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.IsEnabledProperty">
            <summary>
            Identifies the IsEnabled dependency property.
            </summary>
            <value>The identifier for the IsEnabled dependency property.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.DictionariesProperty">
            <summary>
            Identifies the Dictionaries dependency property.
            </summary>
            <value>The identifier for the Dictionaries dependency property.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.CustomDictionariesProperty">
            <summary>
            Identifies the CustomDictionaries dependency property.
            </summary>
            <value>The identifier for the CustomDictionaries dependency property.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.IgnoreURIsProperty">
            <summary>
            Identifies the IgnoreURIs dependency property.
            </summary>
            <value>The identifier for the IgnoreURIs dependency property.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.IgnoreUppercaseWordsProperty">
            <summary>
            Identifies the IgnoreUppercaseWords dependency property.
            </summary>
            <value>The identifier for the IgnoreUppercaseWords dependency property.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.IgnoreAlphaNumericWordsProperty">
            <summary>
            Identifies the IgnoreAlphaNumericWords dependency property.
            </summary>
            <value>The identifier for the IgnoreAlphaNumericWords dependency property.</value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.OnIsEnabledChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            called when the IsEnabledproperty changes
            </summary>
            <param name="dependencyObject"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.OnDictionariesChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            called when Dictionaries property changed.
            </summary>
            <param name="dependencyObject"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.OnCustomDicionariesChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when custom dicionaries changed.
            </summary>
            <param name="dependencyObject"></param>
            <param name="args">An <see cref="T:System.Windows.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.OnIgnoreURIsPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            called when the IgnoreURIs property changed 
            </summary>
            <param name="dependencyObject"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.OnIgnoreUppercaseWordsPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            called when the IgnoreUppercaseWords property changed 
            </summary>
            <param name="dependencyObject"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.OnIgnoreAlphaNumericWordsPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            called when the IgnoreAlphaNumericWords property changed 
            </summary>
            <param name="dependencyObject"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.CheckSpelling">
            <summary>
            Checks the spellings mistakes in a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.
            </summary>
            <example>
            <para>The following code example demonstrates how to check spelling mistakes in a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv" xmlns:System="clr-namespace:System;assembly=mscorlib" 
                                                xmlns:RichTextBoxAdv="clr-namespace:Syncfusion.Windows.Controls.RichTextBoxAdv;assembly=Syncfusion.SfRichTextBoxAdv.Wpf"&gt;
                &lt;RichTextBoxAdv:SfRichTextBoxAdv.SpellChecker&gt;
                    &lt;!-- Enables spell checking functionality. --&gt;
                    &lt;RichTextBoxAdv:SpellChecker IsEnabled="True" IgnoreAlphaNumericWords="True" IgnoreURIs="True" IgnoreUppercaseWords="False"&gt;
                        &lt;RichTextBoxAdv:SpellChecker.CustomDictionaries&gt;
                            &lt;!-- Defines the custom dictionaries for spell checking. --&gt;
                            &lt;System:String&gt;../../Assets/Default.dic&lt;/System:String&gt;
                        &lt;/RichTextBoxAdv:SpellChecker.CustomDictionaries&gt;
                    &lt;/RichTextBoxAdv:SpellChecker&gt;
                &lt;/RichTextBoxAdv:SfRichTextBoxAdv.SpellChecker&gt;
            &lt;/RichTextBoxAdv:SfRichTextBoxAdv&gt;
            </code>
            <code lang="C#">
            public void CheckSpelling()
            {
                if (richTextBoxAdv.SpellChecker != null &amp;&amp; richTextBoxAdv.SpellChecker.IsEnabled)
                    richTextBoxAdv.SpellChecker.CheckSpelling();
            }
            </code>
            <code lang="VB">
            Public Sub CheckSpelling()
                If richTextBoxAdv.SpellChecker IsNot Nothing AndAlso richTextBoxAdv.SpellChecker.IsEnabled Then
                    richTextBoxAdv.SpellChecker.CheckSpelling()
                End If
            End Sub
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.Dictionaries_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called on dictionary collection changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.CustomDictionaries_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called on custom dictionary collection changed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.ValidateUri(System.String)">
            <summary>
            Makes sure Uri is of supported kind. Throws exception for unsupported URI type.
            Supported URI types [please keep this list updated]
            1. Local path
            2. Relative path
            3. UNC path
            4. Pack URI
            </summary>
            <param name="uri">The uri.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.IsPackUri(System.Uri)">
            <summary>
            checking whether the uri is pack uri
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.GetStream(System.Uri)">
            <summary>
            Gets the Stream from the uri.
            </summary>
            <param name="uri"></param>
            <returns>The read stream</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.SpellCheckText(System.String,Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID)">
            <summary>
            Check spelling of each word
            </summary>
            <param name="text">The text.</param>
            <param name="languageID">The language Id.</param>
            <returns>The boolean value</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.AddToDictionary(System.String)">
            <summary>
            Adds the word in dictionary
            </summary>
            <param name="wordToAdd"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.IgnoreAll(System.String)">
            <summary>
            Ignore the misspelled word in the document
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.AddDictionary(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Boolean)">
            <summary>
            Add the dictionary and reset the spellchecking process.
            </summary>
            <param name="e"></param>
            <param name="isAddCustomDistionary"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.RemoveDictionary(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Boolean)">
            <summary>
            Remove custom dictionary and  reset the spellchecker. 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.ResetDictionaryCollection(System.Collections.Specialized.NotifyCollectionChangedEventArgs,System.Boolean)">
            <summary>
            Reset dictionary collection and  reset the spellchecker. 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.UpdateCustomDictionaries(System.String)">
            <summary>
            Updates custom dictionaries.
            </summary>
            <param name="word"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.RemoveIgnoredWord(System.String,System.Boolean)">
            <summary>
            removes the word from collection 
            </summary>
            <param name="ignoredWord"></param>
            <param name="isInDictionary"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.RemoveWordFromCustomDictionary(System.String)">
            <summary>
            remove word from dictionary
            </summary>
            <param name="ignoredWord"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.ReAddIgnoredWord(System.String,System.Boolean)">
            <summary>
            readding the ignored word.
            </summary>
            <param name="wordToAdd"></param>
            <param name="isInDictionary"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.GetSpellingErrorAtPosition(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            gets the spelling error object
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.GetSpellingErrorAtPosition(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Get spelling error at the specified position.
            </summary>
            <param name="startPosition"></param>
            <param name="endPosition"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.GetSuggestion(System.String,Syncfusion.UI.Xaml.RichTextBoxAdv.LanguageID)">
            <summary>
            Get suggestion for text.
            </summary>
            <param name="text"></param>
            <param name="languageID"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.GetSuggestionFromDictionary(System.String)">
            <summary>
            Get suggestions from the dictionary.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.FilterSuggestions(System.String,System.Collections.Generic.List{System.String}@)">
            <summary>
            Filtered suggetsions.
            </summary>
            <param name="text"></param>
            <param name="dictionarySuggestions"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.FilterSuggestionByRelativeGrouping(System.String,System.Collections.Generic.List{System.String}@)">
            <summary>
            Filter suggestions by relative groupaing.
            </summary>
            <param name="lookUpString"></param>
            <param name="dictionarySuggestions"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.CanSuggest(System.String,System.String,System.Int32)">
            <summary>
            Can suggest the words.
            </summary>
            <param name="word"></param>
            <param name="lookUpString"></param>
            <param name="threshhold"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.CheckWordLength(System.String,System.String)">
            <summary>
            Check the word length.
            </summary>
            <param name="word"></param>
            <param name="lookUpString"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.CheckRepetionInWord(System.String,System.String)">
            <summary>
            Check the repeition in word.
            </summary>
            <param name="word"></param>
            <param name="lookUpString"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.CheckRepetionInLookUpString(System.String,System.String,System.Int32)">
            <summary>
            Check the repetition in look up string.
            </summary>
            <param name="word"></param>
            <param name="lookUpString"></param>
            <param name="threshhold"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.GetRepetitionOffset(System.String,System.String)">
            <summary>
            Get the reprtition offset.
            </summary>
            <param name="word"></param>
            <param name="lookupString"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.FilterSuggestionsBySearch(System.String)">
            <summary>
            Filter sugestions by search.
            </summary>
            <param name="word"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.SortSuggestions(System.String,System.Collections.Generic.List{System.String}@)">
            <summary>
            Sort the suggestions.
            </summary>
            <param name="text"></param>
            <param name="dictionarySuggestions"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.Compare(System.String,System.String)">
            <summary>
            compare the suggestions with word.
            </summary>
            <param name="suggestion"></param>
            <param name="word"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.GetDontSuggestWords">
            <summary>
            Gets the odnt suggesti words list.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellChecker.Dispose">
            <summary>
            Releasing the Unmanged resources
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Sorter.Compare(System.Object,System.Object)">
            <summary>
            Compares the two objects.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Sorter.Compare(System.String,System.String)">
            <summary>
            Compares the two String values
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ReverseSorter.Compare(System.String,System.String)">
            <summary>
            Compares the two object values.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ReverseSorter.Reverse(System.String)">
            <summary>
            Returns reverse String of input String
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer"/> class.
            </summary>
            <param name="richTextBox"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.Initialize">
            <summary>
            Initializes the current instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.Initialize(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes the current instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer"/> class.
            </summary>
            <param name="richTextBox"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.InitPage">
            <summary>
            Initializes the page.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.GetContentHeight">
            <summary>
            Gets the height of the content.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.UpdateVerticalScrollBar(System.Double)">
            <summary>
            Updates the vertical scroll bar
            </summary>
            <param name="height">The height.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.UpdateHorizontalScrollBar(System.Double)">
            <summary>
            Updates the horizontal scroll bar.
            </summary>
            <param name="width">The width.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.SetRenderTransforms">
            <summary>
            Sets the render transforms.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.UpdateCursor(Windows.Foundation.Point)">
            <summary>
            Updates the cursor.
            </summary>
            <param name="point">The point.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.CreateNewPage(Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv)">
            <summary>
            Creates the new page.
            </summary>
            <param name="section">The section.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.AddEmptyPage">
            <summary>
            Adds the empty page.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.IsLoadingPreloadPages">
            <summary>
            Determines whether loading preload pages.
            </summary>
            <returns>
              <c>true</c> if loading preload pages; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.UpdateScrollBars">
            <summary>
            Updates the page bounds and scrollbar.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.UpdateHorizontalWidth">
            <summary>
            Updates the horizontal width
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.HorizontalScrollBar_ValueChanged(System.Object,Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs)">
            <summary>
            Handles the horizontal scroll bar value changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The e.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.VerticalScrollBar_ValueChanged(System.Object,Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs)">
            <summary>
            Handles the vertical scroll bar value changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The e.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.RenderVisiblePages">
            <summary>
            Renders the visible pages.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.RenderProofingErrors">
            <summary>
            Renders the proofing for visible pages.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.GetPageCanvas(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            Gets the page canvas.
            </summary>
            <param name="page"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.RemoveRenderedPage(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            Removes the renderd page.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.ClearPageCanvas">
            <summary>
            Clears the page canvas.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.UpdatePageBackground">
            <summary>
            Updates the page background.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.Zoom">
            <summary>
            Zooms this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.FindFocusedPage(Windows.Devices.Input.MouseEventArgs)">
            <summary>
            Finds the focused page
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.FindFocusedPage(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Finds the focused page.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.FindFocusedPage(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
            <summary>
            Finds the focused page.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.FindFocusedPage(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
            <summary>
            Finds the focused page.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.UpdateCoreCursor(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Updates the core cursor.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer.UpdatePageAfterZoom(System.Double)">
            <summary>
            Updates the page after zoom.
            </summary>
            <param name="prevScaleFactor">The previous scale factor.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.TouchEllipse.InnerCircleDiameter">
            <summary>
            Gets or sets the inner circle diameter.
            </summary>
            <value>
            The inner circle diameter.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TouchEllipse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TouchEllipse"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TouchEllipse.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.ResizeMarkSize">
            <summary>
            Gets the size of the resize mark.
            </summary>
            <value>
            The size of the resize mark.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer" /> class.
            </summary>
            <param name="richTextBoxAdv">The rich text box adv.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.SetWidth(System.Double)">
            <summary>
            Sets the width.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.SetHeight(System.Double)">
            <summary>
            Sets the height.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.UpdateResizeMark(System.Boolean)">
            <summary>
            Updates the resize marks.
            </summary>
            <param name="isTouch">If set to <see langword="true"/>, then ; otherwise, .</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.UpdateResizeMarkVisibility">
            <summary>
            Updates the resize mark visibility.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.InitBorder">
            <summary>
            Initializes the border.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.InitTouchResizeMarks">
            <summary>
            Initializes the touch resize marks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.InitEllipse(Windows.UI.Xaml.HorizontalAlignment,Windows.UI.Xaml.VerticalAlignment)">
            <summary>
            Initializes the ellipse.
            </summary>
            <param name="horizontalAlignment">The horizontal alignment.</param>
            <param name="verticalAlignment">The vertical alignment.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.ellipse_PointerReleased(System.Object,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Handles the PointerReleased event of the ellipse control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.ellipse_PointerPressed(System.Object,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Handles the PointerPressed event of the ellipse control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.ellipse_ManipulationDelta(System.Object,Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
            <summary>
            Handles the ManipulationDelta event of the ellipse control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.ellipse_ManipulationCompleted(System.Object,Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
            <summary>
            Handles the ManipulationCompleted event of the ellipse control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.InitHistory(Syncfusion.UI.Xaml.RichTextBoxAdv.ImageContainerAdv)">
            <summary>
            Inits the history.
            </summary>
            <param name="imageContainer">The image container.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.UpdateHistory">
            <summary>
            Updates the history.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.InitResizeMarks">
            <summary>
            Initializes the resize marks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.InitRectangle(Windows.UI.Xaml.HorizontalAlignment,Windows.UI.Xaml.VerticalAlignment)">
            <summary>
            Initializes the rectangle.
            </summary>
            <param name="horizontalAlignment">The horizontal alignment.</param>
            <param name="verticalAlignment">The vertical alignment.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.rectangle_PointerMoved(System.Object,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Handles the PointerMoved event of the rectangle control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.rectangle_PointerReleased(System.Object,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Handles the PointerReleased event of the rectangle control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.rectangle_PointerPressed(System.Object,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Handles the PointerPressed event of the rectangle control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.rectangle_ManipulationDelta(System.Object,Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
            <summary>
            Handles the ManipulationDelta event of the rectangle control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.rectangle_ManipulationCompleted(System.Object,Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
            <summary>
            Handles the ManipulationCompleted event of the rectangle control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.ImageResizer_PointerMoved(System.Object,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Handles the PointerMoved event of the ImageResizer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.ClearResizeMarks">
            <summary>
            Clears the resize marks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.DisposeResizeMarks(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Disposes the resize marks.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ImageResizer.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.ImageResizer">
            <summary>
            This will be initialized on demand only, i.e. at the time of selecting an image for the first time.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.Visiblebounds">
            <summary>
            Gets or sets the visiblebounds.
            </summary>
            <value>
            The visiblebounds.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.Caret">
            <summary>
            Gets or sets the caret.
            </summary>
            <value>
            The caret.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.TouchStart">
            <summary>
            Gets or sets the touch start mark ellipse.
            </summary>
            <value>The touch start.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.TouchEnd">
            <summary>
            Gets or sets the touch end mark ellipse.
            </summary>
            <value>The touch end.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.Pages">
            <summary>
            Gets or sets the pages.
            </summary>
            <value>
            The pages.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.CurrentRenderingPage">
            <summary>
            Gets the page in which rendering is currently in progress.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.CurrentPage">
            <summary>
            Gets the CurrentPage where Cursor available.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.SelectionStartPage">
            <summary>
            Gets or sets the selection start page.
            </summary>
            <value>
            The selection start page.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.SelectionEndPage">
            <summary>
            Gets or sets the selection end page.
            </summary>
            <value>
            The selection end page.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HorizontalScrollBar">
            <summary>
            Gets the horizontal scroll bar.
            </summary>
            <value>
            The horizontal scroll bar.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.VerticalScrollBar">
            <summary>
            Gets the vertical scroll bar.
            </summary>
            <value>
            The vertical scroll bar.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.LineElements">
            <summary>
            Gets the line elements.
            </summary>
            <value>
            The line elements.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.ClientArea">
            <summary>
            Gets the client area.
            </summary>
            <value>
            The client area.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.ClientActiveArea">
            <summary>
            Gets the client active area.
            </summary>
            <value>
            The client active area.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer"/> class.
            </summary>
            <param name="richTextBox">The rich text box.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.Initialize(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes the current instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer"/> class.
            </summary>
            <param name="richTextBox">The rich text box.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.UpdateHFClientArea(Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv,System.Boolean)">
            <summary>
            Updates the HF client area.
            </summary>
            <param name="section">The section.</param>
            <param name="isHeader">if set to <c>true</c> [is header].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.UpdateClientArea(Syncfusion.UI.Xaml.RichTextBoxAdv.SectionFormat)">
            <summary>
            Updates the client area.
            </summary>
            <param name="sectionFormat">The section format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.UpdateClientArea">
            <summary>
            Updates the client area, specific for flow layout.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.UpdateClientArea(Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget)">
            <summary>
            Updates the client area.
            </summary>
            <param name="tableWidget">The table widget.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.UpdateClientArea(Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv,System.Boolean)">
            <summary>
            Updates the client area.
            </summary>
            <param name="block">The block.</param>
            <param name="beforeLayout">if set to <c>true</c> [before layout].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.UpdateClientArea(Syncfusion.UI.Xaml.RichTextBoxAdv.TableRowAdv,System.Boolean)">
            <summary>
            Updates the client area.
            </summary>
            <param name="row">The row.</param>
            <param name="beforeLayout">if set to <c>true</c> [before layout].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.UpdateClientArea(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv,System.Boolean)">
            <summary>
            Updates the client area.
            </summary>
            <param name="cell">The cell.</param>
            <param name="beforeLayout">if set to <c>true</c> [before layout].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.UpdateClientAreaTopOrLeft(Syncfusion.UI.Xaml.RichTextBoxAdv.TableWidget,System.Boolean)">
            <summary>
            Updates the clinet area.
            </summary>
            <param name="tableWidget"></param>
            <param name="beforeLayout"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.UpdateClientWidth(System.Double)">
            <summary>
            Updates the width of the client.
            </summary>
            <param name="width">The width.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.CutFromLeft(System.Double)">
            <summary>
            Cuts from left.
            </summary>
            <param name="x">The x.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.CutFromTop(System.Double)">
            <summary>
            Cuts from top.
            </summary>
            <param name="y">The y.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.ShiftLayoutedItems">
            <summary>
            Shifts the layouted items.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.AddEmptyPage">
            <summary>
            Adds the empty page.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.IsLoadingPreloadPages">
            <summary>
            Determines whether loading preload pages.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.VerticalScrollBar_ValueChanged(System.Object,Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs)">
            <summary>
            Handles the vertical scroll bar value changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The e.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HorizontalScrollBar_ValueChanged(System.Object,Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs)">
            <summary>
            Handles the horizontal scroll bar value changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The e.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.FindFocusedPage(Windows.Devices.Input.MouseEventArgs)">
            <summary>
            Finds the focused page.
            </summary>
            <param name="e">The <see cref="T:Windows.Devices.Input.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.UpdatePageBackground">
            <summary>
            Updates the page background.
            </summary>
            <param name="background"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.FindFocusedPage(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Finds the focused page.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.FindFocusedPage(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
            <summary>
            Finds the focused page.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.FindFocusedPage(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
            <summary>
            Finds the focused page.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.UpdateCoreCursor(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Updates the core cursor.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.CreateNewPage(Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv)">
            <summary>
            Creates the new page.
            </summary>
            <param name="section">The section.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.Zoom">
            <summary>
            Zooms this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.UpdateScrollBars">
            <summary>
            Updates the scroll bars.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.RenderVisiblePages">
            <summary>
            Renders the visible pages.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.RenderProofingErrors">
            <summary>
            Renders proofing the visible pages.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.GetPageCanvas(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            Gets the page canvas.
            </summary>
            <param name="page"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.RemoveRenderedPage(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            Removes the rendered page.
            </summary>
            <param name="page"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.MeasureOverride(Windows.Foundation.Size)">
            <summary>
            Measures the child elements
            </summary>
            <param name="availableSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.UpdatePageLeft">
            <summary>
            Updates the page left.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Raises the <see cref="E:PointerWheelChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
            <summary>
            Raises the <see cref="E:ManipulationDelta" /> event.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Raises the <see cref="E:PointerMoved" /> event.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Raises the <see cref="E:PointerPressed" /> event.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs,System.Byte)">
            <summary>
            Raises the <see cref="E:PointerReleased" /> event.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
            <summary>
            Raises the <see cref="E:Tapped" /> event.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
            <summary>
            Raises the <see cref="E:DoubleTapped" /> event.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.UpdateResizerGridlinePosition(Windows.Foundation.Point)">
            <summary>
            Updates the resizer grid line.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleResizing(Windows.Foundation.Point)">
            <summary>
            handles the resizing.
            </summary>
            <param name="touchPoint"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.ResizeTableRow(System.Double)">
            <summary>
            Resize table row.
            </summary>
            <param name="dragValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.ResizeTableCell(System.Double)">
            <summary>
            Resize the Table cell.
            </summary>
            <param name="dragValue"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.ChangeWidthOfCells(Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv,System.Collections.Generic.List{Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv},System.Collections.Generic.List{Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv},System.Double,System.Boolean)">
            <summary>
            Change the width of the cells.
            </summary>
            <param name="table"></param>
            <param name="LeftColumnCollection"></param>
            <param name="RightColumnCollection"></param>
            <param name="dragValue"></param>
            <param name="isSelection"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.GetCellReSizerPosition(Windows.Foundation.Point)">
            <summary>
            Gets the resizer position.
            </summary>
            <param name="touchPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.GetCellReSizerPosition(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget,Windows.Foundation.Point)">
            <summary>
            Gets the reiser position for nested table.
            </summary>
            <param name="cellWidget"></param>
            <param name="touchPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.IsInCellResizerArea(Windows.Foundation.Point)">
            <summary>
            Gets whether the mouse point in the resizer area.
            </summary>
            <param name="touchPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.IsInRowResizerArea(Windows.Foundation.Point)">
            <summary>
            Gets whether the mouse point in the resizer area.
            </summary>
            <param name="touchPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.GetRowReSizerPosition(Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellWidget,Windows.Foundation.Point)">
            <summary>
            Gets whether the mouse point in the resizer area.
            </summary>
            <param name="widget"></param>
            <param name="touchPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleTabKey(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv,System.Boolean)">
            <summary>
            Handles the tab key.
            </summary>
            <param name="selection">The selection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleShiftEnterKey(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Handles the shift Enter key.
            </summary>
            <param name="selection">The selection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleShiftTabKey(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv)">
            <summary>
            Handles the shift tab key.
            </summary>
            <param name="selection">The selection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleShiftLeftKey">
            <summary>
            Handles the shift left key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleShiftUpKey">
            <summary>
            Handles the shift up key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleShiftRightKey">
            <summary>
            Handles the shift right key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleShiftDownKey">
            <summary>
            Handles the shift down key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleControlHomeKey">
            <summary>
            Handles the control home key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleControlShiftHomeKey">
            <summary>
            Handles the control shift home key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleControlShiftEndKey">
            <summary>
            Handles the control shift end key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleControlEndKey">
            <summary>
            Handles the control end key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleControlLeftKey">
            <summary>
            Handles the control left key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleControlRightKey">
            <summary>
            Handles the control right key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleControlUpKey">
            <summary>
            Handles the control up key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleControlDownKey">
            <summary>
            Handles the control down key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleControlShiftUpKey">
            <summary>
            Handles the control shift up key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleControlShiftDownKey">
            <summary>
            Handles the control shift down key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleControlShiftLeftKey">
            <summary>
            Handles the control shift left key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleControlShiftRightKey">
            <summary>
            Handles the control shift right key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleLeftKey">
            <summary>
            Handles the left key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleRightKey">
            <summary>
            Handles the right key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleUpKey">
            <summary>
            Handles up key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleDownKey">
            <summary>
            Handles down key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleTextInput(System.String)">
            <summary>
            Handles the text input.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleEnterKey">
            <summary>
            Handles the enter key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleDeleteKey">
            <summary>
            Handles the delete key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleBackKey">
            <summary>
            Handles the back key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleHomeKey">
            <summary>
            Handles the home key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleEndKey">
            <summary>
            Handles the end key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleShiftHomeKey">
            <summary>
            Handles the shift home key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HandleShiftEndKey">
            <summary>
            Handles the shift end key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.GetLineWidget(Windows.Foundation.Point@)">
            <summary>
            Gets the line widget.
            </summary>
            <param name="cursorPoint">The cursor point.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.GetLineWidget(Windows.Foundation.Point@,System.Boolean)">
            <summary>
            Gets the line widget.
            </summary>
            <param name="cursorPoint">The cursor point.</param>
            <param name="isMouseDragged">if set to <c>true</c> [is mouse dragged].</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.GetTableCellWidget(Windows.Foundation.Point@)">
            <summary>
            Gets the table cell widget.
            </summary>
            <param name="cursorPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.GetTableCellWidget(Windows.Foundation.Point@,System.Boolean)">
            <summary>
            Gets the table cell widget.
            </summary>
            <param name="cursorPoint"></param>
            <param name="isMouseDragged"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.GetTableWidget(Windows.Foundation.Point@)">
            <summary>
            Gets the table widget.
            </summary>
            <param name="cursorPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.GetTableWidget(Windows.Foundation.Point@,System.Boolean)">
            <summary>
            Gets table widget.
            </summary>
            <param name="cursorPoint"></param>
            <param name="isMouseDragged"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.UpdateTextPosition(Windows.Foundation.Point,System.Byte,System.Boolean)">
            <summary>
            Updates the text position.
            </summary>
            <param name="cursorPoint"></param>
            <param name="tapCount"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.UpdateTextPosition(Windows.Foundation.Point,System.Boolean)">
            <summary>
            Updates the text position.
            </summary>
            <param name="cursorPoint">The cursor point.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.NavigateHyperlink(Windows.Foundation.Point)">
            <summary>
            Navigates the hyperlink.
            </summary>
            <param name="cursorPoint">The cursor point.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.ScrollToPosition(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Moves the cursor to the specified position
            </summary>
            <param name="startPosition">The start position.</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.UpdateCaretToPage(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            Updates the caret to page.
            </summary>
            <param name="startPosition">The start position.</param>
            <param name="endPage">The end page.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.UpdateCaretToPage">
            <summary>
            Updates the caret to page.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.GetCaretBottom(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,System.Boolean)">
            <summary>
            Gets the caret bottom.
            </summary>
            <param name="textPosition">The text position.</param>
            <param name="isEmptySelection">if set to <c>true</c> [is empty selection].</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.UpdateCaretSize(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Updates the size of the caret.
            </summary>
            <param name="textPosition">The text position.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.UpdateCaretPosition">
            <summary>
            Updates the caret position.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.UpdateTouchMarkPosition">
            <summary>
            Updates the touch mark position.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.ShowCaret(System.Boolean)">
            <summary>
            Shows the caret.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HideCaret(System.Boolean)">
            <summary>
            Hides the caret
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.ShowImageResizer">
            <summary>
            Shows the image resizer.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.PositionImageResizer(Syncfusion.UI.Xaml.RichTextBoxAdv.ImageElementBox,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition,Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Positions the image resizer.
            </summary>
            <param name="elementBox">The element box.</param>
            <param name="startPosition">The start position.</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.HideImageResizer">
            <summary>
            Hides the image resizer.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.GetPageAsImageAsync(System.Int32)">
            <summary>
            Gets the page as image in asynchronous mode.
            </summary>
            <param name="pageNumber">The page number.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.UpdateCaret(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Boolean)">
            <summary>
            Updates the caret.
            </summary>
            <param name="page">The page.</param>
            <param name="removeCaret">if set to <c>true</c> remove Caret.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.InsertPage(System.Int32,Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            Inserts the page.
            </summary>
            <param name="index">The index.</param>
            <param name="page">The page.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.RemovePage(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            Removes the page.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.InitCaret">
            <summary>
            Initializes the caret.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.InitTouchStart">
            <summary>
            Initializes the touch start.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.InitTouchEnd">
            <summary>
            Initializes the touch end.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.SetCaretBrush">
            <summary>
            Sets the caret color.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.ResetZooming">
            <summary>
            Resets the zooming.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.ResetScrollBars">
            <summary>
            Resets the scroll bars.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.CheckForCursorVisibility(System.Boolean)">
            <summary>
            Checks for cursor visibility.
            </summary>
            <param name="isTouch">if set to <c>true</c> [is touch].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.ClearContainer">
            <summary>
            Clears the container.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.RemovePages">
            <summary>
            Removes all the pages from the container
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.RemoveRenderedElements">
            <summary>
            Removes the rendered elements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.ClearSelectionHighlight">
            <summary>
            Clears the selection highlight.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.RemoveCommentRangeWidget">
            <summary>
            Removes comment range widget.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.ClearSearchHighlight">
            <summary>
            Clears the search highlight.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.DisposeCommentNotificationIcons">
            <summary>
            Disposes the comment notification icons.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.UpdateCommentClientArea">
            <summary>
            Updates the comment client area.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.ResetClientArea(Windows.Foundation.Rect,Windows.Foundation.Rect)">
            <summary>
            Resets the client area.
            </summary>
            <param name="clientArea">The client area.</param>
            <param name="clientActiveArea">The client active area.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.ShowHideComments">
            <summary>
            Shows the hide comments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.MoveCommentsToPage(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            Moves the comments to page.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.AddCommentNotification(Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget)">
            <summary>
            Adds the comment notification.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.AddSearchHighlightBorder(Syncfusion.UI.Xaml.RichTextBoxAdv.LineWidget)">
            <summary>
            Adds the search highlight border.
            </summary>
            <param name="lineWidget">The line widget.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer.ShowResizerGridLine(Windows.Foundation.Point)">
            <summary>
            Show Resier grid line.
            </summary>
            <param name="point"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv">
            <summary>
            The PageAdv class.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv.Viewer">
            <summary>
            Gets or Sets the viewer
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv.Section">
            <summary>
            Gets or sets the section.
            </summary>
            <value>
            The section.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv.BoundingRectangle">
            <summary>
            Gets or sets the bounding rectangle.
            </summary>
            <value>
            The bounding rectangle.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv" /> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv.CommentWidgets_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event of the CommentWidgets control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv.BodyWidgets_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the CollectionChanged event of the BodyWidgets control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv.popupTimer_Tick(System.Object,System.Object)">
            <summary>
            Popups the timer_ tick.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The e.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv.ShowPageNumber(System.String)">
            <summary>
            Shows the page number.
            </summary>
            <param name="pageNumber">The page number.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv.HidePageNumber">
            <summary>
            Hides the page number.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv.RenderWidgets(Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer)">
            <summary>
            Renders the widgets.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv.RenderWidgets(Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer)">
            <summary>
            Renders the widgets.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv.RenderProofingErrors(Syncfusion.UI.Xaml.RichTextBoxAdv.FlowLayoutViewer)">
            <summary>
            Renders the proofing widgets.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv.RenderProofingErrors(Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer)">
            <summary>
            Renders the proofing widgets.
            </summary>
            <param name="viewer">The viewer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv.RemoveWidgets(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Removes the widgets.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv.SetBackground(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv,Windows.UI.Xaml.Controls.Canvas)">
            <summary>
            Sets the background.
            </summary>
            <param name="richTextBoxAdv">The rich text box adv.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv.AdjustCommentWidgets">
            <summary>
            Adjusts the comment widgets.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv.ShiftCommentWidgets(System.Double,Syncfusion.UI.Xaml.RichTextBoxAdv.CommentWidget)">
            <summary>
            Shifts the comment widgets.
            </summary>
            <param name="shiftY">The shift y.</param>
            <param name="commentWidget">The comment widget.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv.IsHideComments">
            <summary>
            Determines whether [is hide comments].
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv.GetPageWidth">
            <summary>
            Gets the width of the page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv.ShowHideComments(Windows.UI.Xaml.Controls.Canvas)">
            <summary>
            Shows or hides comments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv.RemoveReviewPanel">
            <summary>
            Removes the review panel.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv.GetCommentWidget(Windows.Foundation.Point)">
            <summary>
            Gets the comment widget.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ReviewPanelAdv">
            <summary>
            The ReviewPanelAdv class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ReviewPanelAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ReviewPanelAdv"/> class.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.ReviewPanelAdv.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv">
            <summary>
            The TextBoxContainerAdv class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.CommentWidget)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv"/> class.
            </summary>
            <param name="commentWidget">The comment widget.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv.InitBorder">
            <summary>
            Initializes the border.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv.ShowBorder">
            <summary>
            Shows the border.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv.HideBorder">
            <summary>
            Hides the border.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv.UpdateVisibleArea">
            <summary>
            Updates the visible area.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxContainerAdv.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer" /> class.
            </summary>
            <param name="richTextBox">The rich text box.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.HorizontalScrollBar_ValueChanged(System.Object,Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs)">
            <summary>
            Handles the horizontal scroll bar value changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The e.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.VerticalScrollBar_ValueChanged(System.Object,Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs)">
            <summary>
            Handles the vertical scroll bar value changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The e.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.DoVerticalScroll(Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs)">
            <summary>
            Does the vertical scroll.
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.CreateNewPage(Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv)">
            <summary>
            Creates the new page.
            </summary>
            <param name="section">The section.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.AddEmptyPage">
            <summary>
            Adds the empty page.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.UpdatePageBackground">
            <summary>
            Updates the page background.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.Zoom">
            <summary>
            Zooms this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.HandleZoom">
            <summary>
            Handle the scroll bar based upon the zoom.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.IsLoadingPreloadPages">
            <summary>
            Determines whether loading preload pages.
            </summary>
            <returns>
              <c>true</c> if loading preload pages; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.FindFocusedPage(Windows.Devices.Input.MouseEventArgs)">
            <summary>
            Finds the focused page.
            </summary>
            <param name="e">The <see cref="T:Windows.Devices.Input.MouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.FindFocusedPage(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Finds the focused page.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.FindFocusedPage(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
            <summary>
            Finds the focused page.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.FindFocusedPage(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
            <summary>
            Finds the focused page.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.UpdateCoreCursor(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Updates the core cursor.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.RenderVisiblePages">
            <summary>
            Renders the visible pages.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.RenderProofingErrors">
            <summary>
            Renders the proofing visible pages.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.GetPageCanvas(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            Gets the page canvas.
            </summary>
            <param name="page"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.RemoveRenderedPage(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            Removes the renderd page.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.InitPage(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            Initializes the page
            </summary>
            <param name="page"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.LoadPreloadPages">
            <summary>
            Loads the preload pages.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.LoadAsyncPages">
            <summary>
            Loads the async pages.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.LayoutHeaderFooter(Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv)">
            <summary>
            Layouts the header footer.
            </summary>
            <param name="section">The section.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.GetCurrentPageHeaderFooter(Syncfusion.UI.Xaml.RichTextBoxAdv.SectionAdv,System.Boolean)">
            <summary>
            Gets the current page header footer.
            </summary>
            <param name="section">The section.</param>
            <param name="isHeader">if set to <c>true</c> [is header].</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.UpdatePageToViewer(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            Updates the page to viewer.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.ClearVisiblePages">
            <summary>
            Clears the visible pages.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.UpdatePageForRendering(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            Updates the page for rendering.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.UpdatePageAfterRendering(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv)">
            <summary>
            Updates the page after rendering.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.UpdateVisiblePagesAfterZoom">
            <summary>
            Updates the visible pages after zoom.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.UpdateScrollBars">
            <summary>
            Updates the scroll bars.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.GetVisiblePageStartIndex">
            <summary>
            Gets the start index of the visible page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.GetVisiblePageLastIndex">
            <summary>
            Gets the last index of the visible page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.UpdateVisiblePages(System.Boolean)">
            <summary>
            Updates the visible pages.
            </summary>
            <param name="top">if set to <c>true</c> [top].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.AddVisiblePage(Syncfusion.UI.Xaml.RichTextBoxAdv.PageAdv,System.Double,System.Double,System.Boolean)">
            <summary>
            Adds the visible page.
            </summary>
            <param name="page">The page.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="addAsInitial">if set to <c>true</c> [add as initial].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.GetPage(Windows.Foundation.Point)">
            <summary>
            Gets the page.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.ArrangePages(System.Boolean)">
            <summary>
            Arrange the page based upon the multiple page view.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.PageLayoutViewer.PositionPages(System.Int32,System.Int32,System.Double@,System.Boolean)">
            <summary>
            Position the page based upon the multiple page view.
            </summary>
            /// <param name="startIndex">The startIndex.</param>
            /// <param name="endIndex">The endIndex.</param>
            /// <param name="top">The height.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ConvertToDocumentAdv(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv,Syncfusion.DocIO.DLS.WordDocument)">
            <summary>
            Converts to document adv.
            </summary>
            <param name="rte">The rte.</param>
            <param name="wordDocument">The word document.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ConvertToDocumentAdv(Syncfusion.DocIO.DLS.WordDocument)">
            <summary>
            Converts to document adv.
            </summary>
            <param name="document"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ParseDocument(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv,Syncfusion.DocIO.DLS.WordDocument)">
            <summary>
            Parses the document.
            </summary>
            <param name="rte">The rte.</param>
            <param name="doc">The doc.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ParseBackground(Syncfusion.DocIO.DLS.WordDocument,Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv)">
            <summary>
            Parses the background.
            </summary>
            <param name="wDocument">The word document.</param>
            <param name="documentAdv">The document adv.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ParseList(Syncfusion.DocIO.DLS.WordDocument,Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv)">
            <summary>
            Parses the list.
            </summary>
            <param name="wDocument">The w document.</param>
            <param name="documentAdv">The document adv.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ParseListOverides(Syncfusion.DocIO.DLS.WordDocument,Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv)">
            <summary>
            Parses the list overides.
            </summary>
            <param name="wDocument">The w document.</param>
            <param name="documentAdv">The document adv.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ParseListOverride(Syncfusion.DocIO.DLS.ListOverrideStyle,Syncfusion.UI.Xaml.RichTextBoxAdv.ListAdv)">
            <summary>
            Parses the list override.
            </summary>
            <param name="listOverrideStyle">The list override style.</param>
            <param name="listAdv">The list adv.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ParseListLevel(Syncfusion.DocIO.DLS.WListLevel,Syncfusion.UI.Xaml.RichTextBoxAdv.ListLevelAdv)">
            <summary>
            Parses the list level.
            </summary>
            <param name="listLevel">The list level.</param>
            <param name="listLevelAdv">The list level adv.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ConvertNumberFormat(Syncfusion.DocIO.DLS.WListLevel)">
            <summary>
            Converts the number format.
            </summary>
            <param name="listlevel">The listlevel.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ParseParagraph(Syncfusion.DocIO.DLS.WParagraph,Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection)">
            <summary>
            Get the paragraphAdv if it founds the entity type as Paragraphs
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ParseParagraph(Syncfusion.DocIO.DLS.WParagraph)">
            <summary>
            Parses the paragraph.
            </summary>
            <param name="wParagraph">The wparagraph.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ParsePargraphItems(Syncfusion.DocIO.DLS.ParagraphItem,Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv)">
            <summary>
            Gets the PargraphAdv.
            </summary>
            <param name="paragraphitem">The paragraphitem.</param>
            <param name="paragraph">The paragraph.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.AddSpanAdv(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,System.String,Syncfusion.DocIO.DLS.WCharacterFormat)">
            <summary>
            Adds the span adv.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <param name="text">The text.</param>
            <param name="wCharacterFormat">The wcharacter format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.AddSymbol(Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,Syncfusion.DocIO.DLS.WSymbol)">
            <summary>
            Adds the symbol.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <param name="symbol">The symbol.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ParseTable(Syncfusion.DocIO.DLS.WTable,Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection)">
            <summary>
            Parses the table.
            </summary>
            <param name="wTable">The wtable.</param>
            <param name="blockAdvCollection">The blockadv collection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ParseTable(Syncfusion.DocIO.DLS.WTable)">
            <summary>
            Parses the table.
            </summary>
            <param name="wTable">The wtable.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ParseHeightType(Syncfusion.DocIO.DLS.TableRowHeightType)">
            <summary>
            Parses the height type.
            </summary>
            <param name="tableRowHeightType"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ParseTableFormat(Syncfusion.DocIO.DLS.WTable,Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat)">
            <summary>
            Parses the table format.
            </summary>
            <param name="table"></param>
            <param name="tableFormat"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ParseCellFormat(Syncfusion.DocIO.DLS.WTableCell,Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat)">
            <summary>
            Parses the cell format.
            </summary>
            <param name="wCell"></param>
            <param name="cellFormat"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ParseCellMargin(Syncfusion.DocIO.DLS.Paddings,Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat)">
            <summary>
            Parses cell margin.
            </summary>
            <param name="padding"></param>
            <param name="cellformat"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ParseTableMargin(Syncfusion.DocIO.DLS.Paddings,Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat)">
            <summary>
            Parses table margin.
            </summary>
            <param name="padding"></param>
            <param name="tableformat"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ParseTableBorders(Syncfusion.DocIO.DLS.Borders,Syncfusion.UI.Xaml.RichTextBoxAdv.TableFormat)">
            <summary>
            Parses the table borders.
            </summary>
            <param name="wborders"></param>
            <param name="borders"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ParseRowBorders(Syncfusion.DocIO.DLS.Borders,Syncfusion.UI.Xaml.RichTextBoxAdv.RowFormat)">
            <summary>
            Parse the Row borders.
            </summary>
            <param name="wborders"></param>
            <param name="rowFormat"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ParseCellBorders(Syncfusion.DocIO.DLS.Borders,Syncfusion.UI.Xaml.RichTextBoxAdv.CellFormat)">
            <summary>
            Parses the cell borders.
            </summary>
            <param name="wborders"></param>
            <param name="cellFormat"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ConvertBorder(Syncfusion.DocIO.DLS.Border)">
            <summary>
            Parses the border.
            </summary>
            <param name="wBorder"></param>
            <param name="border"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ConvertBorderStyle(Syncfusion.DocIO.DLS.BorderStyle)">
            <summary>
            Convert Border Style.
            </summary>
            <param name="borderStyle">The border style.</param>
            <returns>the line style.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.GetRowSpan(Syncfusion.DocIO.DLS.WTableCell,Syncfusion.DocIO.DLS.WTable)">
            <summary>
            Gets the row span.
            </summary>
            <param name="wCell">The wcell.</param>
            <param name="wTable">The wtable.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ParseParagraphFormat(Syncfusion.DocIO.DLS.WParagraphFormat,Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat)">
            <summary>
            Get the Paragraph's Left, Right indent and Before,After spacing
            </summary>
            <param name="wordparagraph"></param>
            <param name="paragraphAdv"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ParseCharacterFormat(Syncfusion.DocIO.DLS.WCharacterFormat,Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat)">
            <summary>
            Get the formatted the SpanAdv input span
            </summary>
            <param name="wcharacterFormat"></param>
            <param name="inline"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ParseListCharacterFormat(Syncfusion.DocIO.DLS.WCharacterFormat,Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat)">
            <summary>
            Parses the list character format.
            </summary>
            <param name="wcharacterFormat"></param>
            <param name="characterFormat"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.GetStrikeThrough(Syncfusion.DocIO.DLS.WCharacterFormat)">
            <summary>
            Get the strike through for paragraph from the character format.
            </summary>
            <param name="charcterformat"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.GetParagraphAlignment(Syncfusion.DocIO.DLS.HorizontalAlignment)">
            <summary>
            Returns the Paragraph's TextAlignment in the RTE
            </summary>
            <param name="horizontalalign"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.GetBaseLine(Syncfusion.DocIO.DLS.SubSuperScript)">
            <summary>
            Gets the Sub or Super script format.
            </summary>
            <param name="baseline"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ConvertByteArrayToImage(System.Byte[])">
            <summary>
            Converts the byte[] to Image
            </summary>
            <param name="byteArray"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.DocxImporting.ParseLineSpace(Syncfusion.DocIO.DLS.WParagraphFormat,Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat)">
            <summary>
            Line space converter.
            </summary>
            <param name="lineSpace"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLImporting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Controls.RichTextBoxAdv.HTMLImporting">HTMLImporting</see> class. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLImporting.ConvertToDocumentAdv(System.IO.Stream)">
            <summary>
            Convert the Html Stream to DocumentAdv.
            </summary>
            <param name="fileStream"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLImporting.ConvertToDocumentAdv(System.String)">
            <summary>
            Converts the Html string to DocumentAdv.
            </summary>
            <param name="htmlString"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CssPropertiesAttribute.PropertyName">
            <summary>
            Defines the property name 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CssPropertiesAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Controls.RichTextBoxAdv.CssPropertiesAttribute">CssPropertiesAttribute</see> class. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CssPropertiesAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Controls.RichTextBoxAdv.CssPropertiesAttribute">CssPropertiesAttribute</see> class. 
            </summary>
            <param name="name"></param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLNotInheritable">
            <summary>
            It specifies that the attribute te be not inheritable in Html.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CssPropertyInherited">
            <summary>
            It specifies that the property to be inheritable.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CssPropertiesBox.Properties">
            <summary>
            Properties from the Style Tag
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.CssPropertiesBox.PropertyValues">
            <summary>
            Property value from the Style Tag
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CssPropertiesBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Controls.RichTextBoxAdv.CssPropertiesBox">CssPropertiesBox</see> class. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CssPropertiesBox.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Controls.RichTextBoxAdv.CssPropertiesBox">CssPropertiesBox</see> class. 
            </summary>
            <param name="stylestring"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CssPropertiesBox.AssignProperties(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode)">
            <summary>
            Assign the Style tag properties to the Box
            </summary>
            <param name="Box"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.CssPropertiesBox.UpdatePropertyValues">
            <summary>
            Updates the property values of Boxes
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlConstants.IsSupportedTag(System.String)">
            <summary>
            Determines whether the tag is supported or not.
            </summary>
            <param name="tagName"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlConstants.IsParagraphTag(System.String)">
            <summary>
            Determines whether the tag is paragraph tag or not.
            </summary>
            <param name="tagName"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlConstants.IsHeadingTag(System.String)">
            <summary>
            Check whether the tags are HeadingTags
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlConstants.IsParagraphItemTag(System.String)">
            <summary>
            Determines whether the tag is paragraph item tag or not.
            </summary>
            <param name="tagName"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlConstants.IsListItemTag(System.String)">
            <summary>
            Determines whether the tag is list item tag or not.
            </summary>
            <param name="tagName"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlConstants.IsHeadTag(System.String)">
            <summary>
            Determines whether the tag is head item tag or not.
            </summary>
            <param name="tagName"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlConstants.ConvertSize(System.String)">
            <summary>
            Converts the incoming font size in points
            </summary>
            <param name="paramValue">input sting value ex: 23em or 10in or 20pc </param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlConstants.GetNumberBefore(System.String,System.String)">
            <summary>
            Get the number before to the units
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlConstants.GetNumber(System.String)">
            <summary>
            Gets the number of string
            </summary>
            <param name="val"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlConstants.GetInteger(System.String)">
            <summary>
            Gets the number of string
            </summary>
            <param name="val"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CssConstants.Cm">
            <summary>
            Centimeters
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CssConstants.Mm">
            <summary>
            Milimeters
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CssConstants.Px">
            <summary>
            Pixels
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CssConstants.In">
            <summary>
            Inches
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CssConstants.Em">
            <summary>
            Em - The font size of the relevant font
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CssConstants.Pt">
            <summary>
            Points
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.CssConstants.Pc">
            <summary>
            Picas
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLOperators" -->
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode">
            <summary>
            Represent the Paragraph Box
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.#cctor">
            <summary>
            Collect the CssProperties from the ParagrpahBox
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.TextAlign">
            <summary>
            Describes the TextAlignment of the Paragraph
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.Nodes">
            <summary>
            ParagraphBoxes collection for every instance
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.Properties">
            <summary>
            All the properties of ParagraphBox
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.CssProperties">
            <summary>
            Only CssPropertiesAttribute
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.InheritableProperties">
            <summary>
            It collects the properties which are inheritable in the HTML architecture
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.ParentNode">
            <summary>
            Parent for the ParagraphBox
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.Hyperlink">
            <summary>
            It decides whether ParagraphBox is HyperlinkAdv
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.Foreground">
            <summary>
            It paints the forground color for the Text which inside the ParagraphBox
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.LineHeight">
            <summary>
            Describes the Line height
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.BackgroundColor">
            <summary>
            It paints the background color for the ParagraphBox
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.Font">
            <summary>
            Describes the font [ Fontweight,FontStyle,FontVariant] for the ParagraphBox
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.Color">
            <summary>
            String color determines the Foreground color for the Text
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.ImageSource">
            <summary>
            Represents the image source.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.HTMLTag">
            <summary>
            It stores the corresponding HTML tag information
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.FontFamily">
            <summary>
            It decides the Text's FontFamily
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.FontSize">
            <summary>
            It decides the FontSize of the Text
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.FontSyle">
            <summary>
            It decides the FontStyle of the Text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.FontVariant">
            <summary>
            It decides the FontVariant of the Text.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.BaseLine">
            <summary>
            It defines the SubScript and SuperScript for the Text
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.FontWeight">
            <summary>
            FontWeight for the Text
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.UnderLine">
            <summary>
            Whether the Text should be underlined.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.StrikeThrough">
            <summary>
            SingleStroke and DoubleStroke for the Text
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.ImageHeight">
            <summary>
            It decides the Height of the Image
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.ImageWidth">
            <summary>
            It decides the Width of the Image
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.RowHeight">
            <summary>
            Gets or sets the row height.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.VAlign">
            <summary>
            Gets or sets the valign.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.VerticalAlignment">
            <summary>
            Gets or sets the vertical-align.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.HeaderRow">
            <summary>
            Gets or sets the header row.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.Borders">
            <summary>
            Gets or sets the borders.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.BordersStyle">
            <summary>
            Gets or sets the borders-style
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.BordersWidth">
            <summary>
            Gets or sets border-width.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.BordersColor">
            <summary>
            Gets or sets teh border-color.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.BorderTop">
            <summary>
            Gets or sets the border-top.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.BorderTopWidth">
            <summary>
            Gets or sets the border-top-width.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.BorderTopStyle">
            <summary>
            Gets or sets the border-top-style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.BorderTopColor">
            <summary>
            Gets or sets the border-top-color.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.BorderRight">
            <summary>
            Gets or sets the border-right.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.BorderRightWidth">
            <summary>
            Gets or sets the border-right-width.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.BorderRightStyle">
            <summary>
            Gets or sets the border-right-style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.BorderRightColor">
            <summary>
            Gets or sets the border-right-color.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.BorderBottom">
            <summary>
            gets or sets the border-bottom.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.BorderBottomWidth">
            <summary>
            Gets or sets the border-bottom-width.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.BorderBottomStyle">
            <summary>
            Gets or sets the border-bottom-style.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.BorderBottomColor">
            <summary>
            Gets or sets the border-bottom-color.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.BorderLeft">
            <summary>
            Gets or sets the border-left.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.BorderLeftWidth">
            <summary>
            Gets or sets the border-left-width.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.BorderLeftStyle">
            <summary>
            gets or sets the border-left-width,
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.BorderLeftColor">
            <summary>
            gets or sets the border-left-color.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.TableAlignment">
            <summary>
            Gets or sets the Table alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.CellSpacing">
            <summary>
            Gets or sets the cell spacing.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.StringToHighlightColor(System.String)">
            <summary>
            Get the Actual HighlightColor for the color string
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.StringToColor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Get the Actual color for the color string
            </summary>
            <param name="colorValue">String value ex" #89234 or rgb(23,32,100) or Gray</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.ParseNumber(System.String,System.Single)">
            <summary>
            Converts the Percentage value to the correct float value
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.InheritStyle(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode,System.Boolean,System.Collections.Generic.List{System.Reflection.PropertyInfo})">
            <summary>
            Set the properties value from the ParentBox
            </summary>
            <param name="father"></param>
            <param name="everything"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.StringToVerticalAlignment(System.String)">
            <summary>
            Get actual vertical alignment for the vertical align string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.StringToLineStyle(System.String)">
            <summary>
            String to line style.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.StringToLineWidth(System.String)">
            <summary>
            String to line width.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.StringToTableAlignment(System.String)">
            <summary>
            String to table alignment.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.InheritParentStyle">
            <summary>
            Inherit value from the ParentBox
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.AreSpanTags(System.String)">
            <summary>
            Check whether the tags are Block tags
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.StringToFontStyle(System.String)">
            <summary>
            Converts the string font-style in FontStyle
            </summary>
            <param name="fontstyle"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.ToString">
            <summary>
            Override metohd for string
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.RootTableNode">
            <summary>
            Return the root node of the table
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.CopyAttributes(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode)">
            <summary>
            copy the given node attributes
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.HasKey(System.Int32)">
            <summary>
            
            </summary>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.SetPropertyValue(System.Int32,System.Object)">
            <summary>
            Set the values for the properties
            </summary>
            <param name="Key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.AssignPaddingValues(System.String)">
            <summary>
            Assign the padding values.
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.AssignBorderValues(System.String)">
            <summary>
            Assigns the border values.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.IsBorderColor(System.String)">
            <summary>
            Checks whether the value is border color.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.IsBorderStyle(System.String)">
            <summary>
            Checks whether the value is border style.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.AssignBordersStyle(System.String)">
            <summary>
            Assigns the border styles.
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.AssignBordersWidth(System.String)">
            <summary>
            Assigns the borders width.
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.AssignBordersColor(System.String)">
            <summary>
            Assigns the borders color.
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.AssignBorderTopValues(System.String)">
            <summary>
            Assigns the border top values.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.AssignBorderRightValues(System.String)">
            <summary>
            Assigns the border right values.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.AssignBorderBottomValues(System.String)">
            <summary>
            Assigns the border bottom values.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode.AssignBorderLeftValues(System.String)">
            <summary>
            Assigns the border left values.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLTagInfo.TagName">
            <summary>
            Name of the HTML tag.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLTagInfo.Attributes">
            <summary>
            Attributes for the particular tag
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLTagInfo.IsCloseTag">
            <summary>
            Whether it is a closing tag
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLTagInfo.IsSingle">
            <summary>
            Whether it is a single tag
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLTagInfo.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Assign the Attributes list
            </summary>
            <param name="_name"></param>
            <param name="attlist"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLTagInfo.#ctor(System.String)">
            <summary>
            Process HtmlTag
            </summary>
            <param name="tag"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLTagInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Controls.RichTextBoxAdv.HTMLTagInfo">HTMLTagInfo</see> class. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLTagInfo.SetAttributes(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode)">
            <summary>
            Set attributes for the ParagaraphBox
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLTagInfo.ProcessTagName(System.String)">
            <summary>
            Assign the TagName information
            </summary>
            <param name="htmltag"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLTagInfo.GatherAttributes(System.String)">
            <summary>
            Collect attributes from the htmlstring
            </summary>
            <param name="htmltag"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLTagInfo.HasAttribute(System.String)">
            <summary>
            Check whether Tag has Attributes
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlTagsParser.Match(System.String,System.String)">
            <summary>
            Returns the matched collection
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlTagsParser.Search(System.String,System.String)">
            <summary>
            Searches the specified regex on the source
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlTagsParser.Search(System.String,System.String,System.Int32@)">
            <summary>
            Searches the specified regex on the source
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlTextNode">
            <summary>
            It has the Text of the HTML Tag
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlTextNode.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode,Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLTagInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Controls.RichTextBoxAdv.HtmlTextNode">HtmlTextNode</see> class. 
            </summary>
            <param name="parent"></param>
            <param name="tagname"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlTextNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Controls.RichTextBoxAdv.HtmlTextNode">HtmlTextNode</see> class. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode">
            <summary>
            The Root node.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.StyleBoxes">
            <summary>
            It stores the CssProperties boxes from the Style tag
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Controls.RichTextBoxAdv.RootNode">RootNode</see> class. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.LoadHtmlString(System.String)">
            <summary>
            Loads the Html string.
            </summary>
            <param name="htmlString"></param>
            <returns>True, if loaded. Otherwise False.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.ParseTags(System.String)">
            <summary>
            Parses the Html tags
            </summary>
            <param name="htmlString"></param>
            <returns>True, if valid Html string. Otherwise False.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.AddHtmlNode(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode,Syncfusion.UI.Xaml.RichTextBoxAdv.HTMLTagInfo)">
            <summary>
            Adds the Html node.
            </summary>
            <param name="currentNode"></param>
            <param name="htmlTag"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.AppendTextToNode(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode,System.String)">
            <summary>
            Appends text to Html node.
            </summary>
            <param name="currentNode"></param>
            <param name="text"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.AddHtmlTextNode(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode,System.String)">
            <summary>
            Adds the Html text node.
            </summary>
            <param name="node"></param>
            <param name="text"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.ParseList(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode)">
            <summary>
            Parses the list.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.GetOrCreateList(System.String)">
            <summary>
            Gets or Creates the list.
            </summary>
            <param name="listName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.CreateListLevel(System.String,System.Int32)">
            <summary>
            Creates the List level.
            </summary>
            <param name="listName"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.GetListAdv(System.String)">
            <summary>
            Gets the list adv.
            </summary>
            <param name="listName">Name of the list.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.FindBaseNode(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode,System.String)">
            <summary>
            Finds the base node.
            </summary>
            <param name="node"></param>
            <param name="htmlTag"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.FindParentHtmlNode(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode)">
            <summary>
            Finds the Parent html node.
            </summary>
            <param name="node"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.FindParentBodyNode(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode)">
            <summary>
            Finds the Parent body node.
            </summary>
            <param name="node"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.FindParentHeadNode(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode)">
            <summary>
            Finds the Parent Head node.
            </summary>
            <param name="node"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.FindParentParagraphNode(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode)">
            <summary>
            Finds the Parent paragraph node.
            </summary>
            <param name="node"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.FindParagraphNode(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode)">
            <summary>
            Finds the paragraph node
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.FindParentTableNode(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode)">
            <summary>
            Finds the Parent table node.
            </summary>
            <param name="node"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.FindParentTableRowNode(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode)">
            <summary>
            Finds the Parent table row node.
            </summary>
            <param name="node"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.IsBodyTag(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode)">
            <summary>
            Determine whether the node is body node.
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.FormattingBoxes(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode)">
            <summary>
            Apply the Inline style , External styles and Inherit the styles from the ParentBoxes
            </summary>
            <param name="root"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.IsEmpty(Windows.UI.Color)">
            <summary>
            check the given color in empty
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.BoxesCorrection(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode)">
            <summary>
            It corrects the boxes based upon the Tag information
            </summary>
            <param name="home"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.EncodeAsciiSymbol(System.String)">
            <summary>
            Insert the Ascii symbol based on the HtmlCodeTable
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.EncodeHtmlNames(System.String)">
            <summary>
            Encodes the Html names.
            </summary>
            <param name="nametext"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.GenerateCssPropertiesBoxes(System.String)">
            <summary>
            Generate CssPropertiesBox from the Style Tag's string.
            </summary>
            <param name="stylestring"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.FeedPropertiesBox(System.String)">
            <summary>
            Stores the Properties in the CssPropertiesBoxes
            </summary>
            <param name="boxstring"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.ContainsUnSupportedTags(System.String)">
            <summary>
            Determines whether the tag is unsupported
            </summary>
            <param name="name"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.HasFontSize(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode)">
            <summary>
            Determines whether the node has font size value.
            </summary>
            <param name="node"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.SetColGroupValues(Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode)">
            <summary>
            Sets the column group values.
            </summary>
            <param name="table"></param>
            <param name="tableNode"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.MeasureTablelayout(Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv,System.Double)">
            <summary>
            Measures the table layout.
            </summary>
            <param name="table"></param>
            <param name="width"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.SpreadWidthToRemainingRows(Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv,System.Double)">
            <summary>
            It spreads the Column width to remaining rows
            </summary>
            <param name="table"></param>
            <param name="width"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.EnlargeTableWidth(Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv,System.Double)">
            <summary>
            It enlarges the TableWidth
            </summary>
            <param name="table"></param>
            <param name="width"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.MeasureTableBreadths(Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv,System.Double)">
            <summary>
            It measures the Breadths of the Table
            </summary>
            <param name="table"></param>
            <param name="width"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.UpdateColumnBreadths(Syncfusion.UI.Xaml.RichTextBoxAdv.BreadthsInfo,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv,System.Int32)">
            <summary>
            It updates the Column's Breadths
            </summary>
            <param name="cellBreadths"></param>
            <param name="cell"></param>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.MeasureTableCellBreadths(Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.TableCellAdv,System.Double)">
            <summary>
            It measures the TableCell's breadths
            </summary>
            <param name="table"></param>
            <param name="cell"></param>
            <param name="available"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.MeasureCellBlockBreadths(Syncfusion.UI.Xaml.RichTextBoxAdv.TableAdv,Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv,System.Double)">
            <summary>
            It measures the Block's breadths inside the TableCell
            </summary>
            <param name="mainTable"></param>
            <param name="cellBlock"></param>
            <param name="available"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.MeasureParagraphBreadths(Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdv)">
            <summary>
            Measures the Breadths of the Paragraph
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.ParseDocument">
            <summary>
            Parses the document.
            </summary>
            <param name="rootNode"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.ParseDocument(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Parses the document in Async mode
            </summary>
            <param name="rootNode">SfRichTextBox</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.ParseBlocks(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode,Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection)">
            <summary>
            Parses the blocks.
            </summary>
            <param name="rootNode"></param>
            <param name="blockAdvCollection"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.ParseLists">
            <summary>
            Parses the List.
            </summary>
            <param name="listNode"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.ParseTable(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode,Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection)">
            <summary>
            Parses the table.
            </summary>
            <param name="node"></param>
            <param name="blockAdvCollection"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.ParseParagraph(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode,Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection)">
            <summary>
            Parses the paragraph.
            </summary>
            <param name="node"></param>
            <param name="blockAdvCollection"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.ParseCharacterFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode,Syncfusion.UI.Xaml.RichTextBoxAdv.CharacterFormat)">
            <summary>
            Parses the character format.
            </summary>
            <param name="htmlNode"></param>
            <param name="characterFormat"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.ParseParagraphFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode,Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphFormat)">
            <summary>
            Parses the paragraph format.
            </summary>
            <param name="node"></param>
            <param name="paragraphFormat"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.ParsePargraphItems(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode,Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,System.Boolean,System.Boolean)">
            <summary>
            Parses the paragraph items.
            </summary>
            <param name="paragraphItemNode"></param>
            <param name="paragraphAdv"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.ParseSpanNodes(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode,Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,System.Boolean,System.Boolean)">
            <summary>
            Parses the span nodes.
            </summary>
            <param name="node"></param>
            <param name="paragraphAdv"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.AddSpanAdv(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode,Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,System.Boolean,System.Boolean)">
            <summary>
            Adds the SpanAdv.
            </summary>
            <param name="node"></param>
            <param name="paragraphAdv"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.AddImageContainerAdv(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode,Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv)">
            <summary>
            Adds the ImageContainerAdv.
            </summary>
            <param name="imageNode"></param>
            <param name="paragraphAdv"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.AddHyperlink(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode,Syncfusion.UI.Xaml.RichTextBoxAdv.ParagraphAdv,System.Boolean)">
            <summary>
            Adds the Hyperlink.
            </summary>
            <param name="hyperlinkNode"></param>
            <param name="paragraphAdv"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RootNode.AddFieldCode(Syncfusion.UI.Xaml.RichTextBoxAdv.HtmlNode)">
            <summary>
            Adds the Field code.
            </summary>
            <param name="node"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextImporting.#ctor">
            <summary>
            Create instance for the TextImporting.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextImporting.ConvertToDocumentAdv(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv,Syncfusion.DocIO.DLS.WordDocument)">
            <summary>
            Converts to document.
            </summary>
            <param name="rte"></param>
            <param name="wordDocument"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextImporting.ConvertToDocumentAdv(Syncfusion.DocIO.DLS.WordDocument)">
            <summary>
            Converts to document.
            </summary>
            <param name="wordDocument"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextImporting.ParseDocument(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv,Syncfusion.DocIO.DLS.WordDocument)">
            <summary>
            Parses the document.
            </summary>
            <param name="rte">The rte.</param>
            <param name="doc">The doc.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextImporting.ParseTextBody(Syncfusion.DocIO.DLS.WTextBody,Syncfusion.UI.Xaml.RichTextBoxAdv.BlockAdvCollection)">
            <summary>
            Parses the text body.
            </summary>
            <param name="textBody"></param>
            <param name="blockAdvCollection"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLImporting.#ctor">
            <summary>
            Create instance for the XAML Importing.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLImporting.ConvertToDocumentAdv(System.IO.Stream)">
            <summary>
            Returns the DocumentAdv from the XamlStream
            </summary>
            <param name="xamlStream"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.XAMLImporting.ConvertToDocumentAdv(System.String)">
            <summary>
            Returns the DocumentAdv from the Xaml string.
            </summary>
            <param name="xamlString"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper">
            <summary>
             Represents a resource wrapper for Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv control.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.HyperlinkDialogAddress">
            <summary>
             Get the HyperLink Dialog for the Url Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.HyperlinkDialogDisplayText">
            <summary>
             Get the HyperLink Dialog for the DisplayText Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.PasswordDialogEnterPassword">
            <summary>
             Get the Password Dialog for the Password to open file Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.IncorrectPasswordInfo">
            <summary>
             Get the  Password Dialog for the  IncorrectPassword Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.NoList">
            <summary>
             Get the  NoneList for the  RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.IncorrectPassword">
            <summary>
             Get the  Password Dialog for the  Incorrect Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.ShowAdvancedPane">
            <summary>
             Get the OptionsPane for the  ShowAdvancedPane Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.ShowReplacePane">
            <summary>
             Get the OptionsPane for the  ShowReplacePane Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.ShowFindPane">
            <summary>
             Get the OptionsPane for the  ShowFindPane Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.ReplaceWith">
            <summary>
             Get the OptionsPane for the  ReplaceWith Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.AdvancedSearch">
            <summary>
             Get the OptionsPane for the  AdvancedSearch Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Occurrences">
            <summary>
             Get the OptionsPane for the  Occurrences Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.FindButtonToolTip">
            <summary>
             Get the ToolTip for the FindButtonToolTip Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.InsertImage">
            <summary>
             Get the InsertImage for the RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.InsertImageToolTip">
            <summary>
             Get the ToolTip for the InsertImage RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Hyperlink">
            <summary>
             Get the HyperLink for the RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.InsertHyperLinkToolTip">
            <summary>
             Get the ToolTip for the InsertHyperLink RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.InsertTableToolTip">
            <summary>
             Get the ToolTip for the InsertTable RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.InsertTable">
            <summary>
             Get the InsertTable for the RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Paste">
            <summary>
             Get the Paste for the RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.PasteToolTip">
            <summary>
            Get the ToolTip for the Paste RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Undo">
            <summary>
             Get the Undo for the RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.UndoToolTip">
            <summary>
            Get the ToolTip for the Undo RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Redo">
            <summary>
             Get the Redo for the RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.RedoToolTip">
            <summary>
            Get the ToolTip for the Redo RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.List">
            <summary>
             Get the List for the RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.ListToolTip">
            <summary>
            Get the ToolTip for the List RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.BulletsToolTip">
            <summary>
              Get the ToolTip for the BulletList RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.NumberingToolTip">
            <summary>
             Get the ToolTip for the BulletList RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.NoListToolTip">
            <summary>
              Get the ToolTip for the BulletList RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.InsertRight">
            <summary>
             Get the Insert Table to the InsertRight for the RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.InsertRightToolTip">
            <summary>
              Get the ToolTip for the InsertRight RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.InsertBelow">
            <summary>
             Get the Insert Table to the InsertBelow for the RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.InsertBelowToolTip">
            <summary>
             Get the ToolTip for the InsertBelow RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.InsertLeft">
            <summary>
             Get the Insert Table to the InsertLeft for the RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.InsertLeftToolTip">
            <summary>
             Get the ToolTip for the InsertLeft RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.InsertAbove">
            <summary>
             Get the Insert Table to the InsertAbove for the RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.InsertAboveToolTip">
            <summary>
             Get the ToolTip for the InsertAbove RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.DeleteTableToolTip">
            <summary>
             Get the ToolTip for the DeleteTable RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.DeleteTable">
            <summary>
             Get the DeleteTable for the RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.DeleteRowToolTip">
            <summary>
            Get the ToolTip for the DeleteRow RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.DeleteRow">
            <summary>
             Get the DeleteRow for the RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.DeleteColumnToolTip">
            <summary>
            Get the ToolTip for the DeleteColumn RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.DeleteColumn">
            <summary>
             Get the DeleteColumn for the RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Bold">
            <summary>
             Get the Bold for the TextRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.BoldToolTip">
            <summary>
            Get the ToolTip for the Bold TextRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Italic">
            <summary>
             Get the Italic for the TextRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.ItalicToolTip">
            <summary>
            Get the ToolTip for the Italic TextRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Underline">
            <summary>
             Get the UnderLine for the TextRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.UnderlineToolTip">
            <summary>
            Get the ToolTip for the UnderLine TextRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.StrikeThrough">
            <summary>
             Get the Strike for the TextRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.StrikeThroughToolTip">
            <summary>
             Get the ToolTip for the StrikeThrough TextRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.SingleStrike">
            <summary>
             Get the SingleStrike for the TextRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.SingleStrikeToolTip">
            <summary>
             Get the ToolTip for the SingleStrike TextRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.DoubleStrike">
            <summary>
             Get the DoubleStrike for the TextRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.DoubleStrikeToolTip">
            <summary>
             Get the ToolTip for the DoubleStrike TextRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.NoStrike">
            <summary>
             Get the NoStrike for the TextRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.NoStrikeToolTip">
            <summary>
             Get the ToolTip for the NoStrike TextRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.SubScript">
            <summary>
             Get the SubScript for the TextRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.SubScriptToolTip">
            <summary>
             Get the ToolTip for the SubScript TextRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.SuperScript">
            <summary>
             Get the SuperScript for the TextRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.SuperScriptToolTip">
            <summary>
             Get the ToolTip for the SuperScript TextRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Normal">
            <summary>
             Get the Normal for the TextRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.NormalToolTip">
            <summary>
             Get the ToolTip for the Normal TextRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Copy">
            <summary>
             Get the Copy for the TextRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.CopyToolTip">
            <summary>
             Get the ToolTip for the Copy RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Cut">
            <summary>
             Get the Cut for the TextRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.CutToolTip">
            <summary>
             Get the ToolTip for the Cut RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.MergeCells">
            <summary>
             Get the MergeCells for the RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.MergeCellsToolTip">
            <summary>
             Get the ToolTip for the MergeCells RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Alignment">
            <summary>
             Get the Alignment for the ParagraphRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.ParagraphAlignmentToolTip">
            <summary>
              Get the ToolTip for the ParagraphAlignment RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.AlignRight">
            <summary>
             Get the AlignRight for the ParagraphRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.RightAlignToolTip">
            <summary>
              Get the ToolTip for the RightAlign RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Center">
            <summary>
             Get the Center for the ParagraphRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.CenterToolTip">
            <summary>
              Get the ToolTip for the Center RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.AlignLeft">
            <summary>
             Get the AlignLeft for the ParagraphRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.LeftAlignToolTip">
            <summary>
              Get the ToolTip for the LeftAlign RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Justify">
            <summary>
             Get the Justify for the ParagraphRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.JustifyToolTip">
            <summary>
              Get the ToolTip for the Justify RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.FontSize">
            <summary>
             Get the FontSize for the FontRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.FontSizeToolTip">
            <summary>
              Get the ToolTip for the FontSize RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Font">
            <summary>
             Get the Font for the FontRadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.FontFamilyToolTip">
            <summary>
              Get the ToolTip for the FontFamily RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.FontColorToolTip">
            <summary>
              Get the ToolTip for the FontColor RadialMenu Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Orange">
            <summary>
             Get the ToolTip for the  Orange Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Gold">
            <summary>
            Get the ToolTip for the  Gold Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.LightYellow">
            <summary>
             Get the ToolTip for the  LightYellow Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Yellow">
            <summary>
            Get the ToolTip for the  Yellow Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Brown">
            <summary>
            Get the ToolTip for the  Brown Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.DarkRed">
            <summary>
             Get the ToolTip for the  DarkRed Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Purple">
            <summary>
             Get the ToolTip for the  Purple Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Plum">
            <summary>
             Get the ToolTip for the  Plum Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Red">
            <summary>
             Get the ToolTip for the  Red Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Rose">
            <summary>
             Get the ToolTip for the  Rose Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Pink">
            <summary>
             Get the ToolTip for the  Pink Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.DarkGreen">
            <summary>
             Get the ToolTip for the  DarkGreen Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Green">
            <summary>
             Get the ToolTip for the  Green Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Lime">
            <summary>
             Get the ToolTip for the  Lime Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.LightGreen">
            <summary>
             Get the ToolTip for the  LightGreen Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.DarkBlue">
            <summary>
             Get the ToolTip for the  DarkBlue Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Turquoise">
            <summary>
             Get the ToolTip for the  Turquoise Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Aqua">
            <summary>
             Get the ToolTip for the  Aqua Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.SkyBlue">
            <summary>
             Get the ToolTip for the  SkyBlue Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.DarkPurple">
            <summary>
             Get the ToolTip for the  DarkPurple Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Blue">
            <summary>
             Get the ToolTip for the  Blue Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Black">
            <summary>
             Get the ToolTip for the  Black Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Gray80">
            <summary>
             Get the ToolTip for the  Gray80% Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Gray50">
            <summary>
             Get the ToolTip for the  Gray50% Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.Gray25">
            <summary>
             Get the ToolTip for the  Gray25% Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.White">
            <summary>
             Get the ToolTip for the  white Color RadialColorItems Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.DialogBoxOk">
            <summary>
             Get the Table DialogBox OkButton's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.DialogBoxCancel">
            <summary>
             Get the DialogBox CancelButton's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.FindReplaceDialogFindText">
            <summary>
             Get the Find and Replace DialogBox FindText's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.FindReplaceDialogFind">
            <summary>
             Get the Find and Replace DialogBox FindTab's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.FindReplaceDialogMatchCase">
            <summary>
             Get the Find and Replace DialogBox MatchCaseSearch's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.FindReplaceDialogWholeWord">
            <summary>
             Get the Find and Replace DialogBox WholeWordSearch's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.FindReplaceDialogReplace">
            <summary>
             Get the Find and Replace DialogBox ReplaceButton's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.FindReplaceDialogReplaceAll">
            <summary>
             Get the Find and Replace DialogBox ReplaceAllButton's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.FindReplaceDialogFindNext">
            <summary>
             Get the Find and Replace DialogBox FindNextButton's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.FindReplaceDialogRegularExpression">
            <summary>
             Get the Find and Replace DialogBox RegularExpressionSearch's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.FindReplaceDialogTitle">
            <summary>
             Get the Find and Replace Dialogbox Title's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.HyperlinkDialogTitle">
            <summary>
             Get the Hyperlink Dialogbox Title's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.OptionPaneCloseButtonToolTip">
            <summary>
             Get the ToolTip for the OptionPaneCloseButtonToolTip Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.OptionsPaneSearchOneResult">
            <summary>
             Get the OptionsPaneSearchOneResult Message's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.OptionsPaneSearchResult">
            <summary>
             Get the OptionsPaneSearchResult Message's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.OptionsPaneSearchResultOf">
            <summary>
             Get the OptionsPaneSearchResultOf Message's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.OptionsPaneSearchNoResult">
            <summary>
             Get the OptionsPaneSearchNoResult Message's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.OptionsPaneSearchManyResultsInfo">
            <summary>
             Get the OptionsPaneSearchManyResultsInfo Message's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.OptionsPaneSearchErrorMessage">
            <summary>
             Get the OptionsPaneSearchErrorMessage's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.OptionsPaneSearchPaused">
            <summary>
             Get the OptionsPaneSearchPaused Message's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.OptionsPaneDescription">
            <summary>
             Get the OptionsPaneDescription's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.OptionsPaneSearch">
            <summary>
             Get the OptionsPaneSearch's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.OptionsPaneResultsHeader">
            <summary>
             Get the SearchPaneResults's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.OptionsPaneSearchInformation">
            <summary>
             Get the OptionsPaneSearchInformation Message's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.FindReplaceDialogMoreOption">
            <summary>
             Get the Find and Replace DialogBox MoreOption's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.FindReplaceDialogLessOption">
            <summary>
             Get the Find and Replace DialogBox LessOption's Culture Based Value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.LoadingPage">
            <summary>
             Get the Loadingpage for the Initializes PagePopup
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.SpellingPaneSpelling">
            <summary>
            Gets the culture based value for the title of spelling pane.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.SpellingPaneIgnoreAll">
            <summary>
            Gets the culture based value for ignore all button in spelling pane.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.SpellingPaneAddToDictionary">
            <summary>
            Gets the culture based value for add to dictionary button in spelling pane.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.SpellingPaneChange">
            <summary>
            Gets the culture based value for change button in spelling pane.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.SpellingPaneChangeAll">
            <summary>
            Gets the culture based value for change all button in spelling pane.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.SpellingPaneResume">
            <summary>
            Gets the culture based value for resume button in spelling pane.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvResourceWrapper.SpellingPaneSuccessMessage">
            <summary>
            Gets the culture based value for success message in spelling pane.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.NamespaceDoc">
            <summary>
            Contains types that are used to create a rich text editor user interface by using the Syncfusion <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> for UWP.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv">
             <summary>
             Represents the root element of a rich text editing control which operates on <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/> objects.
             </summary>
             <example>
             <para>The following code example demonstrates how to define the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv" ManipulationMode="All" xmlns:RichTextBoxAdv="using:Syncfusion.UI.Xaml.RichTextBoxAdv"&gt;
                     &lt;RichTextBoxAdv:DocumentAdv&gt;
                     &lt;RichTextBoxAdv:SectionAdv&gt;
                         &lt;RichTextBoxAdv:ParagraphAdv&gt;
                             &lt;RichTextBoxAdv:SpanAdv&gt;Hello World.&lt;/RichTextBoxAdv:SpanAdv&gt;
                         &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                     &lt;/RichTextBoxAdv:SectionAdv&gt;
                 &lt;/RichTextBoxAdv:DocumentAdv&gt;
             &lt;/RichTextBoxAdv:SfRichTextBoxAdv&gt;
             </code>
             <code lang="C#">
             // Defines the control.
             Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv richTextBoxAdv = new Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv();
             richTextBoxAdv.ManipulationMode = ManipulationMode.All;
             
             DocumentAdv documentAdv = new DocumentAdv();
             SectionAdv sectionAdv = new SectionAdv();
             ParagraphAdv paragraphAdv = new ParagraphAdv();
             SpanAdv spanAdv = new SpanAdv();
             spanAdv.Text = "Hello world.";
             
             paragraphAdv.Inlines.Add(spanAdv);
             sectionAdv.Blocks.Add(paragraphAdv);
             documentAdv.Sections.Add(sectionAdv);
             
             // Defines the document for SfRichTextBoxAdv control.
             richTextBoxAdv.Document = documentAdv;
             </code>
             <code lang="VB">
             ' Defines the control.
             Dim richTextBoxAdv As New Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv()
             richTextBoxAdv.ManipulationMode = ManipulationMode.All
            
             Dim documentAdv As New DocumentAdv()
             Dim sectionAdv As New SectionAdv()
             Dim paragraphAdv As New ParagraphAdv()
             Dim spanAdv As New SpanAdv()
             spanAdv.Text = "Hello world."
            
             paragraphAdv.Inlines.Add(spanAdv)
             sectionAdv.Blocks.Add(paragraphAdv)
             documentAdv.Sections.Add(sectionAdv)
             
             ' Defines the document for SfRichTextBoxAdv control.
             richTextBoxAdv.Document = documentAdv
             </code>
             </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.contentPresenter">
            <summary>
            Gets or Sets the content of SfRichTextBoxAdv
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.horizontalScrollBar">
            <summary>
            Gets or Sets the horizontal scroll bar
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.verticalScrollBar">
            <summary>
            Gets or Sets the vertical scroll bar
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectionBrushInternal">
            <summary>
            Gets the selection brush.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.RadialMenu">
            <summary>
            Gets the radial menu.
            </summary>
            <value>
            The radial menu.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FontPopup">
            <summary>
            Gets the font popup.
            </summary>
            <value>
            The font popup.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CopyIcon">
            <summary>
            Gets the copy path.
            </summary>
            <value>
            The copy path.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ModifierKey">
            <summary>
            Gets or sets the modifier key.
            </summary>
            <value>
            The modifier key.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.Cursor">
            <summary>
            Gets or sets the core cursor.
            </summary>
            <value>
            The cursor.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.WordDocument">
            <summary>
            Gets or sets the word document.
            </summary>
            <value>
            The word document.
            </value>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IsReadOnlyMode" -->
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.Viewer">
            <summary>
            Gets or sets the viewer.
            </summary>
            <value>
            The viewer.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.Selection">
            <summary>
            Gets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <returns>
            The instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>.
            </returns>
            <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionAdv"/>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.History">
            <summary>
            Gets the history.
            </summary>
            <value>
            The history.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.TextSearchResults">
            <summary>
            Gets the text search results.
            </summary>
            <value>
            The text search results.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IsControlLoaded">
            <summary>
            Gets or sets a value indicating whether this control is loaded.
            </summary>
            <value>
            <c>true</c> if this control is loaded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IsLayoutEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is layout enabled.
            </summary>
            <value>
            <c>true</c> if this instance is layout enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IsShiftingEnabled">
            <summary>
            Gets or sets a value indicating whether shifting layouted widgets is enabled.
            </summary>
            <value>
            <c>true</c> if shifting layouted widgets is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IsPastingContent">
            <summary>
            Gets or sets a value indicating whether is pasting content.
            </summary>
            <value>
              <c>true</c> if pasting content; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IsDocumentLoaded">
            <summary>
            Gets or sets a value indicating whether document loaded in this instance.
            </summary>
            <value>
            <c>true</c> if document loaded in this instance; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.PreloadPageCount">
            <summary>
            Gets or sets the preload page count.
            Indicates the number of pages to be loaded before updating initial page in the UI, while loading document in asynchronous mode.
            </summary>
            <value>
            The preload page count.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.AsyncPageLoadCount">
            <summary>
            Gets or sets the async page load count.
            Indicates the number of pages to be updated in the UI, while loading document in asynchronous mode.
            </summary>
            <value>
            The async page load count.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OptionsPaneWidth">
            <summary>
            Gets the options pane width.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SpellCheckPaneWidth">
            <summary>
            Gets the Spellcheck pane width
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IsSpellcheckPaneUpdated">
            <summary>
            Gets or Sets whether the Spellcheck pane is to be update or not
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CanCheckSpelling">
            <summary>
            Gets a value indicating whether spelling check can be done.
            </summary>
            <value><see langword="true"/> if ; otherwise, <see langword="false"/>.</value>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InitLoadingPagePopup">
            <summary>
            Initializes the loading page popup.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InitCopyIcon">
            <summary>
            Inits the copy icon.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InitRadialMenu">
            <summary>
            Initializes the radial menu.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.radialMenu_GotFocus(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Handles the GotFocus event of the RadialMenu control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.radialMenu_Opened(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Handles the Opened event of the radialMenu control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.radialMenu_Closed(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Handles the Closed event of the radialMenu control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LoadDefaultRadialMenu">
            <summary>
            Loads the default radial menu.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LoadListMenuItem">
            <summary>
            Loads the list menu item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LoadTableRadialMenuIcon">
            <summary>
            Loads the table radial menu icon.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LoadTextRadialMenu">
            <summary>
            Loads the text radial menu.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.fontMenuItem_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Handles the Click event of the fontMenuItem control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.GetFontColorRadialMenuItem">
            <summary>
            Gets the font color radial menu item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.GetRadialMenuItem(System.String,System.String,System.String)">
            <summary>
            Gets the radial menu item.
            </summary>
            <param name="content">The content.</param>
            <param name="toolTip">The tool tip.</param>
            <param name="pathResource">The path resource.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.GetRadialMenuHeader(System.String,System.String)">
            <summary>
            Gets the radial menu header.
            </summary>
            <param name="content">The content.</param>
            <param name="pathResource">The path resource.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InitCommands">
            <summary>
            Inits the commands.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InitFontPopup">
            <summary>
            Initializes the font popup.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InitHyperlinkUI">
            <summary>
            Inits the hyperlink UI.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.displayTextBox_TextChanged(System.Object,Windows.UI.Xaml.Controls.TextChangedEventArgs)">
            <summary>
            Handles the TextChanged event of the displayTextBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Controls.TextChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.urlTextBox_TextChanged(System.Object,Windows.UI.Xaml.Controls.TextChangedEventArgs)">
            <summary>
            Handles the TextChanged event of the urlTextBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Controls.TextChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowHyperlinkUI">
            <summary>
            Shows the hyperlink UI async.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LoadHyperlinkField">
            <summary>
            Loads the hyperlink field.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.popup_Opened(System.Object,System.Object)">
            <summary>
            Popup_s the opened.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The e.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.popup_Closed(System.Object,System.Object)">
            <summary>
            Popup_s the closed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The e.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.popup_KeyDown(System.Object,Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Handles the KeyDown event of the popup control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.cancelHyperlinkButton_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Handles the Click event of the cancelHyperlinkButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OpenPopup">
            <summary>
            Opens the popup.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ClosePopup">
            <summary>
            Closes the popup.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CloseHyperlinkPopup">
            <summary>
            Closes the hyperlink popup.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.addHyperlinkButton_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Handles the Click event of the addHyperlinkButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.AddHyperlink">
            <summary>
            Adds the hyperlink.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InitGetPasswordUI">
            <summary>
            Initializes the get password UI.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowIncorrectPassword">
            <summary>
            Shows the incorrect password.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.okErrorButton_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Handles the Click event of the okErrorButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowIncorrectPasswordAsync">
            <summary>
            Shows the incorrect password asynchronous.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowPasswordUI">
            <summary>
            Shows the password UI.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowPasswordUIAsync">
            <summary>
            Shows password UI to get password of the file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.cancelButton_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Handles the Click event of the cancelButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.okButton_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Handles the Click event of the okButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InitOptionsPane">
            <summary>
            Initializes the options pane.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.UpdateResultsCountTextBox">
            <summary>
            Updates the results count text box.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.GetOptionsPaneUIStyleByName(System.String)">
            <summary>
            Gets the style of the options pane UI by name.
            </summary>
            <param name="styleName">Name of the style.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ScrollListBox">
            <summary>
            Scrolls the list box vertical scroll bar according to the current selection.
            </summary>
            <param name="isSearchButton"></param>
            <param name="isNextButton"></param>
            <param name="isPreviousButton"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IsOptionsPaneFocussed">
            <summary>
            Determines whether [is options pane focussed].
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.AddSearchResultListItem">
            <summary>
            Adds the search result list item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ClearSearchResultItems">
            <summary>
            Clears the search result items.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InitSpellingPane">
            <summary>
            Initialize the Spelling pane UI.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.UpdateSpellCheckPane">
            <summary>
            Updates the Spellcheck pane
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.UpdateAddToDictionaryButton">
            <summary>
            Updates add to dicionary button.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.UpdateSuggestionListBox">
            <summary>
            Updates the suggestions for misspelled word.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.NavigateNextSpellingError">
            <summary>
            Navigates next spelling error.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowSpellingCheckSuccessMessage">
            <summary>
            Shows spelling check success message.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific AutomationPeer implementations for the UI Automation infrastructure.
            </summary>
            <returns>
            The class-specific AutomationPeer subclass to return.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnApplyTemplate">
            <summary>
            Applies the template
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.MeasureOverride(Windows.Foundation.Size)">
            <summary>
            Provides the behavior for the Measure pass of the layout cycle. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects or based on other considerations such as a fixed container size.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ValidateHeight(System.Double,System.Double)">
            <summary>
            Validates the height.
            </summary>
            <param name="availableHeight">The available height.</param>
            <param name="contentHeight">The content height.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ArrangeOverride(Windows.Foundation.Size)">
            <summary>
            Provides the behavior for the Arrange pass of layout. Classes can override this method to define their own Arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <returns>
            The actual size that is used after the element is arranged in layout.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Called before the GotFocus event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Called before the LostFocus event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.TextBox_TextChanged(System.Object,Windows.UI.Xaml.Controls.TextChangedEventArgs)">
            <summary>
            Handles the TextChanged event of the textBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Controls.TextChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IsChildFocused">
            <summary>
            Determines whether the child element of this instance is focused.
            </summary>
            <returns>
              <c>true</c> if the child element of this instance is focused; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnKeyUpInternal(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Raises the <see cref="E:KeyUpInternal" /> event.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnKeyDownInternal(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Raises the <see cref="E:KeyDownInternal" /> event.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.GetKeyModifier(Windows.System.VirtualKey)">
            <summary>
            Gets the key modifier.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Called before the KeyDown event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.coreWindow_KeyUp(Windows.UI.Core.CoreWindow,Windows.UI.Core.KeyEventArgs)">
            <summary>
            Called when core window keyup.
            </summary>
            <param name="sender"></param>
            <param name="args">An <see cref="T:Windows.UI.Core.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Called before the KeyUp event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.coreWindow_CharacterReceived(Windows.UI.Core.CoreWindow,Windows.UI.Core.CharacterReceivedEventArgs)">
            <summary>
            Raised when mouse left button is clicked
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Windows.UI.Core.CharacterReceivedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnTextInput(System.Char)">
            <summary>
            Called when text input.
            </summary>
            <param name="character">The character.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
            <summary>
            Called before the ManipulationDelta event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called before the PointerWheelChanged event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called before the PointerPressed event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called before the PointerReleased event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called before the PointerMoved event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called before the PointerExited event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
            <summary>
            Called before the Tapped event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
            <summary>
            Called before the DoubleTapped event occurs.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.UpdateInputMode(Windows.Devices.Input.PointerDeviceType,System.Boolean)">
            <summary>
            Updates the input mode.
            </summary>
            <param name="pointerDeviceType">Type of the pointer device.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.TapTimer_Tick(System.Object,System.Object)">
            <summary>
            Called on tap timer ticked.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SortUIElementsToList(Windows.UI.Xaml.Controls.Panel,System.Collections.Generic.List{Windows.UI.Xaml.UIElement})">
            <summary>
            Sorts the UI elements to list.
            </summary>
            <param name="panel">The panel.</param>
            <param name="uiElementList">The UI element list.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SortByTabIndex(System.Collections.Generic.List{Windows.UI.Xaml.Controls.Control})">
            <summary>
            Sorts the index of the by tab.
            </summary>
            <param name="controls">The controls.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.GetAdjacentControls(Windows.UI.Xaml.Controls.Panel)">
            <summary>
            Gets the adjacent controls.
            </summary>
            <param name="panel">The panel.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.UpdateControls(System.Collections.Generic.List{Windows.UI.Xaml.UIElement},System.Collections.Generic.List{Windows.UI.Xaml.Controls.Control})">
            <summary>
            Updates the controls.
            </summary>
            <param name="uiElementList">The UI element list.</param>
            <param name="controls">The controls.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.GetParent">
            <summary>
            Gets the parent.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.NavigateToAdjacentControl">
            <summary>
            Navigates to adjacent control.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LoadAsync(System.IO.Stream,Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType)">
             <summary>
             Asynchronously imports the specified <see cref="T:System.IO.Stream"/> in the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType"/> into the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.
             </summary>
             <param name="stream">The stream to import the content.</param>
             <param name="formatType">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType"/> to import.</param>
             <returns>A task that represents the asynchronous load operation.</returns>
             <exception cref="T:System.NotSupportedException">RichTextBoxAdv does not support this file format.</exception>
             <exception cref="T:System.ArgumentNullException">Stream cannot be null.</exception>
             <example>
             <para>The following code example demonstrates how to asynchronously load <see cref="T:System.IO.Stream"/>.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
             </code>
             <code lang="C#">
             public async Task&lt;bool&gt; LoadStreamAsync()
             {
                 TaskCompletionSource&lt;bool&gt; tcs = new TaskCompletionSource&lt;bool&gt;();
                 
                 // Raw content.
                 string content = "&lt;html&gt;&lt;body&gt;&lt;p&gt;Hello world&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;";
                 // Converts the string into byte array.
                 byte[] bytes = Encoding.UTF8.GetBytes(content);
                 // Initializes the stream.
                 Stream stream = new MemoryStream();
                 // Serializes the bytes into the stream.
                 stream.Write(bytes, 0, bytes.Length);
                 // Seeks the stream to starting position.
                 stream.Position = 0;
            
                 // Loads the stream asynchronously into SfRichTextBoxAdv in HTML format.
                 await richTextBoxAdv.LoadAsync(stream, FormatType.Html);
                 
                 tcs.SetResult(true);
                 return await tcs.Task;
             }
             </code>
             <code lang="VB">
             Public Async Function LoadStreamAsync() As Task(Of Boolean)
             
                 Dim tcs As TaskCompletionSource(Of Boolean) = New TaskCompletionSource(Of Boolean)
                 
                 ' Raw content.
                 Dim content As String = "&lt;html&gt;&lt;body&gt;&lt;p&gt;Hello world&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
                 ' Converts the string into byte array.
                 Dim bytes As Byte() = Encoding.UTF8.GetBytes(content)
                 ' Initializes the stream.
                 Dim stream As Stream = New MemoryStream()
                 ' Serializes the bytes into the stream.
                 stream.Write(bytes, 0, bytes.Length);
                 ' Seeks the stream to starting position.
                 stream.Position = 0
            
                 ' Loads the stream asynchronously into SfRichTextBoxAdv in HTML format.
                 Await richTextBoxAdv.LoadAsync(stream, FormatType.Html)
                 
                 tcs.SetResult(True)
                 Return Await tcs.Task
             End Function
             </code>
             </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LoadAsync(System.IO.Stream,Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType,System.Threading.CancellationToken)">
             <summary>
             Asynchronously imports the specified <see cref="T:System.IO.Stream"/> in the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType"/> into the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
             </summary>
             <param name="stream">The stream to import the content.</param>
             <param name="formatType">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType"/> to import.</param>
             <param name="cancellationToken">The cancellation token.</param>
             <returns>A task that represents the asynchronous load operation.</returns>
             <exception cref="T:System.NotSupportedException">RichTextBoxAdv does not support this file format.</exception>
             <exception cref="T:System.ArgumentNullException">Stream cannot be null.</exception>
             <example>
             <para>The following code example demonstrates how to asynchronously load a stream into the SfRichTextBoxAdv.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
             </code>
             <code lang="C#">
             Task&lt;bool&gt; loadAsync = null;
             
             public async Task&lt;bool&gt; LoadStreamAsync()
             {
                 TaskCompletionSource&lt;bool&gt; tcs = new TaskCompletionSource&lt;bool&gt;();
                 
                 // Raw content.
                 string content = "&lt;html&gt;&lt;body&gt;&lt;p&gt;Hello world&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;";
                 // Converts the string into byte array.
                 byte[] bytes = Encoding.UTF8.GetBytes(content);
                 // Initializes the stream.
                 Stream stream = new MemoryStream();
                 // Serializes the bytes into the stream.
                 stream.Write(bytes, 0, bytes.Length);
                 // Seeks the stream to starting position.
                 stream.Position = 0;
                 
                 CancellationTokenSource cancellationTokenSource = new CancellationTokenSource();
                 // Loads the stream asynchronously into SfRichTextBoxAdv in HTML format.
                 loadAsync = richTextBoxAdv.LoadAsync(stream, FormatType.Html, cancellationTokenSource.Token);
                 
                 await loadAsync;
                 
                 if (cancellationTokenSource != null)
                     cancellationTokenSource.Dispose();
                 cancellationTokenSource = null;
                 loadAsync = null;
                 
                 tcs.SetResult(true);
                 return await tcs.Task;
             }
             </code>
             <code lang="VB">
             Dim loadAsync As Task(Of Boolean) = Nothing
             
             Public Async Function LoadStreamAsync() As Task(Of Boolean)
             
                 Dim tcs As TaskCompletionSource(Of Boolean) = New TaskCompletionSource(Of Boolean)
                 
                 ' Raw content.
                 Dim content As String = "&lt;html&gt;&lt;body&gt;&lt;p&gt;Hello world&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
                 ' Converts the string into byte array.
                 Dim bytes As Byte() = Encoding.UTF8.GetBytes(content)
                 ' Initializes the stream.
                 Dim stream As Stream = New MemoryStream()
                 ' Serializes the bytes into the stream.
                 stream.Write(bytes, 0, bytes.Length);
                 ' Seeks the stream to starting position.
                 stream.Position = 0
                 
                 Dim cancellationTokenSource As CancellationTokenSource = New CancellationTokenSource()
            
                 ' Loads the stream asynchronously into SfRichTextBoxAdv in HTML format.
                 loadAsync = richTextBoxAdv.LoadAsync(stream, FormatType.Html, cancellationTokenSource.Token)
            
                 Await loadAsync
                 If cancellationTokenSource IsNot Nothing Then
                     cancellationTokenSource.Dispose()
                 End If
                 cancellationTokenSource = Nothing
                 loadAsync = Nothing
                 
                 tcs.SetResult(True)
                 Return Await tcs.Task
             End Function
             </code>
             </example>
             <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.AsyncLoadingCompleted">
            <summary>
            Asyncs the loading completed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.Load(System.IO.Stream,Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType)">
             <summary>
             Imports the specified <see cref="T:System.IO.Stream"/> in the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType"/> into the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.
             </summary>
             <param name="stream">The stream to import contents.</param>
             <param name="formatType">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType"/> to import.</param>
             <exception cref="T:System.NotSupportedException">RichTextBoxAdv does not support this file format.</exception>
             <exception cref="T:System.ArgumentNullException">Stream cannot be null.</exception>
             <example>
             <para>The following code example demonstrates how to load a stream into the SfRichTextBoxAdv.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
             </code>
             <code lang="C#">
             public void LoadStream()
             {
                 // Raw content.
                 string content = "<html><body><p>Hello world</p></body></html>";
                 // Converts the string into byte array.
                 byte[] bytes = Encoding.UTF8.GetBytes(content);
                 // Initializes the stream.
                 Stream stream = new MemoryStream();
                 // Serializes the bytes into the stream.
                 stream.Write(bytes, 0, bytes.Length);
                 // Seeks the stream to starting position.
                 stream.Position = 0;
            
                 // Loads the stream into SfRichTextBoxAdv in HTML format.
                 richTextBoxAdv.Load(stream, FormatType.Html);
             }
             </code>
             <code lang="VB">
             Public Sub LoadStream()
             
                 ' Raw content.
                 Dim content As String = "<html><body><p>Hello world</p></body></html>"
                 ' Converts the string into byte array.
                 Dim bytes As Byte() = Encoding.UTF8.GetBytes(content)
                 ' Initializes the stream.
                 Dim stream As Stream = New MemoryStream()
                 ' Serializes the bytes into the stream.
                 stream.Write(bytes, 0, bytes.Length);
                 ' Seeks the stream to starting position.
                 stream.Position = 0
            
                 ' Loads the stream into SfRichTextBoxAdv in HTML format.
                 richTextBoxAdv.Load(stream, FormatType.Html)
             End Sub
             </code>
             </example>
             <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.Load(Windows.Storage.StorageFile)">
             <summary>
             Imports the specified <see cref="T:Windows.Storage.StorageFile"/> into the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
             </summary>
             <param name="storageFile">The <see cref="T:Windows.Storage.StorageFile"/> to import the content.</param>
             <example>
             <para>The following code example demonstrates how to import a storage file into the SfRichTextBoxAdv.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
             </code>
             <code lang="C#">
             public async void LoadFileAsync()
             {
                 FileOpenPicker fileOpenPicker = new FileOpenPicker();
                 fileOpenPicker.FileTypeFilter.Add(".doc");
                 fileOpenPicker.FileTypeFilter.Add(".docx");
                 fileOpenPicker.FileTypeFilter.Add(".rtf");
                 fileOpenPicker.FileTypeFilter.Add(".htm");
                 fileOpenPicker.FileTypeFilter.Add(".html");
                 fileOpenPicker.FileTypeFilter.Add(".xml");
                 fileOpenPicker.FileTypeFilter.Add(".txt");
                 StorageFile file = await fileOpenPicker.PickSingleFileAsync();
             
                 if (file != null)
                     // Loads the file into SfRichTextBoxAdv.
                     richTextBoxAdv.Load(file);
             }
             </code>
             <code lang="VB">
             Public Async Function LoadFileAsync() As Task
             
                 Dim fileOpenPicker As New FileOpenPicker()
                 fileOpenPicker.FileTypeFilter.Add(".doc")
                 fileOpenPicker.FileTypeFilter.Add(".docx")
                 fileOpenPicker.FileTypeFilter.Add(".rtf")
                 fileOpenPicker.FileTypeFilter.Add(".htm")
                 fileOpenPicker.FileTypeFilter.Add(".html")
                 fileOpenPicker.FileTypeFilter.Add(".xml")
                 fileOpenPicker.FileTypeFilter.Add(".txt")
                 Dim file As StorageFile = Await fileOpenPicker.PickSingleFileAsync()
            
                 If file IsNot Nothing Then
                     ' Loads the file into SfRichTextBoxAdv.
                     richTextBoxAdv.Load(file)
                 End If
             End Function
             </code>
             </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LoadAsync(Windows.Storage.StorageFile)">
             <summary>
             Asynchronously imports the specified <see cref="T:Windows.Storage.StorageFile"/> into the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
             </summary>
             <param name="storageFile">The <see cref="T:Windows.Storage.StorageFile"/> to import the content.</param>
             <returns>A task that represents the asynchronous load operation.</returns>
             <exception cref="T:System.ArgumentNullException">StorageFile cannot be null.</exception>
             <example>
             <para>The following code example demonstrates how to asynchronously load a file into the SfRichTextBoxAdv.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
             </code>
             <code lang="C#">
             public async Task&lt;bool&gt; LoadFileAsync()
             {
                 TaskCompletionSource&lt;bool&gt; tcs = new TaskCompletionSource&lt;bool&gt;();
            
                 FileOpenPicker fileOpenPicker = new FileOpenPicker();
                 fileOpenPicker.FileTypeFilter.Add(".doc");
                 fileOpenPicker.FileTypeFilter.Add(".docx");
                 fileOpenPicker.FileTypeFilter.Add(".rtf");
                 fileOpenPicker.FileTypeFilter.Add(".htm");
                 fileOpenPicker.FileTypeFilter.Add(".html");
                 fileOpenPicker.FileTypeFilter.Add(".xml");
                 fileOpenPicker.FileTypeFilter.Add(".txt");
                 StorageFile file = await fileOpenPicker.PickSingleFileAsync();
             
                 if (file != null)
                     // Loads the file asynchronously into SfRichTextBoxAdv.
                     await richTextBoxAdv.LoadAsync(file);
             
                tcs.SetResult(true);
                 return await tcs.Task;
             }
             </code>
             <code lang="VB">
             Public Async Function LoadFileAsync() As Task(Of Boolean)
             
                 Dim tcs As TaskCompletionSource(Of Boolean) = New TaskCompletionSource(Of Boolean)
                 
                 Dim fileOpenPicker As New FileOpenPicker()
                 fileOpenPicker.FileTypeFilter.Add(".doc")
                 fileOpenPicker.FileTypeFilter.Add(".docx")
                 fileOpenPicker.FileTypeFilter.Add(".rtf")
                 fileOpenPicker.FileTypeFilter.Add(".htm")
                 fileOpenPicker.FileTypeFilter.Add(".html")
                 fileOpenPicker.FileTypeFilter.Add(".xml")
                 fileOpenPicker.FileTypeFilter.Add(".txt")
                 Dim file As StorageFile = Await fileOpenPicker.PickSingleFileAsync()
            
                 If file IsNot Nothing Then
                     ' Loads the file asynchronously into SfRichTextBoxAdv.
                     Await richTextBoxAdv.LoadAsync(file)
                 End If
                 
                 tcs.SetResult(True)
                 Return Await tcs.Task
             End Function
             </code>
             </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LoadAsync(Windows.Storage.StorageFile,System.Threading.CancellationToken)">
             <summary>
             Asynchronously imports the specified <see cref="T:Windows.Storage.StorageFile"/> into the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
             </summary>
             <param name="storageFile">The <see cref="T:Windows.Storage.StorageFile"/> to import the content.</param>
             <param name="cancellationToken">The cancellation token.</param>
             <returns>A task that represents the asynchronous load operation.</returns>
             <example>
             <para>The following code example demonstrates how to asynchronously load a storage file into the SfRichTextBoxAdv.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
             </code>
             <code lang="C#">
             Task&lt;bool&gt; loadAsync = null;
             
             public async Task&lt;bool&gt; LoadFileAsync()
             {
                 TaskCompletionSource&lt;bool&gt; tcs = new TaskCompletionSource&lt;bool&gt;();
                 CancellationTokenSource cancellationTokenSource = null;
            
                 FileOpenPicker fileOpenPicker = new FileOpenPicker();
                 fileOpenPicker.FileTypeFilter.Add(".doc");
                 fileOpenPicker.FileTypeFilter.Add(".docx");
                 fileOpenPicker.FileTypeFilter.Add(".rtf");
                 fileOpenPicker.FileTypeFilter.Add(".htm");
                 fileOpenPicker.FileTypeFilter.Add(".html");
                 fileOpenPicker.FileTypeFilter.Add(".xml");
                 fileOpenPicker.FileTypeFilter.Add(".txt");
                 StorageFile file = await fileOpenPicker.PickSingleFileAsync();
             
                 if (file != null)
                 {
                     cancellationTokenSource = new CancellationTokenSource();
            
                     // Loads the file asynchronously into SfRichTextBoxAdv.
                     loadAsync = richTextBoxAdv.LoadAsync(file, cancellationTokenSource.Token);
                     await loadAsync;
                 }
            
                 if (cancellationTokenSource != null)
                     cancellationTokenSource.Dispose();
                 cancellationTokenSource = null;
                 loadAsync = null;
            
                tcs.SetResult(true);
                 return await tcs.Task;
             }
             </code>
             <code lang="VB">
             Dim loadAsync As Task(Of Boolean) = Nothing
             
             Public Async Function LoadFileAsync() As Task(Of Boolean)
             
                 Dim tcs As TaskCompletionSource(Of Boolean) = New TaskCompletionSource(Of Boolean)
                 
                 Dim fileOpenPicker As New FileOpenPicker()
                 fileOpenPicker.FileTypeFilter.Add(".doc")
                 fileOpenPicker.FileTypeFilter.Add(".docx")
                 fileOpenPicker.FileTypeFilter.Add(".rtf")
                 fileOpenPicker.FileTypeFilter.Add(".htm")
                 fileOpenPicker.FileTypeFilter.Add(".html")
                 fileOpenPicker.FileTypeFilter.Add(".xml")
                 fileOpenPicker.FileTypeFilter.Add(".txt")
                 Dim file As StorageFile = Await fileOpenPicker.PickSingleFileAsync()
            
                 Dim cancellationTokenSource As CancellationTokenSource = Nothing
                 
                 If file IsNot Nothing Then
                     cancellationTokenSource = New CancellationTokenSource()
                     ' Loads the file asynchronously into SfRichTextBoxAdv.
                     loadAsync = richTextBoxAdv.LoadAsync(file, cancellationTokenSource.Token)
                     Await loadAsync
                 End If
                 
                 If cancellationTokenSource IsNot Nothing Then
                     cancellationTokenSource.Dispose()
                 End If
                 cancellationTokenSource = Nothing
                 loadAsync = Nothing
                 
                 tcs.SetResult(True)
                 Return Await tcs.Task
             End Function
             </code>
             </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FireLoadCompleted">
            <summary>
            Fires the load completed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InitDocumentLoad">
            <summary>
            Initializes to the load document.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.GetDocIOFormatType(Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType)">
            <summary>
            Gets the DocIO format type.
            </summary>
            <param name="formatType">Type of the format.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LoadInternal(System.IO.Stream,Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType)">
            <summary>
            Loads the internal.
            </summary>
            <param name="documentStream">The document stream.</param>
            <param name="formatType">Type of the format.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CreateEmptyDocument">
            <summary>
            Creates the empty document.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LoadDocIOInternal(System.IO.Stream,Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType)">
            <summary>
            Loads the document io internal.
            </summary>
            <param name="documentStream">The document stream.</param>
            <param name="formatType">Type of the format.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LoadInternal(System.String)">
            <summary>
            Loads the internal.
            </summary>
            <param name="password">The password.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LoadDocIOInternalAsync(System.IO.Stream,Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType)">
            <summary>
            Loads the doc IO internal async.
            </summary>
            <param name="documentStream">The document stream.</param>
            <param name="formatType">Type of the format.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IsSupportedFormat(Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType)">
            <summary>
            Determines whether the specified format type is supported format.
            </summary>
            <param name="formatType">Type of the format.</param>
            <returns>
              <c>true</c> if the specified format type is supported format; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LoadDocumentAdv(Syncfusion.DocIO.DLS.WordDocument)">
            <summary>
            Loads the document adv.
            </summary>
            <param name="wordDocument">The word document.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ImportXAML(System.IO.Stream)">
            <summary>
            Imports the XAML.
            </summary>
            <param name="xamlStream">The xaml stream.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ImportHTML(System.IO.Stream)">
            <summary>
            Imports the HTML.
            </summary>
            <param name="htmlStream">The html stream.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ImportHTMLAsync(System.IO.Stream)">
            <summary>
            Imports the HTML in Asynchronous mode
            </summary>
            <param name="xamlStream">The html stream.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ImportText(System.IO.Stream)">
            <summary>
            Imports the text.
            </summary>
            <param name="textStream">The text stream.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ImportTextAsync(System.IO.Stream)">
            <summary>
            Imports the text asynchronously.
            </summary>
            <param name="textStream"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SaveAsync(System.IO.Stream,Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType)">
             <summary>
             Asynchronously exports the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> document content as 
             specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType"/> into the <see cref="T:System.IO.Stream"/>.
             </summary>
             <param name="stream">The stream to export the content.</param>
             <param name="formatType">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType"/> to export.</param>
             <returns>A task that represents the asynchronous save operation.</returns>
             <exception cref="T:System.ArgumentNullException">Stream cannot be null.</exception>
             <example>
             <para>The following code example demonstrates how to asynchronously
             export the SfRichTextBoxAdv content into a stream.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
             </code>
             <code lang="C#">
             public async void SaveStream()
             {
                 // Initializes the stream.
                 Stream stream = new MemoryStream();
            
                 // Exports the content into the stream as Docx Format asynchronously.
                 await richTextBoxAdv.SaveAsync(stream, FormatType.Docx);
            
                 // Seek the stream to starting position.
                 stream.Position = 0;
            
                 // Process the stream here.
             }
             </code>
             <code lang="VB">
             Public Async Function SaveStream() As Task
             
                 ' Initializes the stream.
                 Dim stream As Stream = New MemoryStream()
            
                 ' Exports the content into the stream as Docx Format asynchronously.
                 Await richTextBoxAdv.SaveAsync(stream, FormatType.Docx)
            
                 ' Seek the stream to starting position.
                 stream.Position = 0
            
                 ' Process the stream here.
             End Function
             </code>
             </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SaveAsyncInternal(System.IO.Stream,Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType)">
            <summary>
            Saves the document to stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="formatType">Type of the format.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.Save(System.IO.Stream,Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType)">
             <summary>
             Exports the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> content into the specified <see cref="T:System.IO.Stream"/> in specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType"/>.
             </summary>
             <param name="stream">The stream to export the content.</param>
             <param name="formatType">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType"/> to export.</param>
             <exception cref="T:System.ArgumentNullException">Stream cannot be null.</exception>
             <example>
             <para>The following code example demonstrates how to export the SfRichTextBoxAdv content into the stream.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
             </code>
             <code lang="C#">
             public void SaveStream()
             {
                 // Initializes the stream.
                 Stream stream = new MemoryStream();
            
                 // Exports the content into the stream as Docx Format.
                 richTextBoxAdv.Save(stream, FormatType.Docx);
            
                 // Seek the stream to starting position.
                 stream.Position = 0;
            
                 // Process the stream here.
             }
             </code>
             <code lang="VB">
             Public Sub SaveStream()
             
                 ' Initializes the stream.
                 Dim stream As Stream = New MemoryStream()
            
                 ' Exports the content into the stream as Docx Format.
                 richTextBoxAdv.Save(stream, FormatType.Docx)
            
                 ' Seek the stream to starting position.
                 stream.Position = 0
            
                 ' Process the stream here.
             End Sub
             </code>
             </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SaveInternal(System.IO.Stream,Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType)">
            <summary>
            Saves the document to stream.
            </summary>
            <param name="documentStream">The document stream.</param>
            <param name="formatType">Type of the format.</param>
            <exception cref="T:System.NotSupportedException">RichTextBoxAdv does not support this file format.</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.Save(Windows.Storage.StorageFile)">
             <summary>
             Exports the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> content into the <see cref="T:Windows.Storage.StorageFile"/>.
             </summary>
             <param name="storageFile">The <see cref="T:Windows.Storage.StorageFile"/> to export the content.</param>
             <exception cref="T:System.ArgumentNullException">StorageFile cannot be null.</exception>
             <example>
             <para>The following code example demonstrates how to export the SfRichTextBoxAdv content into a storage file.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
             </code>
             <code lang="C#">
             public async void SaveFile()
             {
                 FileSavePicker fileSavePicker = new FileSavePicker();
                 fileSavePicker.SuggestedStartLocation = PickerLocationId.DocumentsLibrary;
                 fileSavePicker.FileTypeChoices.Add("Word Document", new List&lt;string&gt;() { ".docx" });
                 fileSavePicker.FileTypeChoices.Add("Word 97-2003 Document", new List&lt;string&gt;() { ".doc" });
                 fileSavePicker.FileTypeChoices.Add("Rich Text Document", new List&lt;string&gt;() { ".rtf" });
                 fileSavePicker.FileTypeChoices.Add("Web Page, Filtered", new List&lt;string&gt;() { ".html" });
                 fileSavePicker.FileTypeChoices.Add("Word XML Document", new List&lt;string&gt;() { ".xml" });
                 fileSavePicker.FileTypeChoices.Add("Plain Text", new List&lt;string&gt;() { ".txt" });
                 fileSavePicker.SuggestedFileName = "New Document";
                 StorageFile file = await fileSavePicker.PickSaveFileAsync();
            
                 // Exports the content into the file.
                 if (file != null)
                     richTextBoxAdv.Save(file);
             } 
             </code>
             <code lang="VB">
             Public Async Function SaveFile() As Task
                 Dim fileSavePicker As New FileSavePicker()
                 fileSavePicker.SuggestedStartLocation = PickerLocationId.DocumentsLibrary
                 fileSavePicker.FileTypeChoices.Add("Word Document", New List(Of String)() From { _
                    ".docx" _
                 })
                 fileSavePicker.FileTypeChoices.Add("Word 97-2003 Document", New List(Of String)() From { _
                     ".doc" _
                 })
                 fileSavePicker.FileTypeChoices.Add("Rich Text Document", New List(Of String)() From { _
                     ".rtf" _
                 })
                 fileSavePicker.FileTypeChoices.Add("Web Page, Filtered", New List(Of String)() From { _
                     ".html" _
                 })
                 fileSavePicker.FileTypeChoices.Add("Word XML Document", New List(Of String)() From { _
                     ".xml" _
                 })
                 fileSavePicker.FileTypeChoices.Add("Plain Text", New List(Of String)() From { _
                     ".txt" _
                 })
                 fileSavePicker.SuggestedFileName = "New Document"
                 Dim file As Windows.Storage.StorageFile = Await fileSavePicker.PickSaveFileAsync()
            
                 ' Exports the content into the file.
                 If file IsNot Nothing Then
                      richTextBoxAdv.Save(file)
                 End If
             End Function
             </code>
             </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SaveAsync(Windows.Storage.StorageFile)">
            <summary>
             Asynchronously exports the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> content into the specified <see cref="T:Windows.Storage.StorageFile"/>.
             </summary>
             <param name="storageFile">The <see cref="T:Windows.Storage.StorageFile"/> to export the content.</param>
             <returns>A task that represents the asynchronous save operation.</returns>
             <exception cref="T:System.ArgumentNullException">StorageFile cannot be null.</exception>
             <example>
             <para>The following code example demonstrates how to asynchronously
             export the SfRichTextBoxAdv content into a storage file.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
             </code>
             <code lang="C#">
             public async void SaveFile()
             {
                 FileSavePicker fileSavePicker = new FileSavePicker();
                 fileSavePicker.SuggestedStartLocation = PickerLocationId.DocumentsLibrary;
                 fileSavePicker.FileTypeChoices.Add("Word Document", new List&lt;string&gt;() { ".docx" });
                 fileSavePicker.FileTypeChoices.Add("Word 97-2003 Document", new List&lt;string&gt;() { ".doc" });
                 fileSavePicker.FileTypeChoices.Add("Rich Text Document", new List&lt;string&gt;() { ".rtf" });
                 fileSavePicker.FileTypeChoices.Add("Web Page, Filtered", new List&lt;string&gt;() { ".html" });
                 fileSavePicker.FileTypeChoices.Add("Word XML Document", new List&lt;string&gt;() { ".xml" });
                 fileSavePicker.FileTypeChoices.Add("Plain Text", new List&lt;string&gt;() { ".txt" });
                 fileSavePicker.SuggestedFileName = "New Document";
                 StorageFile file = await fileSavePicker.PickSaveFileAsync();
            
                 // Exports the content into the file asynchronously.
                 if (file != null)
                     await richTextBoxAdv.SaveAsync(file);
             } 
             </code>
             <code lang="VB">
             Public Async Function SaveFile() As Task
                 Dim fileSavePicker As New FileSavePicker()
                 fileSavePicker.SuggestedStartLocation = PickerLocationId.DocumentsLibrary
                 fileSavePicker.FileTypeChoices.Add("Word Document", New List(Of String)() From { _
                    ".docx" _
                 })
                 fileSavePicker.FileTypeChoices.Add("Word 97-2003 Document", New List(Of String)() From { _
                     ".doc" _
                 })
                 fileSavePicker.FileTypeChoices.Add("Rich Text Document", New List(Of String)() From { _
                     ".rtf" _
                 })
                 fileSavePicker.FileTypeChoices.Add("Web Page, Filtered", New List(Of String)() From { _
                     ".html" _
                 })
                 fileSavePicker.FileTypeChoices.Add("Word XML Document", New List(Of String)() From { _
                     ".xml" _
                 })
                 fileSavePicker.FileTypeChoices.Add("Plain Text", New List(Of String)() From { _
                     ".txt" _
                 })
                 fileSavePicker.SuggestedFileName = "New Document"
                 Dim file As Windows.Storage.StorageFile = Await fileSavePicker.PickSaveFileAsync()
            
                 ' Exports the content into the file asynchronously.
                 If file IsNot Nothing Then
                      Await richTextBoxAdv.SaveAsync(file)
                 End If
             End Function
             </code>
             </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SaveAsyncInternal(Windows.Storage.StorageFile,Syncfusion.UI.Xaml.RichTextBoxAdv.FormatType)">
            <summary>
            Saves the document into stream in specified format type.
            </summary>
            <param name="file">The StorageFile.</param>
            <param name="formatType">The FormatType.</param>
            <returns>A task that represents the asynchronous save operation.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ExportToText(System.IO.Stream)">
            <summary>
            Exports to text.
            </summary>
            <param name="textStream">The text stream.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ExportToXAML(System.IO.Stream)">
            <summary>
            Exports to XAML.
            </summary>
            <param name="xamlStream">The xaml stream.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CanMerge">
            <summary>
            Determines whether the selected cells can merge.
            </summary>
            <returns>
              <c>true</c> if the selected cells can merge; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ChangeListType(System.String)">
            <summary>
            Changes the type of the list.
            </summary>
            <param name="listType">Type of the list.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertInlineInParagraph(Syncfusion.UI.Xaml.RichTextBoxAdv.Inline)">
            <summary>
            Inserts the inline into currrent text position
            </summary>
            <param name="inline"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertTableInBlocks(System.Int32,System.Int32)">
            <summary>
            Inserts the table.
            </summary>
            <param name="rowCount">The row count.</param>
            <param name="columnCount">The column count.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertRowInTable(Syncfusion.UI.Xaml.RichTextBoxAdv.RowPlacement)">
            <summary>
            Inserts the row in table.
            </summary>
            <param name="rowPlacement">The row placement.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertColumnInTable(Syncfusion.UI.Xaml.RichTextBoxAdv.ColumnPlacement)">
            <summary>
            Inserts the column in table.
            </summary>
            <param name="columnPlacement">The column placement.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DeleteTableFromBlocks">
            <summary>
            Deletes the table from blocks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DeleteRowFromTable">
            <summary>
            Deletes the row from table.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DeleteColumnFromTable">
            <summary>
            Deletes the column from table.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.MergeSelectedCellsInTable">
            <summary>
            Merges the selected cells in table.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectCellInTable">
            <summary>
            Selects the cell in table.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectRowInTable">
            <summary>
            Selects the row in table.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectColumnInTable">
            <summary>
            Selects the column in table.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectTableInBlocks">
            <summary>
            Selects the table in blocks.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ChangeTableCellBackground(Windows.UI.Color)">
            <summary>
            Changes the table cell background.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ChangeTableBorderColor(Windows.UI.Color)">
            <summary>
            Changes the color of the table border.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CreateBlankDocument">
            <summary>
            Creates the blank document
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CreateBlockOnEmpty">
            <summary>
            Creates the minimum block on empty.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ResetZooming">
            <summary>
            Resets the zooming to 100% in <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.
            </summary>
            <remarks>
            If <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control is loaded, then 
            the <c>ZoomFactor</c> property is set to 100.
            </remarks>
            <example>
            <para>The following code example demonstrates how to reset the zooming factor of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
            </code>
            <code lang="C#">
            public void ResetZooming()
            {
                richTextBoxAdv.Dispose();
            }
            </code>
            <code lang="VB">
            Public Sub ResetZooming()
                richTextBoxAdv.ResetZooming()
            End Sub
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowHideElement(Windows.UI.Xaml.UIElement,System.Boolean)">
            <summary>
            Shows or hides the ui element.
            </summary>
            <param name="element"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ClearSelectionBrushOpacity">
            <summary>
            Clears selection brush opacity.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SetSelectionBrushOpacity(System.Double)">
            <summary>
            Sets selection brush opacity.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnViewerChanged(Syncfusion.UI.Xaml.RichTextBoxAdv.LayoutViewer)">
            <summary>
            Called when viewer changed.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.GetFormatType(System.String)">
            <summary>
            Get Format Type
            </summary>
            <param name="format">The format.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException">RichTextBoxAdv does not support this file format.</exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnStyleChanged">
            <summary>
            Called when style changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FireFileLoadingFailed(System.Exception)">
            <summary>
            Fires the file loading failed.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FireDocumentChanged">
            <summary>
            Fires the document changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FireContentChanged(Syncfusion.UI.Xaml.RichTextBoxAdv.ContentChangedEventArgs)">
            <summary>
            Fires the content changed.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ContentChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FireContentChanged">
            <summary>
            Fires the content changed
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FireDocumentChanged(Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentChangedEventArgs)">
            <summary>
            Fires the document changed.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FireRequestNavigate(Syncfusion.UI.Xaml.RichTextBoxAdv.FieldBeginAdv)">
            <summary>
            Fires the hyperlink clicked.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.UpdateEditorLayout">
            <summary>
            Updates the entire editor layout
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FireSelectionChanged(Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionChangedEventArgs)">
            <summary>
            Fires the selection changed.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SelectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FireCommentAdding(Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAddingEventArgs)">
            <summary>
            Fires the comment adding.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAddingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.GetBitmapImage(System.String)">
            <summary>
            Gets the bitmap image.
            </summary>
            <param name="resourceFile">The resource file.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.Clipboard_ContentChanged(System.Object,System.Object)">
            <summary>
            Clipboard_s the content changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The e.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnShowCommentsChanged">
            <summary>
            Called when [show comments changed].
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance.
            </summary>
            <example>
            <para>The following code example demonstrates how to dispose an instance of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
            </code>
            <code lang="C#">
            public void OnUnloaded()
            {
                if (richTextBoxAdv != null)
                    richTextBoxAdv.Dispose();
            }
            </code>
            <code lang="VB">
            Public Sub OnUnloaded()
                If richTextBoxAdv IsNot Nothing Then
                    richTextBoxAdv.Dispose()
                End If
            End Sub
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.GetPageAsImageAsync(System.Int32)">
             <summary>
             Asynchronously returns the specified <paramref name="pageNumber"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>
             as <see cref="T:Windows.UI.Xaml.Media.Imaging.BitmapImage"/> instance.
             </summary>
             <param name="pageNumber">The page number in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</param>
             <returns>
             If <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control is loaded, returns <see cref="T:Windows.UI.Xaml.Media.Imaging.BitmapImage"/> of 
             specified <paramref name="pageNumber"/>. Otherwise returns <c>null</c>.
             </returns>
             <example>
             <para>The following code example demonstrate how to retrieve the pages in SfRichTextBoxAdv as bitmap images.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
             </code>
             <code lang="C#">
             List&lt;BitmapImage&gt; images = null;
             
             public async Task&lt;bool&gt; GetPagesAsync()
             {
                 TaskCompletionSource&lt;bool&gt; tcs = new TaskCompletionSource&lt;bool&gt;();
            
                 if (images != null)
                     images.Clear();
            
                 images = new List&lt;BitmapImage&gt;();
            
                 for (int pageNumber = 0; pageNumber &lt; richTextBoxAdv.PageCount; pageNumber++)
                 {
                     // Retrieves the bimap image of a page in SfRichTextBoxAdv control.
                     BitmapImage image = await richTextBoxAdv.GetPageAsImageAsync(pageNumber);
                     images.Add(image);
                 }
            
                tcs.SetResult(true);
                return await tcs.Task;
             }
             </code>
             <code lang="VB">
             Private images As List(Of BitmapImage) = Nothing
             
             Public Async Function GetPagesAsync() As Task(Of Boolean)
             
                 Dim tcs As TaskCompletionSource(Of Boolean) = New TaskCompletionSource(Of Boolean)
                 
                 If images IsNot Nothing Then
                     images.Clear()
                 End If
            
                 images = New List(Of BitmapImage)()
            
                 For pageNumber As Integer = 0 To richTextBoxAdv.PageCount - 1
                    ' Retrieves the bimap image of a page in SfRichTextBoxAdv control.
                    Dim image As BitmapImage = Await richTextBoxAdv.GetPageAsImageAsync(pageNumber)
                    images.Add(image)
                 Next
                 
                 tcs.SetResult(True)
                 Return Await tcs.Task
             End Function
             </code>
             </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowHideOptionsPane(System.Boolean)">
            <summary>
            Shows the hide options pane.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ChangePaneType(Syncfusion.UI.Xaml.RichTextBoxAdv.PaneType)">
            <summary>
            Changes the pane type.
            </summary>
            <param name="type">The pane type.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.Find(System.String,Syncfusion.UI.Xaml.RichTextBoxAdv.FindOptions)">
             <summary>
             Finds the first occurrence of the specified <see cref="T:System.String"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>
             from current selection with specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FindOptions"/>.
             </summary>
             <param name="text">The text to find.</param>
             <param name="findOption">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FindOptions"/> to match.</param>
             <returns>
             Returns the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult"/> instance, if any matching <paramref name="text"/> with the 
             specified <see cref="!:FindOption"/> is found. Otherwise returns null.
             </returns>
             <example>
             <para>The following code example demonstrates how to find first occurrence of the specified text in the SfRichTextBoxAdv.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
             </code>
             <code lang="C#">
             public void FindText()
             {
                 // Finds for the specified text by matching case sensitive whole word.
                 TextSearchResult textSearchResult = richTextBoxAdv.Find("Section", FindOptions.CaseSensitiveWholeWord);
            
                 if(textSearchResult != null)
                 {
                     // If the text search result is found, select the result.
                     richTextBoxAdv.Selection.Select(textSearchResult.Start, textSearchResult.End);
            
                     // Applies bold formatting for the text.
                     richTextBoxAdv.Selection.CharacterFormat.Bold = true;
                 }
             }
             </code>
             <code lang="VB">
             Public Sub FindText()
                  ' Finds for the specified text by matching case sensitive whole word.
                  Dim textSearchResult As TextSearchResult = richTextBoxAdv.Find("Section", FindOptions.CaseSensitiveWholeWord)
            
                  If textSearchResult IsNot Nothing Then
                      ' If the text search result is found, select the result.
                      richTextBoxAdv.Selection.SelectionRanges.Add(textSearchResult.Start, textSearchResult.[End])
            
                      ' Applies bold formatting for the text.
                      richTextBoxAdv.Selection.CharacterFormat.Bold = True
                  End If
              End Sub
             </code>
             </example>
             <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FindOptions"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.Find(System.Text.RegularExpressions.Regex,Syncfusion.UI.Xaml.RichTextBoxAdv.FindOptions)">
             <summary>
             Finds the first occurrence of the specified <see cref="!:Regex">Regex </see> <paramref name="pattern"/> 
             in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> from current selection with specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FindOptions"/>.
             </summary>
             <param name="pattern">The <see cref="T:System.Text.RegularExpressions.Regex"/> pattern to find.</param>
             <param name="findOption">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FindOptions"/> to match.</param>
             <returns>
             Returns the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextSearchResult"/> instance, if any matching <see cref="!:Regex">Regex </see> <paramref name="pattern"/> 
             with the specified <see cref="!:FindOption"/> is found. Otherwise returns null.
             </returns>
             <example>
             <para>The following code example demonstrates how to find first occurrence of the specified pattern in the SfRichTextBoxAdv.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
             </code>
             <code lang="C#">
             public void FindPattern()
             {
                 // Finds for the specified pattern (lines starting with Section followed by space).
                 TextSearchResult textSearchResult = richTextBoxAdv.Find(new Regex("^Section\\s"), FindOptions.None);
            
                 if(textSearchResult != null)
                 {
                     // If the text search result is found, select the result.
                     richTextBoxAdv.Selection.Select(textSearchResult.Start, textSearchResult.End);
            
                     // Applies bold formatting for the text.
                     richTextBoxAdv.Selection.CharacterFormat.Bold = true;
                 }
             }
             </code>
             <code lang="VB">
             Public Sub FindPattern()
                  ' Finds for the specified pattern (lines starting with Section followed by space).
                  Dim textSearchResults As TextSearchResults = richTextBoxAdv.FindAll(New Regex("^Section\s"), FindOptions.None)
            
                  If textSearchResult IsNot Nothing Then
                      ' If the text search result is found, select the result.
                      richTextBoxAdv.Selection.SelectionRanges.Add(textSearchResult.Start, textSearchResult.[End])
            
                      ' Applies bold formatting for the text.
                      richTextBoxAdv.Selection.CharacterFormat.Bold = True
                  End If
              End Sub
             </code>
             </example>
             <seealso cref="T:System.Text.RegularExpressions.Regex"/>
             <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FindOptions"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FindAll(System.String,Syncfusion.UI.Xaml.RichTextBoxAdv.FindOptions)">
             <summary>
             Finds all the occurrences of the specified <see cref="T:System.String"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> 
             with specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FindOptions"/>.
             </summary>
             <param name="text">The text to find.</param>
             <param name="findOption">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FindOptions"/> to match.</param>
             <returns>
             Returns the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.TextSearchResults"/> instance, if any matching <paramref name="text"/>
             with the specified <see cref="!:FindOption"/> is found. Otherwise returns null.
             </returns>
             <example>
             <para>The following code example demonstrates how to find all occurrences of the specified text in the SfRichTextBoxAdv.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
             </code>
             <code lang="C#">
             public void FindAllText()
             {
                 // Finds for the specified text by matching case sensitive whole word.
                 TextSearchResults textSearchResults = richTextBoxAdv.FindAll("Section", FindOptions.CaseSensitiveWholeWord);
            
                 if(textSearchResults != null)
                 {
                    // If the text search results are found, select all the results.
                    for (int i = 0; i &lt; textSearchResults.Count; i++)
                    {
                        TextSearchResult textSearchResult = textSearchResults[i];
                        if (i == 0)
                            richTextBoxAdv.Selection.Select(textSearchResult.Start, textSearchResult.End);
                        else
                            richTextBoxAdv.Selection.SelectionRanges.Add(textSearchResult.Start, textSearchResult.End);
                    }
            
                    // Applies highlight color for the text.
                    richTextBoxAdv.Selection.CharacterFormat.HighlightColor = HighlightColor.Yellow;
                 }
             }
             </code>
             <code lang="VB">
             Public Sub FindAllText()
                  ' Finds for the specified text by matching case sensitive whole word.
                  Dim textSearchResults As TextSearchResults = richTextBoxAdv.FindAll("Section", FindOptions.CaseSensitiveWholeWord)
            
                  If textSearchResults IsNot Nothing Then
                      ' If the text search result is found, select all the results.
                      For i As Integer = 0 To textSearchResults.Count - 1
                          Dim textSearchResult As TextSearchResult = textSearchResults(i)
                          If i = 0 Then
                              richTextBoxAdv.Selection.[Select](textSearchResult.Start, textSearchResult.[End])
                          Else
                              richTextBoxAdv.Selection.SelectionRanges.Add(textSearchResult.Start, textSearchResult.[End])
                          End If
                      Next
            
                      ' Applies highlight color for the text.
                      richTextBoxAdv.Selection.CharacterFormat.HighlightColor = HighlightColor.Yellow
                  End If
              End Sub
             </code>
             </example>
             <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FindOptions"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FindAll(System.Text.RegularExpressions.Regex,Syncfusion.UI.Xaml.RichTextBoxAdv.FindOptions)">
             <summary>
             Finds all the occurrences of specified <see cref="!:Regex">Regex </see> <paramref name="pattern"/> in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>
             with specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FindOptions"/>.
             </summary>
             <param name="pattern">The <see cref="T:System.Text.RegularExpressions.Regex"/> pattern to find.</param>
             <param name="findOption">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FindOptions"/> to match.</param>
             <returns>
             Returns the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.TextSearchResults"/> instance, if any specified <see cref="!:Regex">Regex </see> <paramref name="pattern"/> is matched
             with the specified <see cref="!:FindOption"/>. Otherwise returns null.</returns>
             <example>
             <para>The following code example demonstrates how to find all occurrences of the specified pattern in the SfRichTextBoxAdv.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"/&gt;
             </code>
             <code lang="C#">
             public void FindAllPattern()
             {
                 // Finds for the specified pattern (lines starting with Section followed by space).
                 TextSearchResults textSearchResults = richTextBoxAdv.FindAll(new Regex("^Section\\s"), FindOptions.None);
            
                 if(textSearchResults != null)
                 {
                    // If the text search results are found, select all the results.
                    for (int i = 0; i &lt; textSearchResults.Count; i++)
                    {
                        TextSearchResult textSearchResult = textSearchResults[i];
                        if (i == 0)
                            richTextBoxAdv.Selection.Select(textSearchResult.Start, textSearchResult.End);
                        else
                            richTextBoxAdv.Selection.SelectionRanges.Add(textSearchResult.Start, textSearchResult.End);
                    }
            
                    // Applies highlight color for the text.
                    richTextBoxAdv.Selection.CharacterFormat.HighlightColor = HighlightColor.Yellow;
                 }
             }
             </code>
             <code lang="VB">
             Public Sub FindAllPattern()
                  ' Finds for the specified pattern (lines starting with Section followed by space).
                  Dim textSearchResults As TextSearchResults = richTextBoxAdv.FindAll(New Regex("^Section\s"), FindOptions.None)
            
                  If textSearchResults IsNot Nothing Then
                      ' If the text search result is found, select all the results.
                      For i As Integer = 0 To textSearchResults.Count - 1
                          Dim textSearchResult As TextSearchResult = textSearchResults(i)
                          If i = 0 Then
                              richTextBoxAdv.Selection.[Select](textSearchResult.Start, textSearchResult.[End])
                          Else
                              richTextBoxAdv.Selection.SelectionRanges.Add(textSearchResult.Start, textSearchResult.[End])
                          End If
                      Next
            
                      ' Applies highlight color for the text.
                      richTextBoxAdv.Selection.CharacterFormat.HighlightColor = HighlightColor.Yellow
                  End If
              End Sub
             </code>
             </example>
             <seealso cref="T:System.Text.RegularExpressions.Regex"/>
             <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FindOptions"/>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ClearTextSearchResults">
            <summary>
            Clears the text search results.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowHideSpellingPane(System.Boolean)">
            <summary>
            Shows or hides the Spellcheck pane
            </summary>
            <param name="show">if true the pane to be show else false.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.GetSpellingError(Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition)">
            <summary>
            Returns a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellingError"/> instance associated with any spelling error at the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> in the document.
            </summary>
            <param name="textPosition">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/> instance at which spelling error to be checked.</param>
            <returns>
            A <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SpellingError"/> instance containing the details of the spelling error found at the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/>, 
            or null if no spelling error exists at the specified <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextPosition"/>.
            </returns>
            <example>
            <para>The following code example demonstrates how to get the spelling error at the specified text position in a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv" xmlns:System="clr-namespace:System;assembly=mscorlib" 
                                                xmlns:RichTextBoxAdv="clr-namespace:Syncfusion.Windows.Controls.RichTextBoxAdv;assembly=Syncfusion.SfRichTextBoxAdv.Wpf"&gt;
                &lt;RichTextBoxAdv:SfRichTextBoxAdv.SpellChecker&gt;
                    &lt;!-- Enables spell checking functionality. --&gt;
                    &lt;RichTextBoxAdv:SpellChecker IsEnabled="True" IgnoreAlphaNumericWords="True" IgnoreURIs="True" IgnoreUppercaseWords="False"&gt;
                        &lt;RichTextBoxAdv:SpellChecker.CustomDictionaries&gt;
                            &lt;!-- Defines the custom dictionaries for spell checking. --&gt;
                            &lt;System:String&gt;../../Assets/Default.dic&lt;/System:String&gt;
                        &lt;/RichTextBoxAdv:SpellChecker.CustomDictionaries&gt;
                    &lt;/RichTextBoxAdv:SpellChecker&gt;
                &lt;/RichTextBoxAdv:SfRichTextBoxAdv.SpellChecker&gt;
            &lt;/RichTextBoxAdv:SfRichTextBoxAdv&gt;
            </code>
            <code lang="C#">
            public void IgnoreSpellingError()
            {
                TextPosition textPosition = richTextBoxAdv.Document.GetTextPosition("0;0;20");
                // Gets the spelling error at the specified text position.
                Syncfusion.Windows.Controls.RichTextBoxAdv.SpellingError spellingError = richTextBoxAdv.GetSpellingError(textPosition);
                if (spellingError != null)
                    // If a spelling error is found, ignores all the occurrences of the misspelled word.
                    spellingError.IgnoreAll();
            }
            </code>
            <code lang="VB">
            Public Sub IgnoreSpellingError()
                Dim textPosition As TextPosition = richTextBoxAdv.Document.GetTextPosition("0;0;20")
                ' Gets the spelling error at the specified text position.
                Dim spellingError As Syncfusion.Windows.Controls.RichTextBoxAdv.SpellingError = richTextBoxAdv.GetSpellingError(textPosition)
                If spellingError IsNot Nothing Then
                    ' If a spelling error is found, ignores all the occurrences of the misspelled word.
                    spellingError.IgnoreAll()
                End If
            End Sub
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.PredictText">
            <summary>
            Texts the prediction.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.GetPrefixAndSuffix">
            <summary>
            Gets the prefix and suffix.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FileLoadingFailedEventHandler">
            <summary>
            Event handler for file load failed.
            </summary>
            <param name="obj">The object.</param>
            <param name="args">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.FileLoadingFailedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ContentChangedEventHandler">
            <summary>
            Event handler for content changed.
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.ContentChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DocumentChangedEventHandler">
            <summary>
            Event handler for document changed.
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.RequestNavigateEventHandler">
            <summary>
            Event handler for request URL navigation changed.
            </summary>
            <param name="obj">The obj.</param>
            <param name="args">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RequestNavigateEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectionChangedEventHandler">
            <summary>
            Event handler for selection changed.
            </summary>
            <param name="obj"></param>
            <param name="args">An <see cref="T:Syncfusion.Windows.Controls.RichTextBoxAdv.SelectionChangedEventArgs">SelectionChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CommentAddingEventHandler">
            <summary>
            Event handled for comment adding.
            </summary>
            <param name="obj"></param>
            <param name="args">An <see cref="T:Syncfusion.Windows.Controls.RichTextBoxAdv.CommentAddingEventArgs">CommentAddingEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.AcceptsTab">
            <summary>
            Gets or sets a value that indicates how the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control responds
            when the user presses the TAB key.
            </summary>
            <returns>
            True if pressing the TAB key inserts a tab character at the current cursor position 
            or navigates to the next cell if current cursor position is within a table cell.
            False if pressing the TAB key moves the focus to the next control that is marked as a tab stop 
            and does not insert a tab character or perform cell navigation.
            The default value is false.
            </returns>
            <example>
            <para>The following code example demonstrates how to specify the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control to accept Tab character as input.</para>
            <code lang="XAML">
            &lt;!-- Defines the SfRichTextBoxAdv control that accepts Tab character as input. --&gt; 
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv" AcceptsTab="True"/&gt;
            </code>
            <code lang="C#">
            // Defines the control.
            SfRichTextBoxAdv richTextBoxAdv = new SfRichTextBoxAdv();
            richTextBoxAdv.AcceptsTab = true;
            </code>
            <code lang="VB">
            ' Defines the control.
            Dim richTextBoxAdv As New SfRichTextBoxAdv()
            richTextBoxAdv.AcceptsTab = True
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.AcceptsTabProperty">
            <summary>
            Identifies the AcceptsTab dependency property.
            </summary>
            <returns>
            The identifier for the AcceptsTab dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SearchHighlightBrush">
            <summary>
            Gets or Sets the fill color
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SearchHighlightBrushProperty">
            <summary>
            Identifies the SearchHighlightBrush dependency property.
            </summary>
            <returns>
            The identifier for the SearchHighlightBrush dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CaretBrush">
            <summary>
            Gets or sets the caret brush of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <returns>The caret brush of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>. The default value is a SolidColorBrush with auto color.</returns> 
            <example>
            <para>The following code example demonstrates how to define the caret brush for <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.</para>
            <code lang="XAML">
            &lt;!-- Defines the SfRichTextBoxAdv control with caret brush as Blue. --&gt; 
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv" CaretBrush="#FF0000FF"/&gt;
            </code>
            <code lang="C#">
            // Defines the SfRichTextBoxAdv control with caret brush as Blue.
            SfRichTextBoxAdv richTextBoxAdv = new SfRichTextBoxAdv();
            richTextBoxAdv.CaretBrush = new SolidColorBrush(Color.FromArgb(0xFF, 0x00, 0x00, 0xFF));
            </code>
            <code lang="VB">
            ' Defines the SfRichTextBoxAdv control with caret brush as Blue.
            Dim richTextBoxAdv As New SfRichTextBoxAdv()
            richTextBoxAdv.CaretBrush = New SolidColorBrush(Color.FromArgb(&amp;HFF, &amp;H0, &amp;H0, &amp;HFF))
            </code>
            </example> 
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CaretBrushProperty">
            <summary>
            Identifies the CaretBrush dependency property.
            </summary>
            <returns>
            The identifier for the CaretBrush dependency property.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnCaretBrushChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the caret brush has changed.
            </summary>
            <exclude/>
            <param name="dependencyObject">The <see cref="T:Windows.UI.Xaml.DependencyObject"/>.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/>.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectionBrush">
            <summary>
             Gets or sets a brush that describes the selection in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.
            </summary>
            <returns>The brush that paints the selection in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control. The default value is a SolidColorBrush with color of #FF808080.</returns>
            <example>
            <para>The following code example demonstrates how to define the selection brush for <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.</para>
            <code lang="XAML">
            &lt;!-- Defines the SfRichTextBoxAdv control with selection brush as Blue. --&gt; 
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv" SelectionBrush="#FF0000FF"/&gt;
            </code>
            <code lang="C#">
            // Defines the SfRichTextBoxAdv control with selection brush as Blue.
            SfRichTextBoxAdv richTextBoxAdv = new SfRichTextBoxAdv();
            richTextBoxAdv.SelectionBrush = new SolidColorBrush(Color.FromArgb(0xFF, 0x00, 0x00, 0xFF));
            </code>
            <code lang="VB">
            ' Defines the SfRichTextBoxAdv control with selection brush as Blue.
            Dim richTextBoxAdv As New SfRichTextBoxAdv()
            richTextBoxAdv.SelectionBrush = New SolidColorBrush(Color.FromArgb(&amp;HFF, &amp;H0, &amp;H0, &amp;HFF))
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectionBrushProperty">
            <summary>
            Identifies the SelectionBrush dependency property.
            </summary>
            <returns>
            The identifier for the SelectionBrush dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectionOpacity">
            <summary>
            Gets or Sets the Selection Opacity.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectionOpacityProperty">
            <summary>
            Identifies the SelectionOpacity dependency property.
            </summary>
            <returns>
            The identifier for the SelectionOpacity dependency property.
            </returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DefferedScrollingProperty">
            <summary>
            Identifies the DefferedScrolling dependency property.
            </summary>
            <returns>
            The identifier for the DefferedScrolling dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.BoldCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.BoldCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.BoldCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.BoldCommandProperty">
            <summary>
            Identifies the BoldCommand dependency property.
            </summary>
            <returns>
            The identifier for the BoldCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ItalicCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ItalicCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ItalicCommand"/> associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ItalicCommandProperty">
            <summary>
            Identifies the ItalicCommand dependency property.
            </summary>
            <returns>
            The identifier for the ItalicCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FontColorCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FontColorCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FontColorCommand"/> associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FontColorCommandProperty">
            <summary>
            Identifies the FontColorCommand dependency property.
            </summary>
            <returns>
            The identifier for the FontColorCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FontFamilyCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FontFamilyCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FontFamilyCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FontFamilyCommandProperty">
            <summary>
            Identifies the FontFamilyCommand dependency property.
            </summary>
            <returns>
            The identifier for the FontFamilyCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FontSizeCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FontSizeCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FontSizeCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FontSizeCommandProperty">
            <summary>
            Identifies the FontSizeCommand dependency property.
            </summary>
            <returns>
            The identifier for the FontSizeCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.HighlightColorCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.HighlightColorCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.HighlightColorCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.HighlightColorCommandProperty">
            <summary>
            Identifies the HighlightColorCommand dependency property.
            </summary>
            <returns>
            The identifier for the HighlightColorCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.BaselineAlignmentCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.BaselineAlignmentCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.BaselineAlignmentCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.BaselineAlignmentCommandProperty">
            <summary>
            Identifies the BaselineAlignmentCommand dependency property.
            </summary>
            <returns>
            The identifier for the BaselineAlignmentCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.StrikeThroughCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.StrikeThroughCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.StrikeThroughCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.StrikeThroughCommandProperty">
            <summary>
            Identifies the StrikeThroughCommand dependency property.
            </summary>
            <returns>
            The identifier for the StrikeThroughCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.UnderlineCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.UnderlineCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.UnderlineCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.UnderlineCommandProperty">
            <summary>
            Identifies the UnderlineCommand dependency property.
            </summary>
            <returns>
            The identifier for the UnderlineCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.TextAlignmentCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.TextAlignmentCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.TextAlignmentCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.TextAlignmentCommandProperty">
            <summary>
            Identifies the TextAlignmentCommand dependency property.
            </summary>
            <returns>
            The identifier for the TextAlignmentCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.AfterSpacingCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.AfterSpacingCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.AfterSpacingCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.AfterSpacingCommandProperty">
            <summary>
            Identifies the AfterSpacingCommand dependency property.
            </summary>
            <returns>
            The identifier for the AfterSpacingCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.BeforeSpacingCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.BeforeSpacingCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.BeforeSpacingCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.BeforeSpacingCommandProperty">
            <summary>
            Identifies the BeforeSpacingCommand dependency property.
            </summary>
            <returns>
            The identifier for the BeforeSpacingCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LineSpacingTypeCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LineSpacingTypeCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LineSpacingTypeCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LineSpacingTypeCommandProperty">
            <summary>
            Identifies the LineSpacingTypeCommand dependency property.
            </summary>
            <returns>
            The identifier for the LineSpacingTypeCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LineSpacingCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LineSpacingCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LineSpacingCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LineSpacingCommandProperty">
            <summary>
            Identifies the LineSpacingCommand dependency property.
            </summary>
            <returns>
            The identifier for the LineSpacingCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LeftIndentCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LeftIndentCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LeftIndentCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LeftIndentCommandProperty">
            <summary>
            Identifies the LeftIndentCommand dependency property.
            </summary>
            <returns>
            The identifier for the LeftIndentCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.RightIndentCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.RightIndentCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.RightIndentCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.RightIndentCommandProperty">
            <summary>
            Identifies the RightIndentCommand dependency property.
            </summary>
            <returns>
            The identifier for the RightIndentCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CopyCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CopyCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CopyCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CopyCommandProperty">
            <summary>
            Identifies the CopyCommand dependency property.
            </summary>
            <returns>
            The identifier for the CopyCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CutCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CutCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CutCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CutCommandProperty">
            <summary>
            Identifies the CutCommand dependency property.
            </summary>
            <returns>
            The identifier for the CutCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.PasteCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.PasteCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.PasteCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.PasteCommandProperty">
            <summary>
            Identifies the PasteCommand dependency property.
            </summary>
            <returns>
            The identifier for the PasteCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.UndoCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.UndoCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.UndoCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.UndoCommandProperty">
            <summary>
            Identifies the UndoCommand dependency property.
            </summary>
            <returns>
            The identifier for the UndoCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.RedoCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.RedoCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.RedoCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.RedoCommandProperty">
            <summary>
            Identifies the RedoCommand dependency property.
            </summary>
            <returns>
            The identifier for the RedoCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OpenDocumentCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OpenDocumentCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OpenDocumentCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OpenDocumentCommandProperty">
            <summary>
            Identifies the OpenDocumentCommand dependency property.
            </summary>
            <returns>
            The identifier for the OpenDocumentCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.NewDocumentCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.NewDocumentCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.NewDocumentCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.NewDocumentCommandProperty">
            <summary>
            Identifies the NewDocumentCommand dependency property.
            </summary>
            <returns>
            The identifier for the NewDocumentCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SaveDocumentCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SaveDocumentCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SaveDocumentCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SaveDocumentCommandProperty">
            <summary>
            Identifies the SaveDocumentCommand dependency property.
            </summary>
            <returns>
            The identifier for the SaveDocumentCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SaveAsDocumentCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SaveAsDocumentCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SaveAsDocumentCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SaveAsDocumentCommandProperty">
            <summary>
            Identifies the SaveAsDocumentCommand dependency property.
            </summary>
            <returns>
            The identifier for the SaveAsDocumentCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertPictureCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertPictureCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertPictureCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertPictureCommandProperty">
            <summary>
            Identifies the InsertPictureCommand dependency property.
            </summary>
            <returns>
            The identifier for the InsertPictureCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertTableCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertTableCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertTableCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertTableCommandProperty">
            <summary>
            Identifies the InsertTableCommand dependency property.
            </summary>
            <returns>
            The identifier for the InsertTableCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertHyperlinkCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertHyperlinkCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertHyperlinkCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertHyperlinkCommandProperty">
            <summary>
            Identifies the InsertHyperlinkCommand dependency property.
            </summary>
            <returns>
            The identifier for the InsertHyperlinkCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowHyperlinkDialogCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowHyperlinkDialogCommand"/>.
            </summary>
            <value> The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowHyperlinkDialogCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowHyperlinkDialogProperty">
            <summary>
            Identifies the ShowHyperlinkDialogCommand dependency property.
            </summary>
            <returns>
            The identifier for the ShowHyperlinkDialogCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowOptionsPaneCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowOptionsPaneCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowOptionsPaneCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowOptionsPaneCommandProperty">
            <summary>
            Identifies the ShowOptionsPaneCommand dependency property.
            </summary>
            <returns>
            The identifier for the ShowOptionsPaneCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LayoutTypeCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LayoutTypeCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LayoutTypeCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LayoutTypeCommandProperty">
            <summary>
            Identifies the LayoutTypeCommand dependency property.
            </summary>
            <returns>
            The identifier for the LayoutTypeCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowCommentsCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowCommentsCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowCommentsCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowCommentsCommandProperty">
            <summary>
            Identifies the ShowCommentsCommand dependency property.
            </summary>
            <returns>
            The identifier for the ShowCommentsCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.NewCommentCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.NewCommentCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.NewCommentCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.NewCommentCommandProperty">
            <summary>
            Identifies the NewCommentCommand dependency property.
            </summary>
            <returns>
            The identifier for the NewCommentCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DeleteCommentCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DeleteCommentCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DeleteCommentCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DeleteCommentCommandProperty">
            <summary>
            Identifies the DeleteCommentCommand dependency property.
            </summary>
            <returns>
            The identifier for the DeleteCommentCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DeleteAllCommentsCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DeleteAllCommentsCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DeleteAllCommentsCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DeleteAllCommentsCommandProperty">
            <summary>
            Identifies the DeleteAllCommentsCommand dependency property.
            </summary>
            <returns>
            The identifier for the DeleteAllCommentsCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.PreviousCommentCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.PreviousCommentCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.PreviousCommentCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.PreviousCommentCommandProperty">
            <summary>
            Identifies the PreviousCommentCommand dependency property.
            </summary>
            <returns>
            The identifier for the PreviousCommentCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.NextCommentCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.NextCommentCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.NextCommentCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.NextCommentCommandProperty">
            <summary>
            Identifies the NextCommentCommand dependency property.
            </summary>
            <returns>
            The identifier for the NextCommentCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CheckSpellingCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CheckSpellingCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CheckSpellingCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CheckSpellingCommandProperty">
            <summary>
            Identifies the CheckSpellingCommand dependency property.
            </summary>
            <returns>
            The identifier for the CheckSpellingCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ChangeSpellingCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ChangeSpellingCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ChangeSpellingCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ChangeSpellingCommandProperty">
            <summary>
            Identifies the ChangeSpellingCommand dependency property.
            </summary>
            <returns>
            The identifier for the ChangeSpellingCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ChangeAllSpellingCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ChangeAllSpellingCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ChangeAllSpellingCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ChangeAllSpellingCommandProperty">
            <summary>
            Identifies the ChangeAllSpellingCommand dependency property.
            </summary>
            <returns>
            The identifier for the ChangeAllSpellingCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.AddToDictionaryCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.AddToDictionaryCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.AddToDictionaryCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.AddToDictionaryCommandProperty">
            <summary>
            Identifies the AddToDictionaryCommand dependency property.
            </summary>
            <returns>
            The identifier for the AddToDictionaryCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IgnoreAllSpellingErrorsCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IgnoreAllSpellingErrorsCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IgnoreAllSpellingErrorsCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IgnoreAllSpellingErrorsCommandProperty">
            <summary>
            Identifies the IgnoreAllSpellingErrorsCommand dependency property.
            </summary>
            <returns>
            The identifier for the IgnoreAllSpellingErrorsCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowSpellingPaneCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowSpellingPaneCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowSpellingPaneCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ShowSpellingPaneCommandProperty">
            <summary>
            Identifies the ShowSpellingPaneCommand dependency property.
            </summary>
            <returns>
            The identifier for the ShowSpellingPaneCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DocumentTitle">
            <summary>
            Gets or sets the title of the document.
            </summary>
            <value>
            The title of the document
            </value>
            <example>
            <para>The following code example demonstrates how to define the tile for the document in <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.</para>
            <code lang="XAML">
            &lt;!-- Defines the SfRichTextBoxAdv control with title for document. --&gt; 
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv" DocumentTitle="My Notes"/&gt;
            </code>
            <code lang="C#">
            // Defines the SfRichTextBoxAdv control with title for document.
            SfRichTextBoxAdv richTextBoxAdv = new SfRichTextBoxAdv();
            richTextBoxAdv.DocumentTitle = "My Notes";
            </code>
            <code lang="VB">
            ' Defines the SfRichTextBoxAdv control with title for document.
            Dim richTextBoxAdv As New SfRichTextBoxAdv()
            richTextBoxAdv.DocumentTitle = "My Notes"
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DocumentTitleProperty">
            <summary>
            Identifies the DocumentTitle dependency property.
            </summary>
            <returns>
            The identifier for the DocumentTitle dependency property.
            </returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.EnableCursorOnReadOnlyProperty">
            <summary>
            Identifies the EnableCursorOnReadOnly dependency property.
            </summary>
            <returns>
            The identifier for the EnableCursorOnReadOnly dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LayoutType">
            <summary>
            Gets or Sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LayoutType"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LayoutType"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.</value>
            <remarks>The default is <c>LayoutType.Pages</c>.</remarks>
            <example>
            <para>The following code example demonstrates how to define the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control with continuous layout type.</para>
            <code lang="XAML">
            &lt;!-- Defines the SfRichTextBoxAdv control with continuous layout type. --&gt; 
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv" LayoutType="Continuous"/&gt;
            </code>
            <code lang="C#">
            // Defines the SfRichTextBoxAdv control with continuous layout type.
            SfRichTextBoxAdv richTextBoxAdv = new SfRichTextBoxAdv();
            richTextBoxAdv.LayoutType = LayoutType.Continuous;
            </code>
            <code lang="VB">
            ' Defines the SfRichTextBoxAdv control with continuous layout type.
            Dim richTextBoxAdv As New SfRichTextBoxAdv()
            richTextBoxAdv.LayoutType = LayoutType.Continuous
            </code>
            </example>
            <seealso cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LayoutType"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LayoutTypeProperty">
            <summary>
            Identifies the LayoutType dependency property.
            </summary>
            <returns>
            The identifier for the LayoutType dependency property.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnLayoutTypeChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the layout type has changed.
            </summary>
            <exclude/>
            <param name="dependencyObject">The <see cref="T:Windows.UI.Xaml.DependencyObject"/>.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/>.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.TextWrapping">
            <summary>
            Gets or Sets the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.TextWrapping"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.TextWrapping"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.</value>
            <remarks>The default is <c>TextWrapping.Wrap</c>.</remarks>
            <example>
            <para>The following code example demonstrates how to shows Text Wrapping with  NoWrap  <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control with Flow Layout </para>
            <code lang="XAML">
            &lt;!-- Defines the SfRichTextBoxAdv control with text wrapping style as none. --&gt; 
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv" LayoutType="Continuous" TextWrapping="NoWrap"/&gt;
            </code>
            <code lang="C#">
            // Defines the SfRichTextBoxAdv control with text wrapping style as none..
            SfRichTextBoxAdv richTextBoxAdv = new SfRichTextBoxAdv();
            richTextBoxAdv.LayoutType = LayoutType.Continuous;
            richTextBoxAdv.TextWrapping = TextWrapping.NoWrap;
            </code>
            <code lang="VB">
            ' Defines the SfRichTextBoxAdv control with text wrapping style as none..
            Dim richTextBoxAdv As New SfRichTextBoxAdv()
            richTextBoxAdv.LayoutType = LayoutType.Continuous
            richTextBoxAdv.TextWrapping = TextWrapping.NoWrap
            </code>
            </example>
            <seealso cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.TextWrapping"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.TextWrappingProperty">
            <summary>
            Identifies the TextWrapping dependency property.
            </summary>
            <returns>
            The identifier for the TextWrapping dependency property.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnTextWrappingChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the text wrapping has changed.
            </summary>
            <exclude/>
            <param name="dependencyObject">The <see cref="T:Windows.UI.Xaml.DependencyObject"/>.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/>.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FontNames">
            <summary>
            Gets or sets the collection of font names.
            </summary>
            <value>
            The collection of font names.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FontNamesProperty">
            <summary>
            Identifies the FontNames dependency property.
            </summary>
            <returns>
            The identifier for the FontNames dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CurrentPageNumber">
            <summary>
            Gets the current page number.
            </summary>
            <returns>
            If the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control is loaded, then 
            returns the page number of the first page in visible region. Otherwise returns zero.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.PageCount">
            <summary>
            Gets the total number of pages in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.
            </summary>
            <returns>
            Returns the total number of pages, if the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control is loaded.
            Otherwise returns zero.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ZoomFactor">
            <summary>
            Gets or Sets the zoom factor of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.
            </summary>
            <value>The zoom factor of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.</value>
            <remarks>The value should be represented in percentage [between 10 to 500].</remarks>
            <example>
            <para>The following code example demonstrates how to define zoom factor for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.</para>
            <code lang="XAML">
            &lt;!-- Defines the SfRichTextBoxAdv control with zoom factor as 200%. --&gt; 
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv" ZoomFactor="200"/&gt;
            </code>
            <code lang="C#">
            // Defines the SfRichTextBoxAdv control with zoom factor as 200%.
            SfRichTextBoxAdv richTextBoxAdv = new SfRichTextBoxAdv();
            richTextBoxAdv.ZoomFactor = 200;
            </code>
            <code lang="VB">
            ' Defines the SfRichTextBoxAdv control with zoom factor as 200%.
            Dim richTextBoxAdv As New SfRichTextBoxAdv()
            richTextBoxAdv.ZoomFactor = 200
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ZoomFactorProperty">
            <summary>
            Identifies the ZoomFactor dependency property.
            </summary>
            <returns>
            The identifier for the ZoomFactor dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ParagraphDialogCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ParagraphDialogCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ParagraphDialogCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ParagraphDialogCommandProperty">
            <summary>
            Identifies the ParagraphDialogCommand dependency property.
            </summary>
            <returns>
            The identifier for the ParagraphDialogCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertTableDialogCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertTableDialogCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertTableDialogCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertTableDialogCommandProperty">
            <summary>
            Identifies the InsertTableDialogCommand dependency property.
            </summary>
            <returns>
            The identifier for the InsertTableDialogCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FontDialogCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FontDialogCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FontDialogCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FontDialogCommandProperty">
            <summary>
            Identifies the FontDialogCommand dependency property.
            </summary>
            <returns>
            The identifier for the FontDialogCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ChangeListTypeCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ChangeListTypeCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ChangeListTypeCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ChangeListTypeCommandProperty">
            <summary>
            Identifies the ChangeListTypeCommand dependency property.
            </summary>
            <returns>
            The identifier for the ChangeListTypeCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IncreaseIndentCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IncreaseIndentCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IncreaseIndentCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IncreaseIndentCommandProperty">
            <summary>
            Identifies the IncreaseIndentCommand dependency property.
            </summary>
            <returns>
            The identifier for the IncreaseIndentCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DecreaseIndentCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DecreaseIndentCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DecreaseIndentCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DecreaseIndentCommandProperty">
            <summary>
            Identifies the DecreaseIndentCommand dependency property.
            </summary>
            <returns>
            The identifier for the DecreaseIndentCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertRowCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertRowCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertRowCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertRowCommandProperty">
            <summary>
            Identifies the InsertRowCommand dependency property.
            </summary>
            <returns>
            The identifier for the InsertRowCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertColumnCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertColumnCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertColumnCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.InsertColumnCommandProperty">
            <summary>
            Identifies the InsertColumnCommand dependency property.
            </summary>
            <returns>
            The identifier for the InsertColumnCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DeleteRowCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DeleteRowCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DeleteRowCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DeleteRowCommandProperty">
            <summary>
            Identifies the DeleteRowCommand dependency property.
            </summary>
            <returns>
            The identifier for the DeleteRowCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DeleteColumnCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DeleteColumnCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DeleteColumnCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DeleteColumnCommandProperty">
            <summary>
            Identifies the DeleteColumnCommand dependency property.
            </summary>
            <returns>
            The identifier for the DeleteColumnCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DeleteTableCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DeleteTableCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DeleteTableCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DeleteTableCommandProperty">
            <summary>
            Identifies the DeleteTableCommand dependency property.
            </summary>
            <returns>
            The identifier for the DeleteTableCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectCellCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectCellCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectCellCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectCellCommandProperty">
            <summary>
            Identifies the SelectCellCommand dependency property.
            </summary>
            <returns>
            The identifier for the SelectCellCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectRowCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectRowCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectRowCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectRowCommandProperty">
            <summary>
            Identifies the SelectRowCommand dependency property.
            </summary>
            <returns>
            The identifier for the SelectRowCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectColumnCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectColumnCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectColumnCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectColumnCommandProperty">
            <summary>
            Identifies the SelectColumnCommand dependency property.
            </summary>
            <returns>
            The identifier for the SelectColumnCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectTableCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectTableCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectTableCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectTableCommandProperty">
            <summary>
            Identifies the SelectTableCommand dependency property.
            </summary>
            <returns>
            The identifier for the SelectTableCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.MergeSelectedCellsCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.MergeSelectedCellsCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.MergeSelectedCellsCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.MergeSelectedCellsCommandProperty">
            <summary>
            Identifies the MergeSelectedCellsCommand dependency property.
            </summary>
            <returns>
            The identifier for the MergeSelectedCellsCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DefaultCellBottomMarginCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DefaultCellBottomMarginCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DefaultCellBottomMarginCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DefaultCellBottomMarginCommandProperty">
            <summary>
            Identifies the DefaultCellBottomMarginCommand dependency property.
            </summary>
            <returns>
            The identifier for the DefaultCellBottomMarginCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DefaultCellTopMarginCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DefaultCellTopMarginCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DefaultCellTopMarginCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DefaultCellTopMarginCommandProperty">
            <summary>
            Identifies the DefaultCellTopMarginCommand dependency property.
            </summary>
            <returns>
            The identifier for the DefaultCellTopMarginCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DefaultCellRightMarginCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DefaultCellRightMarginCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DefaultCellRightMarginCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DefaultCellRightMarginCommandProperty">
            <summary>
            Identifies the DefaultCellRightMarginCommand dependency property.
            </summary>
            <returns>
            The identifier for the DefaultCellRightMarginCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DefaultCellLeftMarginCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DefaultCellLeftMarginCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DefaultCellLeftMarginCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DefaultCellLeftMarginCommandProperty">
            <summary>
            Identifies the DefaultCellLeftMarginCommand dependency property.
            </summary>
            <returns>
            The identifier for the DefaultCellLeftMarginCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellBottomMarginCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellBottomMarginCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellBottomMarginCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellBottomMarginCommandProperty">
            <summary>
            Identifies the CellBottomMarginCommand dependency property.
            </summary>
            <returns>
            The identifier for the CellBottomMarginCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellTopMarginCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellTopMarginCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellTopMarginCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellTopMarginCommandProperty">
            <summary>
            Identifies the CellTopMarginCommand dependency property.
            </summary>
            <returns>
            The identifier for the CellTopMarginCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellRightMarginCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellRightMarginCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellRightMarginCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellRightMarginCommandProperty">
            <summary>
            Identifies the CellRightMarginCommand dependency property.
            </summary>
            <returns>
            The identifier for the CellRightMarginCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellLeftMarginCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellLeftMarginCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellLeftMarginCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellLeftMarginCommandProperty">
            <summary>
            Identifies the CellLeftMarginCommand dependency property.
            </summary>
            <returns>
            The identifier for the CellLeftMarginCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellSpacingCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellSpacingCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellSpacingCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellSpacingCommandProperty">
            <summary>
            Identifies the CellSpacingCommand dependency property.
            </summary>
            <returns>
            The identifier for the CellSpacingCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellVerticalAlignmentCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellVerticalAlignmentCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellVerticalAlignmentCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellVerticalAlignmentCommandProperty">
            <summary>
            Identifies the CellVerticalAlignmentCommand dependency property.
            </summary>
            <returns>
            The identifier for the CellVerticalAlignmentCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellContentAlignmentCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellContentAlignmentCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellContentAlignmentCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CellContentAlignmentCommandProperty">
            <summary>
            Identifies the CellContentAlignmentCommand dependency property.
            </summary>
            <returns>
            The identifier for the CellContentAlignmentCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.TableAlignmentCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.TableAlignmentCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.TableAlignmentCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.TableAlignmentCommandProperty">
            <summary>
            Identifies the TableAlignmentCommand dependency property.
            </summary>
            <returns>
            The identifier for the TableAlignmentCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.TableLeftIndentCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.TableLeftIndentCommand"/>.
            </summary>
            <value>The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.TableLeftIndentCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.TableLeftIndentCommandProperty">
            <summary>
            Identifies the TableLeftIndentCommand dependency property.
            </summary>
            <returns>
            The identifier for the TableLeftIndentCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ChangeTableCellStyleCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ChangeTableCellStyleCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ChangeTableCellStyleCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ChangeTableCellStyleCommandProperty">
            <summary>
            Identifies the ChangeTableCellStyleCommand dependency property.
            </summary>
            <returns>
            The identifier for the ChangeTableCellStyleCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ChangeTableBorderColorCommand">
            <summary>
            Gets or Sets a value that represents the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ChangeTableBorderColorCommand"/>.
            </summary>
            <value>
            The <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ChangeTableBorderColorCommand"/> instance associated with the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ChangeTableBorderColorCommandProperty">
            <summary>
            Identifies the ChangeTableBorderColorCommand dependency property.
            </summary>
            <returns>
            The identifier for the ChangeTableBorderColorCommand dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IsContextMenuVisible">
            <summary>
            Gets or sets a value indicating whether the context menu needs to be visible .
            </summary>
            <value>True, if context menu can be visible. Otherwise False.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IsContextMenuVisibleProperty">
            <summary>
            Identifies the IsContextMenuVisible dependency property.
            </summary>
            <returns>
            The identifier for the IsContextMenuVisible dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.VerticalScrollBarVisibility">
            <summary>
            Gets or sets a value that indicates whether the vertical scroll bar of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control needs to be visible.
            </summary>
            <value>The vertical scroll bar of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control needs to be visible or not.</value>
            <returns>
            True, if the vertical scroll bar of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control needs to be visible. Otherwise False.
            The default is true.
            </returns>
            <example>
            <para>The following code example demonstrates how to enable or disable vertical scroll bar visibility in <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.</para>
            <code lang="XAML">
            &lt;!-- Defines the SfRichTextBoxAdv control with vertical scroll bar visibility disabled. --&gt; 
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv" VerticalScrollBarVisibility="False"/&gt;
            </code>
            <code lang="C#">
            // Defines the SfRichTextBoxAdv control with vertical scroll bar visibility disabled.
            SfRichTextBoxAdv richTextBoxAdv = new SfRichTextBoxAdv();
            richTextBoxAdv.VerticalScrollBarVisibility = false;
            </code>
            <code lang="VB">
            ' Defines the SfRichTextBoxAdv control with vertical scroll bar visibility disabled.
            Dim richTextBoxAdv As New SfRichTextBoxAdv()
            richTextBoxAdv.VerticalScrollBarVisibility = False
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.VerticalScrollBarVisibilityProperty">
            <summary>
            Identifies the VerticalScrollBarVisibility dependency property.
            </summary>
            <returns>
            The identifier for the VerticalScrollBarVisibility dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.HorizontalScrollBarVisibility">
            <summary>
            Gets or sets a value that indicates whether the horizontal scroll bar of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control needs to be visible.
            </summary>
            <value>The horizontal scroll bar of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control needs to be visible or not.</value>
            <returns>
            True, if the horizontal scroll bar of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control needs to be visible. Otherwise False.
            The default is true.
            </returns>
            <example>
            <para>The following code example demonstrates how to enable or disable horizontal scroll bar visibility in <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.</para>
            <code lang="XAML">
            &lt;!-- Defines the SfRichTextBoxAdv control with horizontal scroll bar visibility disabled. --&gt; 
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv" HorizontalScrollBarVisibility="False"/&gt;
            </code>
            <code lang="C#">
            // Defines the SfRichTextBoxAdv control with horizontal scroll bar visibility disabled.
            SfRichTextBoxAdv richTextBoxAdv = new SfRichTextBoxAdv();
            richTextBoxAdv.HorizontalScrollBarVisibility = false;
            </code>
            <code lang="VB">
            ' Defines the SfRichTextBoxAdv control with horizontal scroll bar visibility disabled.
            Dim richTextBoxAdv As New SfRichTextBoxAdv()
            richTextBoxAdv.HorizontalScrollBarVisibility = False
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.HorizontalScrollBarVisibilityProperty">
            <summary>
            Identifies the HorizontalScrollBarVisibility dependency property.
            </summary>
            <returns>
            The identifier for the HorizontalScrollBarVisibility dependency property.
            </returns>
        </member>
        <member name="E:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.FileLoadingFailed">
            <summary>
            Occurs when the file loading operation is failed in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ContentChanged">
            <summary>
            Occurs when the content is changed in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <remarks>
            This event will be triggered whenever operations such as content insertion, content deletion, formatting changes occur in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </remarks>
        </member>
        <member name="E:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DocumentChanged">
            <summary>
            Occurs when the document is changed in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.RequestNavigate">
            <summary>
            Occurs when hyperlink navigation is requested in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <example>
            <para>The following code example demonstrates how to customize the hyperlink navigation
            when a hyperlink is tapped or clicked by using CTRL key.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:SfRichTextBoxAdv xmlns:RichTextBoxAdv="using:Syncfusion.UI.Xaml.RichTextBoxAdv"
               x:Name="richTextBoxAdv" ManipulationMode="All" RequestNavigate="SfRichTextBoxAdv_RequestNavigate"/&gt;
            </code>
            <code lang="C#">
            public async void SfRichTextBoxAdv_RequestNavigate(object obj, RequestNavigateEventArgs args)
            {
                if (args.Hyperlink.LinkType == HyperlinkType.Webpage || args.Hyperlink.LinkType == HyperlinkType.Email)
                {
                    // If the link is a webpage or e-mail, launces the URI.
                    Uri uri = new Uri(args.Hyperlink.NavigationLink);
                    await Windows.System.Launcher.LaunchUriAsync(uri);
                }
                // If the link to a file.
                else if (args.Hyperlink.LinkType == HyperlinkType.File)
                {
                    // Handle your code here.
                }
            }
            </code>
            <code lang="VB">
            Public Async Sub SfRichTextBoxAdv_RequestNavigate(obj As Object, args As Syncfusion.UI.Xaml.RichTextBoxAdv.RequestNavigateEventArgs)
                If args.Hyperlink.LinkType = HyperlinkType.Webpage OrElse args.Hyperlink.LinkType = HyperlinkType.Email Then
                    ' If the link is a webpage or e-mail, launces the URI.
                    Dim uri As New Uri(args.Hyperlink.NavigationLink)
                    Await Windows.System.Launcher.LaunchUriAsync(uri)
                    ' If the link to a file.
                    ' Handle your code here.
                ElseIf args.Hyperlink.LinkType = HyperlinkType.File Then
                End If
            End Sub
            </code>
            </example>
        </member>
        <member name="E:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectionChanged">
            <summary>
            Occurs when the selection is changed in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.CommentAdding">
             <summary>
             Occurs when the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.CommentAdv"/> is added to the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
             </summary>
             <example>
             <para>The following code example demonstrates how to define author, inital and visual style of the comment.
             when a hyperlink is tapped or clicked by using CTRL key.</para>
             <code lang="XAML">
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv" CommentAdding="RichTextBoxAdv_CommentAdding" /&gt;
             </code>
             <code lang="C#">
             bool isFileLoading = false;
             
             public void RichTextBoxAdv_CommentAdding(object obj, CommentAddingEventArgs args)
             {
                 if (isFileLoading)
                     return;
                 // Defines the author and intial of the comment.
                 CommentAdv commentAdv = args.Comment;
                 commentAdv.Author = "Peter";
                 commentAdv.Initial = "F";
            
                 // Defines the visual style of the comment.
                 CommentVisualStyle visualStyle = args.VisualStyle;
                 visualStyle.BackgroundBrush = new SolidColorBrush(Colors.LightPink);
                 visualStyle.BorderBrush = new SolidColorBrush(Colors.Pink);
                 visualStyle.HighlightColor = Colors.LightPink;
             }
             </code>
             <code lang="VB">
             Dim isFileLoading As Boolean = False
             
             Public Sub RichTextBoxAdv_CommentAdding(obj As Object, args As CommentAddingEventArgs)
                 If isFileLoading Then
                     Return
                 End If
                 ' Defines the author and intial of the comment.
                 Dim commentAdv As CommentAdv = args.Comment
                 commentAdv.Author = "Peter"
                 commentAdv.Initial = "F"
            
                 ' Defines the visual style of the comment.
                 Dim visualStyle As CommentVisualStyle = args.VisualStyle
                 visualStyle.BackgroundBrush = New SolidColorBrush(Colors.LightPink)
                 visualStyle.BorderBrush = New SolidColorBrush(Colors.Pink)
                 visualStyle.HighlightColor = Colors.LightPink
             End Sub
             </code>
             </example>
        </member>
        <member name="E:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ZoomFactorChanged">
            <summary>
            Occurs when the zoom factor is changed in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectionStrokeColor">
            <summary>
            Gets or Sets the stroke value
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SelectionStrokeColorProperty">
            <summary>
            Identifies the SelectionStrokeColor dependency property.
            </summary>
            <returns>
            The identifier for the SelectionStrokeColor dependency property.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnSelectionFillColorChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the selection fill color has changed.
            </summary>
            <exclude/>
            <param name="dependencyObject">The <see cref="T:Windows.UI.Xaml.DependencyObject"/>.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/>.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.Document">
             <summary>
             Gets or Sets the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>.
             </summary>
             <value>
             The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/> instance loaded in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
             </value>
             <example>
             <para>The following code example demonstrates how to define the document for <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/></para>
             <code lang="XAML">
             &lt;!-- Defines the SfRichTextBoxAdv control. --&gt; 
             &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv"&gt;
                 &lt;RichTextBoxAdv:DocumentAdv&gt;
                     &lt;!-- Add any number of sections here. --&gt;
                     &lt;RichTextBoxAdv:SectionAdv&gt;
                         &lt;!-- Add any number of paragraphs and tables here. --&gt;
                         &lt;RichTextBoxAdv:ParagraphAdv&gt;
                             &lt;!-- Add any number of spans, images, comments and hyperlink fields here. --&gt;
                             &lt;RichTextBoxAdv:SpanAdv&gt;Hello World.&lt;/RichTextBoxAdv:SpanAdv&gt;
                         &lt;/RichTextBoxAdv:ParagraphAdv&gt;
                     &lt;/RichTextBoxAdv:SectionAdv&gt;
                 &lt;/RichTextBoxAdv:DocumentAdv&gt;
              &lt;/RichTextBoxAdv:SfRichTextBoxAdv&gt;
             </code>
             <code lang="C#">
             // Defines the control.
             SfRichTextBoxAdv richTextBoxAdv = new SfRichTextBoxAdv();
            
             // Defines the document.
             DocumentAdv documentAdv = new DocumentAdv();
            
             // Defines and adds a section to the document.
             SectionAdv sectionAdv = new SectionAdv();
            
             // Add any number of sections here.
             documentAdv.Sections.Add(sectionAdv);
            
             // Defines and adds a paragraph to the section.
             ParagraphAdv paragraphAdv = new ParagraphAdv();
            
             // Add any number of paragraphs, tables here.
             sectionAdv.Blocks.Add(paragraphAdv);
            
             // Defines and add a span to the paragraph.
             SpanAdv spanAdv = new SpanAdv();
             spanAdv.Text = "Hello world.";
            
             // Add any number of spans, images, comments and hyperlink fields here.
             paragraphAdv.Inlines.Add(spanAdv);
            
             // Defines the document for SfRichTextBoxAdv control.
             richTextBoxAdv.Document = documentAdv;
             </code>
             <code lang="VB">
             ' Defines the control.
             Dim richTextBoxAdv As New SfRichTextBoxAdv()
            
             ' Defines the document.
             Dim documentAdv As New DocumentAdv()
            
             ' Defines and adds a section to the document.
             Dim sectionAdv As New SectionAdv()
            
             ' Add any number of sections here.
             documentAdv.Sections.Add(sectionAdv)
            
             ' Defines and adds a paragraph to the section.
             Dim paragraphAdv As New ParagraphAdv()
            
             ' Add any number of paragraphs, tables here.
             sectionAdv.Blocks.Add(paragraphAdv)
            
             ' Defines and add a span to the paragraph.
             Dim spanAdv As New SpanAdv()
             spanAdv.Text = "Hello world."
            
             ' Add any number of spans, images, comments and hyperlink fields here.
             paragraphAdv.Inlines.Add(spanAdv)
            
             ' Defines the document for SfRichTextBoxAdv control.
             richTextBoxAdv.Document = documentAdv
             </code>
             </example>
             <seealso cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.DocumentAdv"/>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DocumentProperty">
            <summary>
            Identifies the Document dependency property.
            </summary>
            <returns>
            The identifier for the Document dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DisableHistory">
            <summary>
            Gets or Sets a value indicating whether to record Undo/Redo
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.DisableHistoryProperty">
            <summary>
            Identifies the DisableHistory dependency property.
            </summary>
            <returns>
            The identifier for the DisableHistory dependency property.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnDisableHistoryChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the disable history has changed.
            </summary>
            <exclude/>
            <param name="dependencyObject">The <see cref="T:Windows.UI.Xaml.DependencyObject"/>.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnDisableHistoryChanged(Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the disable history has changed.
            </summary>
            <exclude/>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/>.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IsReadOnly">
            <summary>
            Gets or sets the value that determines if the user can change the content in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <value>
            The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> is read-only or not.
            </value>
            <returns>
            True if the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> is read-only. Otherwise False. The default is false.
            </returns>
            <example>
            <para>The following code example demonstrates how to enable or disable read only mode in <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.</para>
            <code lang="XAML">
            &lt;!-- Defines the SfRichTextBoxAdv control with read only mode. --&gt; 
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv" IsReadOnly="True"/&gt;
            </code>
            <code lang="C#">
            // Defines the SfRichTextBoxAdv control with read only mode.
            SfRichTextBoxAdv richTextBoxAdv = new SfRichTextBoxAdv();
            richTextBoxAdv.IsReadOnly = true;
            </code>
            <code lang="VB">
            ' Defines the SfRichTextBoxAdv control with read only mode.
            Dim richTextBoxAdv As New SfRichTextBoxAdv()
            richTextBoxAdv.IsReadOnly = True
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IsReadOnlyProperty">
            <summary>
            Identifies the IsReadOnly dependency property.
            </summary>
            <returns>
            The identifier for the IsReadOnly dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IsTextPredictionEnabled">
            <summary>
            Gets or sets a value indicating whether the text prediction is enabled in <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.
            </summary>
            <value>
            True if text prediction is enabled. Otherwise False. The default is true.
            </value>
            <example>
            <para>The following code example demonstrates how to enable or disable text prediction in <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.</para>
            <code lang="XAML">
            &lt;!-- Defines the SfRichTextBoxAdv control with text prediction disbaled. --&gt; 
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv" IsTextPredictionEnabled="False"/&gt;
            </code>
            <code lang="C#">
            // Defines the SfRichTextBoxAdv control with text prediction disabled.
            SfRichTextBoxAdv richTextBoxAdv = new SfRichTextBoxAdv();
            richTextBoxAdv.IsTextPredictionEnabled = false;
            </code>
            <code lang="VB">
            ' Defines the SfRichTextBoxAdv control with text prediction disabled.
            Dim richTextBoxAdv As New SfRichTextBoxAdv()
            richTextBoxAdv.IsTextPredictionEnabled = False
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IsTextPredictionEnabledProperty">
            <summary>
            Identifies the IsTextPredictionEnabled dependency property.
            </summary>
            <returns>
            The identifier for the IsTextPredictionEnabled dependency property.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnIsTextPredictionEnabledChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [is text prediction enabled changed].
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IsZoomEnabled">
            <summary>
            Get or Sets a value that indicates whether zooming needs to be enabled in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <value>
            Zoom is enabled in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>  is enabled or not.
            </value>
            <returns>
            True, if zoom is enabled in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>. Otherwise False. The default is true.
            </returns>
            <example>
            <para>The following code example demonstrates how to enable or disable zooming operation in <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.</para>
            <code lang="XAML">
            &lt;!-- Defines the SfRichTextBoxAdv control with zooming operation disabled. --&gt; 
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv" IsZoomEnabled="False"/&gt;
            </code>
            <code lang="C#">
            // Defines the SfRichTextBoxAdv control with zooming operation disabled.
            SfRichTextBoxAdv richTextBoxAdv = new SfRichTextBoxAdv();
            richTextBoxAdv.IsZoomEnabled = false;
            </code>
            <code lang="VB">
            ' Defines the SfRichTextBoxAdv control with zooming operation disabled.
            Dim richTextBoxAdv As New SfRichTextBoxAdv()
            richTextBoxAdv.IsZoomEnabled = False
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IsZoomEnabledProperty">
            <summary>
            Identifies the IsZoomEnabled dependency property.
            </summary>
            <returns>
            The identifier for the IsZoomEnabled dependency property.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ScrollBarIndicatorMode">
            <summary>
            Get or Sets the <see cref="T:Windows.UI.Xaml.Controls.Primitives.ScrollingIndicatorMode"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.
            </summary>
            <value>
            The <see cref="T:Windows.UI.Xaml.Controls.Primitives.ScrollingIndicatorMode"/> of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.
            </value>
            <example>
            <para>The following code example demonstrates how to specify the scroll bar indicator mode for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.</para>
            <code lang="XAML">
            &lt;!-- Defines the SfRichTextBoxAdv control with touch scroll bar indicator mode. --&gt; 
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv" ScrollBarIndicatorMode="TouchIndicator"/&gt;
            </code>
            <code lang="C#">
            // Defines the SfRichTextBoxAdv control with touch scroll bar indicator mode.
            SfRichTextBoxAdv richTextBoxAdv = new SfRichTextBoxAdv();
            richTextBoxAdv.ScrollBarIndicatorMode = ScrollingIndicatorMode.TouchIndicator;
            </code>
            <code lang="VB">
            ' Defines the SfRichTextBoxAdv control with touch scroll bar indicator mode.
            Dim richTextBoxAdv As New SfRichTextBoxAdv()
            richTextBoxAdv.ScrollBarIndicatorMode = ScrollingIndicatorMode.TouchIndicator
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.ScrollBarIndicatorModeProperty">
            <summary>
            Identifies the ScrollBarIndicatorMode dependency property.
            </summary>
            <returns>
            The identifier for the ScrollBarIndicatorMode dependency property.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnScrollBarIndicatorModeChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the scroll bar indicator mode has changed.
            </summary>
            <param name="dependencyObject">The <see cref="T:Windows.UI.Xaml.DependencyObject"/>.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/>.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.EnableRadialMenu">
            <summary>
            Gets or sets a value that indicates whether built-in radial menu of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control needs to be enabled.
            </summary>
            <value>
            The built-in radial menu of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control needs to be enabled or not.
            </value>
            <returns>
            True, if the built-in radial menu is enabled in the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control. Otherwise False.
            The default is true.
            </returns>
            <example>
            <para>The following code example demonstrates how to enable or disable built-in radial menu of the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.</para>
            <code lang="XAML">
            &lt;!-- Defines the SfRichTextBoxAdv control with built-in radial menu disabled. --&gt; 
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv" EnableRadialMenu="False"/&gt;
            </code>
            <code lang="C#">
            // Defines the control.
            SfRichTextBoxAdv richTextBoxAdv = new SfRichTextBoxAdv();
            richTextBoxAdv.EnableRadialMenu = false;
            </code>
            <code lang="VB">
            ' Defines the control.
            Dim richTextBoxAdv As New SfRichTextBoxAdv()
            richTextBoxAdv.EnableRadialMenu = False
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.EnableRadialMenuProperty">
            <summary>
            Identifies the EnableRadialMenu dependency property.
            </summary>
            <returns>
            The identifier for the EnableRadialMenu dependency property.
            </returns>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.IsPositionInsideTableProperty">
            <summary>
            Identifies the IsPositionInsideTable dependency property.
            </summary>
            <returns>
            The identifier for the IsPositionInsideTable dependency property.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnBackgroundChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyProperty)">
            <summary>
            Called when background property is changed.
            </summary>
            <param name="sender"></param>
            <param name="dp"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnForegroundChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyProperty)">
            <summary>
            Called when foreground property is changed.
            </summary>
            <param name="sender"></param>
            <param name="dp"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnPaddingChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyProperty)">
            <summary>
            Called when padding property is changed.
            </summary>
            <param name="sender"></param>
            <param name="dp"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnBackgroundChanged">
            <summary>
            Called when Background property is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnForegroundChanged">
            <summary>
            Called when Foreground property is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnPaddingChanged">
            <summary>
            Called when Padding property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OverridesDocumentBackground">
            <summary>
            Gets or sets a value that indicates whether the background of <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> 
            overrides the document background when the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LayoutType"/> is <c>Continuous</c>.
            </summary>
            <remarks>This property affects the background only when the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LayoutType"/> is <c>Continuous</c>.</remarks>
            <returns>
            True if <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> background overrides the document background when the <see cref="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.LayoutType"/> is <c>Continuous</c>.
            Otherwise False. The default is false.
            </returns>
            <example>
            <para>The following code example demonstrates how to override the document background in a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.</para>
            <code lang="XAML">
            &lt;!-- Defines the SfRichTextBoxAdv control with document background overridden. --&gt; 
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv" LayoutType="Continuous" Background="#FF808080" OverridesDocumentBackground="True"/&gt;
            </code>
            <code lang="C#">
            // Defines the SfRichTextBoxAdv control with document background overridden.
            SfRichTextBoxAdv richTextBoxAdv = new SfRichTextBoxAdv();
            richTextBoxAdv.LayoutType = LayoutType.Continuous;
            richTextBoxAdv.Background = new SolidColorBrush(Color.FromArgb(0xFF, 0x80, 0x80, 0x80));
            richTextBoxAdv.OverridesDocumentBackground = true;
            </code>
            <code lang="VB">
            ' Defines the SfRichTextBoxAdv control with document background overridden.
            Dim richTextBoxAdv As New SfRichTextBoxAdv()
            richTextBoxAdv.LayoutType = LayoutType.Continuous
            richTextBoxAdv.Background = New SolidColorBrush(Color.FromArgb(&amp;HFF, &amp;H80, &amp;H80, &amp;H80))
            richTextBoxAdv.OverridesDocumentBackground = True
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OverridesDocumentBackgroundProperty">
            <summary>
            Identifies the OverridesDocumentBackground dependency property.
            </summary>
            <returns>
            The identifier for the OverridesDocumentBackground dependency property.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnSelectionStrokeColorChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the selection stroke color has changed.
            </summary>
            <exclude/>
            <param name="dependencyObject">The <see cref="T:Windows.UI.Xaml.DependencyObject"/>.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnSelectionFillColorChanged(Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the selection fill color has changed.
            </summary>
            <exclude/>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnVerticalScrollBarVisibilityChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the vertical scroll bar visibility has changed.
            </summary>
            <exclude/>
            <param name="dependencyObject">The <see cref="T:Windows.UI.Xaml.DependencyObject"/>.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnHorizontalScrollBarVisibilityChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the horizontal scroll bar visibility has changed.
            </summary>
            <exclude/>
            <param name="dependencyObject">The <see cref="T:Windows.UI.Xaml.DependencyObject"/>.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnZoomFactorChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the zoom factor has changed.
            </summary>
            <exclude/>
            <param name="dependencyObject">The <see cref="T:Windows.UI.Xaml.DependencyObject"/>.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnZoomFactorChanged(Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ZoomFactorChanged" /> event.
            </summary>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnIsContextMenuVisibleChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the context menu visible has changed.
            </summary>
            <exclude/>
            <param name="dependencyObject">The <see cref="T:Windows.UI.Xaml.DependencyObject"/>.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnDocumentChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the document has changed.
            </summary>
            <exclude/>
            <param name="dependencyObject">The <see cref="T:Windows.UI.Xaml.DependencyObject"/>.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnDocumentChanged(Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the document factor has changed.
            </summary>
            <exclude/>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnEnableCursorOnReadOnlyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the enable cursor on read only has changed.
            </summary>
            <exclude/>
            <param name="dependencyObject">The <see cref="T:Windows.UI.Xaml.DependencyObject"/>.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnEnableCursorOnReadOnlyChanged(Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the enable cursor on read only has changed.
            </summary>
            <exclude/>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnIsReadOnlyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the read only has changed.
            </summary>
            <exclude/>
            <param name="dependencyObject">The <see cref="T:Windows.UI.Xaml.DependencyObject"/>.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnIsReadOnlyChanged(Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the read only has changed.
            </summary>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnSelectionStrokeColorChanged(Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the selection stroke color has changed.
            </summary>
            <exclude/>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/>.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SpellChecker">
            <summary>
            Gets or Sets a spelling checker for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.
            </summary>
            <value>The spelling checker for the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/>.</value>
            <example>
            <para>The following code example demonstrates how to enable spell checking functionality in a <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control.</para>
            <code lang="XAML">
            &lt;RichTextBoxAdv:SfRichTextBoxAdv x:Name="richTextBoxAdv" xmlns:System="clr-namespace:System;assembly=mscorlib" 
                                                xmlns:RichTextBoxAdv="clr-namespace:Syncfusion.Windows.Controls.RichTextBoxAdv;assembly=Syncfusion.SfRichTextBoxAdv.Wpf"&gt;
                &lt;RichTextBoxAdv:SfRichTextBoxAdv.SpellChecker&gt;
                    &lt;!-- Enables spell checking functionality. --&gt;
                    &lt;RichTextBoxAdv:SpellChecker IsEnabled="True" IgnoreAlphaNumericWords="True" IgnoreURIs="True" IgnoreUppercaseWords="False"&gt;
                        &lt;RichTextBoxAdv:SpellChecker.CustomDictionaries&gt;
                            &lt;!-- Defines the custom dictionaries for spell checking. --&gt;
                            &lt;System:String&gt;../../Assets/Default.dic&lt;/System:String&gt;
                        &lt;/RichTextBoxAdv:SpellChecker.CustomDictionaries&gt;
                    &lt;/RichTextBoxAdv:SpellChecker&gt;
                &lt;/RichTextBoxAdv:SfRichTextBoxAdv.SpellChecker&gt;
            &lt;/RichTextBoxAdv:SfRichTextBoxAdv&gt;
            </code>
            <code lang="C#">
            // Defines the control.
            Syncfusion.Windows.Controls.RichTextBoxAdv.SfRichTextBoxAdv richTextBoxAdv = new Syncfusion.Windows.Controls.RichTextBoxAdv.SfRichTextBoxAdv();
            
            // Enables the spell checking functionality.
            SpellChecker spellChecker = new SpellChecker();
            spellChecker.IsEnabled = true;
            spellChecker.IgnoreAlphaNumericWords = true;
            spellChecker.IgnoreURIs = true;
            spellChecker.IgnoreUppercaseWords = false;
            // Defines the custom dictionaries for spell checking.
            spellChecker.CustomDictionaries.Add("../../Assets/Default.dic");
            
            richTextBoxAdv.SpellChecker = spellChecker;
            </code>
            <code lang="VB">
            ' Defines the control.
            Dim richTextBoxAdv As New Syncfusion.Windows.Controls.RichTextBoxAdv.SfRichTextBoxAdv()
            
            ' Enables the spell checking functionality.
            Dim spellChecker As New SpellChecker()
            spellChecker.IsEnabled = True
            spellChecker.IgnoreAlphaNumericWords = True
            spellChecker.IgnoreURIs = True
            spellChecker.IgnoreUppercaseWords = False
            ' Defines the custom dictionaries for spell checking.
            spellChecker.CustomDictionaries.Add("../../Assets/Default.dic")
            
            richTextBoxAdv.SpellChecker = spellChecker
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.SpellCheckerProperty">
            <summary>
            Identifies the SpellChecker dependency property.
            </summary>
            <returns>
            The identifier for the SpellChecker dependency property.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnSpellCheckerChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the spellchecker changed.
            </summary>
            <param name="dependencyObject">The <see cref="T:Windows.UI.Xaml.DependencyObject"/>.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnSpellCheckerChanged(Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            called when spellchecker changed.
            </summary>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.OnXAMLTextChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called on XAML text changed.
            </summary>
            <exclude/>
            <param name="dependencyObject">The <see cref="T:Windows.UI.Xaml.DependencyObject"/>.</param>
            <param name="args">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/>.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv.AllowDownloadingImages">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control can download the images from the internet.
            </summary>
            <value>
             True, if the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> control can download the images from the internet. Otherwise False. The default is True.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxAdv.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Texts the box adv.
            </summary>
            <param name="richTextBoxAdv">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxAdv"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxAdv.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Called when <see cref="E:System.Windows.UIElement.KeyDown" /> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.TextBoxAdv.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvAutomationPeer">
            <summary>
            This class enables Touch keyboard automatically for RTE control
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvAutomationPeer.#ctor(Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv)">
            <summary>
            Initializes RichTextBoxAdvAutomationPeer
            </summary>
            <param name="owner">The <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.SfRichTextBoxAdv"/> instance to which the <see cref="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvAutomationPeer"/> is associated.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Get Automation Control Type Core
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvAutomationPeer.GetPatternCore(Windows.UI.Xaml.Automation.Peers.PatternInterface)">
            <summary>
            Get Pattern core
            </summary>
            <param name="patternInterface"></param>
            <returns>the object that supports the specified pattern</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvAutomationPeer.GetClassNameCore">
            <summary>
            Get class name core
            </summary>
            <returns>The name of the control class</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvAutomationPeer.Windows#UI#Xaml#Automation#Provider#ITextProvider#DocumentRange">
            <summary>
            Get Document Range
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvAutomationPeer.Windows#UI#Xaml#Automation#Provider#ITextProvider#GetSelection">
            <summary>
            Get Selection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvAutomationPeer.Windows#UI#Xaml#Automation#Provider#ITextProvider#GetVisibleRanges">
            <summary>
            Get Visible ranges
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvAutomationPeer.Windows#UI#Xaml#Automation#Provider#ITextProvider#RangeFromChild(Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple)">
            <summary>
            Get range from child
            </summary>
            <param name="childElement"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvAutomationPeer.Windows#UI#Xaml#Automation#Provider#ITextProvider#RangeFromPoint(Windows.Foundation.Point)">
            <summary>
            Get range from point
            </summary>
            <param name="screenLocation"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvAutomationPeer.Windows#UI#Xaml#Automation#Provider#ITextProvider#SupportedTextSelection">
            <summary>
            Get supported text selection
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvAutomationPeer.Windows#UI#Xaml#Automation#Provider#IValueProvider#IsReadOnly">
            <summary>
            Returns IsReadOnly property
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvAutomationPeer.Windows#UI#Xaml#Automation#Provider#IValueProvider#SetValue(System.String)">
            <summary>
            Set RichTextBoxAdv text value
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvAutomationPeer.Windows#UI#Xaml#Automation#Provider#IValueProvider#Value">
            <summary>
            Get Text value from RichTextBoxAdv
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvAutomationPeer.GetRawElementProviderSimple">
            <summary>
            Get raw element provider simple
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvRangeProvider">
            <summary>
            RichTextBoxAdv range provider
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvRangeProvider.#ctor(System.String,Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvAutomationPeer)">
            <summary>
            Initialize RichTextBoxAdvRangeProvider
            </summary>
            <param name="text"></param>
            <param name="peer"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvRangeProvider.AddToSelection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvRangeProvider.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvRangeProvider.Compare(Windows.UI.Xaml.Automation.Provider.ITextRangeProvider)">
            <summary>
            
            </summary>
            <param name="textRangeProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvRangeProvider.CompareEndpoints(Windows.UI.Xaml.Automation.Text.TextPatternRangeEndpoint,Windows.UI.Xaml.Automation.Provider.ITextRangeProvider,Windows.UI.Xaml.Automation.Text.TextPatternRangeEndpoint)">
            <summary>
            
            </summary>
            <param name="endpoint"></param>
            <param name="textRangeProvider"></param>
            <param name="targetEndpoint"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvRangeProvider.ExpandToEnclosingUnit(Windows.UI.Xaml.Automation.Text.TextUnit)">
            <summary>
            
            </summary>
            <param name="unit"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)">
            <summary>
            
            </summary>
            <param name="attributeId"></param>
            <param name="value"></param>
            <param name="backward"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvRangeProvider.FindText(System.String,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="backward"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvRangeProvider.GetAttributeValue(System.Int32)">
            <summary>
            
            </summary>
            <param name="attributeId"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvRangeProvider.GetBoundingRectangles(System.Double[]@)">
            <summary>
            Gets the bounding rectangles.
            </summary>
            <param name="returnValue">The return value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvRangeProvider.GetChildren">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvRangeProvider.GetEnclosingElement">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvRangeProvider.GetText(System.Int32)">
            <summary>
            
            </summary>
            <param name="maxLength"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvRangeProvider.Move(Windows.UI.Xaml.Automation.Text.TextUnit,System.Int32)">
            <summary>
            
            </summary>
            <param name="unit"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvRangeProvider.MoveEndpointByRange(Windows.UI.Xaml.Automation.Text.TextPatternRangeEndpoint,Windows.UI.Xaml.Automation.Provider.ITextRangeProvider,Windows.UI.Xaml.Automation.Text.TextPatternRangeEndpoint)">
            <summary>
            
            </summary>
            <param name="endpoint"></param>
            <param name="textRangeProvider"></param>
            <param name="targetEndpoint"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvRangeProvider.MoveEndpointByUnit(Windows.UI.Xaml.Automation.Text.TextPatternRangeEndpoint,Windows.UI.Xaml.Automation.Text.TextUnit,System.Int32)">
            <summary>
            
            </summary>
            <param name="endpoint"></param>
            <param name="unit"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvRangeProvider.RemoveFromSelection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvRangeProvider.ScrollIntoView(System.Boolean)">
            <summary>
            
            </summary>
            <param name="alignToTop"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.RichTextBoxAdvRangeProvider.Select">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Syncfusion_SfRichTextBoxAdv_UWP_2015_XamlTypeInfo.XamlMetaDataProvider.GetXamlType(System.Type)">
            <summary>
            GetXamlType(Type)
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Syncfusion_SfRichTextBoxAdv_UWP_2015_XamlTypeInfo.XamlMetaDataProvider.GetXamlType(System.String)">
            <summary>
            GetXamlType(String)
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.RichTextBoxAdv.Syncfusion_SfRichTextBoxAdv_UWP_2015_XamlTypeInfo.XamlMetaDataProvider.GetXmlnsDefinitions">
            <summary>
            GetXmlnsDefinitions()
            </summary>
        </member>
    </members>
</doc>
